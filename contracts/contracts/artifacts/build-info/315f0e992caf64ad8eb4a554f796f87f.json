{
	"id": "315f0e992caf64ad8eb4a554f796f87f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/BatchNFTs.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./ERC721A.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract BatchNFTs is Ownable, ERC721A {\r\n\r\n    uint256 public constant MAX_SUPPLY = 100;\r\n    uint256 public constant MAX_SUPPLY_PER_USER = 5;\r\n    uint256 public constant PRICE_PER_TOKEN = 1 ether;\r\n    uint256 public immutable START_TIME;\r\n    bool public mintPaused; \r\n    string private _baseTokenURI;\r\n\r\n    constructor() ERC721A(\"ERC721A Token\", \"721AT\") {\r\n        START_TIME = block.timestamp;\r\n        mintPaused =  false;\r\n    }\r\n\r\n    function mint(uint256 quantity) external payable {\r\n        require(!mintPaused, \"Mint is paused\");\r\n        require(block.timestamp >= START_TIME, \"Sale not started\");\r\n        require(_totalMinted() + quantity <= MAX_SUPPLY, \"Max Supply Hit\");\r\n        require(_numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER, \"Max Mint per user Reached\");\r\n        require(msg.value >= quantity * PRICE_PER_TOKEN, \"Insufficient Funds\");\r\n        _safeMint(msg.sender, quantity);\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        // Address.sendValue(payable(msg.sender), balance); \r\n        payable(msg.sender).transfer(balance);\r\n\r\n        // (bool success, ) = msg.sender.call{value: address(this).balance}(\"\");\r\n        // require(success, \"Transfer Failed\");\r\n    }\r\n\r\n    function setBaseURI(string calldata baseURI) external onlyOwner {\r\n        _baseTokenURI = baseURI;\r\n    }\r\n\r\n    function _baseURI() internal pure override returns (string memory) {\r\n        return \"https://ipfs.io/ipfs/QmPq58FTVaZukiB6q8SXz1cMiMEEPaBswuykTNkfhWuDNz/\";\r\n    }\r\n\r\n    function pauseMint(bool _paused) external onlyOwner {\r\n        require(!mintPaused, \"Contract paused.\");\r\n        mintPaused = _paused;\r\n    }\r\n}"
			},
			"contracts/contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './interfaces/IERC721A.sol';\r\n\r\n/**\r\n * @dev Interface of ERC721 token receiver.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @title ERC721A\r\n *\r\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\r\n * Non-Fungible Token Standard, including the Metadata extension.\r\n * Optimized for lower gas during batch mints.\r\n *\r\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\r\n * starting from `_startTokenId()`.\r\n *\r\n * Assumptions:\r\n *\r\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // =============================================================\r\n    //                           CONSTANTS\r\n    // =============================================================\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The `Transfer` event signature is given by:\r\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n    // =============================================================\r\n    //                            STORAGE\r\n    // =============================================================\r\n\r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See {_packedOwnershipOf} implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // =============================================================\r\n    //                          CONSTRUCTOR\r\n    // =============================================================\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    // =============================================================\r\n    //                   TOKEN COUNTING OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\r\n        // and it is initialized to `_startTokenId()`.\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    // =============================================================\r\n    //                    ADDRESS DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes\r\n        // of the XOR of all function selectors in the interface.\r\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\r\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    // =============================================================\r\n    //                     OWNERSHIPS OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & _BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an initialized ownership slot\r\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\r\n                        // before an unintialized ownership slot\r\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\r\n                        // Hence, `curr` will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed will be zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      APPROVAL OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) public payable virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted. See {_mint}.\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\r\n     */\r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      TRANSFER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public payable virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token IDs\r\n     * are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token IDs\r\n     * have been transferred. This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * `from` - Previous owner of the given token ID.\r\n     * `to` - Target address that will receive the token.\r\n     * `tokenId` - Token ID to be transferred.\r\n     * `_data` - Optional data to send along with the call.\r\n     *\r\n     * Returns whether the call correctly returned the expected magic value.\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                        MINT OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 toMasked;\r\n            uint256 end = startTokenId + quantity;\r\n\r\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\r\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\r\n            // The assembly, together with the surrounding Solidity code, have been\r\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\r\n            assembly {\r\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n                toMasked := and(to, _BITMASK_ADDRESS)\r\n                // Emit the `Transfer` event.\r\n                log4(\r\n                    0, // Start of data (0, since no data).\r\n                    0, // End of data (0, since no data).\r\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                    0, // `address(0)`.\r\n                    toMasked, // `to`.\r\n                    startTokenId // `tokenId`.\r\n                )\r\n\r\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\r\n                // that overflows uint256 will make the loop run out of gas.\r\n                // The compiler will optimize the `iszero` away for performance.\r\n                for {\r\n                    let tokenId := add(startTokenId, 1)\r\n                } iszero(eq(tokenId, end)) {\r\n                    tokenId := add(tokenId, 1)\r\n                } {\r\n                    // Emit the `Transfer` event. Similar to above.\r\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\r\n                }\r\n            }\r\n            if (toMasked == 0) revert MintToZeroAddress();\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    // =============================================================\r\n    //                        BURN OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                     EXTRA DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    // =============================================================\r\n    //                       OTHER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\r\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\r\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\r\n            let m := add(mload(0x40), 0xa0)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, m)\r\n            // Assign the `str` to the end.\r\n            str := sub(m, 0x20)\r\n            // Zeroize the slot after the string.\r\n            mstore(str, 0)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n}"
			},
			"contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"contracts/contracts/interfaces/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of ERC721A.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the\r\n     * ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    // =============================================================\r\n    //                            STRUCTS\r\n    // =============================================================\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Stores the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\r\n        uint24 extraData;\r\n    }\r\n\r\n    // =============================================================\r\n    //                         TOKEN COUNTERS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                            IERC721\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables\r\n     * (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\r\n     * checking first that contract recipients are aware of the ERC721 protocol\r\n     * to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move\r\n     * this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\r\n     * whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external payable;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // =============================================================\r\n    //                           IERC2309\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\r\n     * (inclusive) is transferred from `from` to `to`, as defined in the\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\r\n     *\r\n     * See {_mintERC2309} for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/BatchNFTs.sol": {
				"BatchNFTs": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY_PER_USER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_PER_TOKEN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "START_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "pauseMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/BatchNFTs.sol\":113:1829  contract BatchNFTs is Ownable, ERC721A {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/contracts/BatchNFTs.sol\":427:552  constructor() ERC721A(\"ERC721A Token\", \"721AT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":5096:5254  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x22a9219b9918a0902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xda, 0x0dcc8c5055)\n  dup2\n  mstore\n  pop\n    /* \"contracts/contracts/Ownable.sol\":963:995  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"contracts/contracts/Ownable.sol\":982:994  _msgSender() */\n  tag_7\n    /* \"contracts/contracts/Ownable.sol\":982:992  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/contracts/Ownable.sol\":982:994  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/contracts/Ownable.sol\":963:981  _transferOwnership */\n  tag_9\n    /* \"contracts/contracts/Ownable.sol\":963:995  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"contracts/contracts/ERC721A.sol\":5163:5168  _name */\n  0x03\n    /* \"contracts/contracts/ERC721A.sol\":5163:5176  _name = name_ */\n  tag_11\n    /* \"contracts/contracts/ERC721A.sol\":5171:5176  name_ */\n  dup4\n    /* \"contracts/contracts/ERC721A.sol\":5163:5168  _name */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5163:5176  _name = name_ */\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":5187:5194  _symbol */\n  0x04\n    /* \"contracts/contracts/ERC721A.sol\":5187:5204  _symbol = symbol_ */\n  tag_13\n    /* \"contracts/contracts/ERC721A.sol\":5197:5204  symbol_ */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5187:5194  _symbol */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5187:5204  _symbol = symbol_ */\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":5646:5653  uint256 */\n  0x00\n    /* \"contracts/contracts/ERC721A.sol\":5215:5228  _currentIndex */\n  0x01\n    /* \"contracts/contracts/ERC721A.sol\":5215:5246  _currentIndex = _startTokenId() */\n  sstore\n  pop\n  pop\n    /* \"contracts/contracts/BatchNFTs.sol\":499:514  block.timestamp */\n  timestamp\n    /* \"contracts/contracts/BatchNFTs.sol\":486:514  START_TIME = block.timestamp */\n  0x80\n  mstore\n    /* \"contracts/contracts/BatchNFTs.sol\":525:535  mintPaused */\n  0x09\n    /* \"contracts/contracts/BatchNFTs.sol\":525:544  mintPaused =  false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/contracts/BatchNFTs.sol\":113:1829  contract BatchNFTs is Ownable, ERC721A {... */\n  jump(tag_26)\n    /* \"contracts/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"contracts/contracts/utils/Context.sol\":736:746  msg.sender */\n  caller\n  swap1\n    /* \"contracts/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"contracts/contracts/Ownable.sol\":2509:2700  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"contracts/contracts/Ownable.sol\":2583:2599  address oldOwner */\n  0x00\n    /* \"contracts/contracts/Ownable.sol\":2602:2608  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/Ownable.sol\":2619:2636  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/contracts/Ownable.sol\":2602:2608  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/contracts/Ownable.sol\":2583:2599  address oldOwner */\n  swap1\n    /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/contracts/Ownable.sol\":2572:2700  {... */\n  pop\n    /* \"contracts/contracts/Ownable.sol\":2509:2700  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_22:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_29:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_30:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_24:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_34:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_35:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_33:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_12:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1555:1652   */\n  tag_42\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_43\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_46:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_44)\n    /* \"#utility.yul\":1776:2439   */\ntag_45:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_49:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_44:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_26:\n    /* \"contracts/contracts/BatchNFTs.sol\":113:1829  contract BatchNFTs is Ownable, ERC721A {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/BatchNFTs.sol\":113:1829  contract BatchNFTs is Ownable, ERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xddaa26ad\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xddaa26ad\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf30e6e77\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7e4831d3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x833b9499\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x32cb6b0c\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x55f804b3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x60f1f878\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x32cb6b0c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":6348:6360  _burnCounter */\n      sload(0x02)\n        /* \"contracts/contracts/ERC721A.sol\":6332:6345  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":6332:6360  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n    tag_7:\n      tag_52\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":161:201  uint256 public constant MAX_SUPPLY = 100 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_57\n        /* \"contracts/contracts/BatchNFTs.sol\":198:201  100 */\n      0x64\n        /* \"contracts/contracts/BatchNFTs.sol\":161:201  uint256 public constant MAX_SUPPLY = 100 */\n      dup2\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":1051:1391  function withdraw() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_52\n      tag_71\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n    tag_10:\n      tag_52\n      tag_73\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":1399:1505  function setBaseURI(string calldata baseURI) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_52\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":208:255  uint256 public constant MAX_SUPPLY_PER_USER = 5 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_57\n        /* \"contracts/contracts/BatchNFTs.sol\":254:255  5 */\n      0x05\n        /* \"contracts/contracts/BatchNFTs.sol\":208:255  uint256 public constant MAX_SUPPLY_PER_USER = 5 */\n      dup2\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":11716:11868  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_46\n      tag_86\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_57\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/contracts/Ownable.sol\":1890:1993  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_52\n      tag_97\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":360:382  bool public mintPaused */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      sload(0x09)\n      tag_34\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":262:311  uint256 public constant PRICE_PER_TOKEN = 1 ether */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_57\n        /* \"contracts/contracts/BatchNFTs.sol\":304:311  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/contracts/BatchNFTs.sol\":262:311  uint256 public constant PRICE_PER_TOKEN = 1 ether */\n      dup2\n      jump\n        /* \"contracts/contracts/Ownable.sol\":1242:1329  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n        /* \"contracts/contracts/Ownable.sol\":1288:1295  address */\n      0x00\n        /* \"contracts/contracts/Ownable.sol\":1315:1321  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/Ownable.sol\":1242:1329  function owner() public view virtual returns (address) {... */\n      jump(tag_46)\n        /* \"contracts/contracts/ERC721A.sol\":10499:10603  function symbol() public view virtual override returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_41\n      tag_112\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":560:1043  function mint(uint256 quantity) external payable {... */\n    tag_20:\n      tag_52\n      tag_115\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_52\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n    tag_22:\n      tag_52\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_41\n      tag_128\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":318:353  uint256 public immutable START_TIME */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_57\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      dup2\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_34\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"contracts/contracts/Ownable.sol\":2148:2349  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_52\n      tag_143\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":1684:1826  function pauseMint(bool _paused) external onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_52\n      tag_147\n      calldatasize\n      0x04\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"contracts/contracts/ERC721A.sol\":9506:9510  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9830:9855  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":9830:9932  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_151\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9907:9932  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":9830:9932  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_151:\n        /* \"contracts/contracts/ERC721A.sol\":9830:10009  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_152\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9984:10009  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":9830:10009  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_152:\n        /* \"contracts/contracts/ERC721A.sol\":9810:10009  return... */\n      swap3\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"contracts/contracts/ERC721A.sol\":10377:10390  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10410:10415  _name */\n      0x03\n        /* \"contracts/contracts/ERC721A.sol\":10403:10415  return _name */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_155\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"contracts/contracts/ERC721A.sol\":16890:16897  address */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":16915:16931  _exists(tokenId) */\n      tag_161\n        /* \"contracts/contracts/ERC721A.sol\":16923:16930  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":16915:16922  _exists */\n      tag_162\n        /* \"contracts/contracts/ERC721A.sol\":16915:16931  _exists(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/contracts/ERC721A.sol\":16910:16974  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_163\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16940:16974  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":16910:16974  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_163:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":16994:17018  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":16994:17009  _tokenApprovals */\n      0x07\n        /* \"contracts/contracts/ERC721A.sol\":16994:17018  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":16994:17024  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_55:\n        /* \"contracts/contracts/ERC721A.sol\":16336:16349  address owner */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":16352:16368  ownerOf(tokenId) */\n      tag_165\n        /* \"contracts/contracts/ERC721A.sol\":16360:16367  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":16352:16359  ownerOf */\n      tag_87\n        /* \"contracts/contracts/ERC721A.sol\":16352:16368  ownerOf(tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/contracts/ERC721A.sol\":16336:16368  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":16385:16413  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":16381:16556  if (_msgSenderERC721A() != owner)... */\n      tag_171\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16433:16477  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_169\n        /* \"contracts/contracts/ERC721A.sol\":16450:16455  owner */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_139\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":16433:16477  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_169:\n        /* \"contracts/contracts/ERC721A.sol\":16428:16556  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_171\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16505:16540  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":16428:16556  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_171:\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":16568:16583  _tokenApprovals */\n      0x07\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":16568:16603  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":16619:16647  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/contracts/ERC721A.sol\":16619:16647  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":16325:16655  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n    tag_64:\n        /* \"contracts/contracts/ERC721A.sol\":20595:20622  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":20625:20652  _packedOwnershipOf(tokenId) */\n      tag_176\n        /* \"contracts/contracts/ERC721A.sol\":20644:20651  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":20625:20643  _packedOwnershipOf */\n      tag_177\n        /* \"contracts/contracts/ERC721A.sol\":20625:20652  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/contracts/ERC721A.sol\":20595:20652  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":20710:20714  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":20669:20714  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":20685:20704  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":20669:20714  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":20665:20751  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_178\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":20723:20751  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":20665:20751  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_178:\n        /* \"contracts/contracts/ERC721A.sol\":20765:20792  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":19561:19585  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":19561:19576  _tokenApprovals */\n      0x07\n        /* \"contracts/contracts/ERC721A.sol\":19561:19585  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":19789:19815  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":19186:19216  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":18879:18907  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/contracts/ERC721A.sol\":19164:19184  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":19161:19217  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/contracts/ERC721A.sol\":20951:21131  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_187\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21044:21087  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_185\n        /* \"contracts/contracts/ERC721A.sol\":21061:21065  from */\n      dup7\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_139\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":21044:21087  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_185:\n        /* \"contracts/contracts/ERC721A.sol\":21039:21131  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_187\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21096:21131  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":21039:21131  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":21148:21164  to == address(0) */\n      dup6\n      and\n        /* \"contracts/contracts/ERC721A.sol\":21144:21196  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_188\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21173:21196  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":21144:21196  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_188:\n        /* \"contracts/contracts/ERC721A.sol\":21345:21360  approvedAddress */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":21342:21502  if approvedAddress {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21485:21486  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":21464:21483  approvedAddressSlot */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":21457:21487  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":21342:21502  if approvedAddress {... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":21882:21906  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":21882:21900  _packedAddressData */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":21882:21906  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":21880:21906  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":21951:21973  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":21949:21973  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":15105:15116  timestamp() */\n      timestamp\n        /* \"contracts/contracts/ERC721A.sol\":15080:15103  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/contracts/ERC721A.sol\":15076:15117  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/contracts/ERC721A.sol\":15063:15126  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/contracts/ERC721A.sol\":22244:22270  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":22244:22261  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":22244:22270  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":22244:22419  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":22539:22586  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"contracts/contracts/ERC721A.sol\":22539:22591  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":22535:23162  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_196\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":22644:22645  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":22634:22645  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/contracts/ERC721A.sol\":22612:22631  uint256 nextTokenId */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":22767:22797  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":22767:22784  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":22767:22797  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":22767:22802  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":22763:23147  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_198\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":22905:22918  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":22890:22901  nextTokenId */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":22890:22918  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":22886:23128  if (nextTokenId != _currentIndex) {... */\n      tag_198\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":23052:23082  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":23052:23069  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":23052:23082  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":23052:23104  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":22886:23128  if (nextTokenId != _currentIndex) {... */\n    tag_198:\n        /* \"contracts/contracts/ERC721A.sol\":22593:23162  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":22535:23162  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_196:\n        /* \"contracts/contracts/ERC721A.sol\":23209:23216  tokenId */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23205:23207  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":23190:23217  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":23199:23203  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":23190:23217  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":20584:23278  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/BatchNFTs.sol\":1051:1391  function withdraw() external onlyOwner {... */\n    tag_71:\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      tag_202\n        /* \"contracts/contracts/Ownable.sol\":1128:1139  _checkOwner */\n      tag_203\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/contracts/BatchNFTs.sol\":1213:1250  payable(msg.sender).transfer(balance) */\n      mload(0x40)\n        /* \"contracts/contracts/BatchNFTs.sol\":1119:1140  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/contracts/BatchNFTs.sol\":1221:1231  msg.sender */\n      caller\n      swap1\n        /* \"contracts/contracts/BatchNFTs.sol\":1213:1250  payable(msg.sender).transfer(balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/contracts/BatchNFTs.sol\":1119:1140  address(this).balance */\n      dup4\n      swap1\n        /* \"contracts/contracts/BatchNFTs.sol\":1101:1116  uint256 balance */\n      0x00\n        /* \"contracts/contracts/BatchNFTs.sol\":1213:1250  payable(msg.sender).transfer(balance) */\n      dup2\n        /* \"contracts/contracts/BatchNFTs.sol\":1101:1116  uint256 balance */\n      dup2\n        /* \"contracts/contracts/BatchNFTs.sol\":1213:1250  payable(msg.sender).transfer(balance) */\n      dup2\n        /* \"contracts/contracts/BatchNFTs.sol\":1119:1140  address(this).balance */\n      dup6\n        /* \"contracts/contracts/BatchNFTs.sol\":1221:1231  msg.sender */\n      dup9\n        /* \"contracts/contracts/BatchNFTs.sol\":1213:1250  payable(msg.sender).transfer(balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n        /* \"contracts/contracts/BatchNFTs.sol\":1090:1391  {... */\n      pop\n        /* \"contracts/contracts/BatchNFTs.sol\":1051:1391  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n    tag_74:\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      tag_208\n        /* \"contracts/contracts/ERC721A.sol\":23537:23541  from */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23543:23545  to */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23547:23554  tokenId */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":23520:23536  safeTransferFrom */\n      tag_125\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_208:\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/BatchNFTs.sol\":1399:1505  function setBaseURI(string calldata baseURI) external onlyOwner {... */\n    tag_79:\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      tag_210\n        /* \"contracts/contracts/Ownable.sol\":1128:1139  _checkOwner */\n      tag_203\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"contracts/contracts/BatchNFTs.sol\":1474:1487  _baseTokenURI */\n      0x0a\n        /* \"contracts/contracts/BatchNFTs.sol\":1474:1497  _baseTokenURI = baseURI */\n      tag_208\n        /* \"contracts/contracts/BatchNFTs.sol\":1490:1497  baseURI */\n      dup3\n      dup5\n        /* \"contracts/contracts/BatchNFTs.sol\":1474:1487  _baseTokenURI */\n      dup4\n        /* \"contracts/contracts/BatchNFTs.sol\":1474:1497  _baseTokenURI = baseURI */\n      tag_213\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":11716:11868  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_87:\n        /* \"contracts/contracts/ERC721A.sol\":11788:11795  address */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":11831:11858  _packedOwnershipOf(tokenId) */\n      tag_152\n        /* \"contracts/contracts/ERC721A.sol\":11850:11857  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":11831:11849  _packedOwnershipOf */\n      tag_177\n        /* \"contracts/contracts/ERC721A.sol\":11831:11858  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_93:\n        /* \"contracts/contracts/ERC721A.sol\":7330:7337  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":7354:7373  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":7350:7410  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_217\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":7382:7410  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":7350:7410  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_217:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":7428:7453  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":7428:7446  _packedAddressData */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":7428:7453  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":1417:1430  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/contracts/ERC721A.sol\":7428:7483  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/Ownable.sol\":1890:1993  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      tag_219\n        /* \"contracts/contracts/Ownable.sol\":1128:1139  _checkOwner */\n      tag_203\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/contracts/Ownable.sol\":1955:1985  _transferOwnership(address(0)) */\n      tag_221\n        /* \"contracts/contracts/Ownable.sol\":1982:1983  0 */\n      0x00\n        /* \"contracts/contracts/Ownable.sol\":1955:1973  _transferOwnership */\n      tag_222\n        /* \"contracts/contracts/Ownable.sol\":1955:1985  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/contracts/Ownable.sol\":1890:1993  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10499:10603  function symbol() public view virtual override returns (string memory) {... */\n    tag_112:\n        /* \"contracts/contracts/ERC721A.sol\":10555:10568  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10588:10595  _symbol */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":10581:10595  return _symbol */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":560:1043  function mint(uint256 quantity) external payable {... */\n    tag_116:\n        /* \"contracts/contracts/BatchNFTs.sol\":629:639  mintPaused */\n      and(0xff, sload(0x09))\n        /* \"contracts/contracts/BatchNFTs.sol\":628:639  !mintPaused */\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":620:658  require(!mintPaused, \"Mint is paused\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8240:8242   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":620:658  require(!mintPaused, \"Mint is paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8222:8243   */\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x0e\n        /* \"#utility.yul\":8259:8277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8252:8282   */\n      mstore\n      shl(0x92, 0x135a5b9d081a5cc81c185d5cd959)\n        /* \"#utility.yul\":8298:8316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8291:8335   */\n      mstore\n        /* \"#utility.yul\":8352:8370   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":620:658  require(!mintPaused, \"Mint is paused\") */\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/contracts/BatchNFTs.sol\":696:706  START_TIME */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"contracts/contracts/BatchNFTs.sol\":677:692  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/BatchNFTs.sol\":677:706  block.timestamp >= START_TIME */\n      lt\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":669:727  require(block.timestamp >= START_TIME, \"Sale not started\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8583:8585   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":669:727  require(block.timestamp >= START_TIME, \"Sale not started\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8565:8586   */\n      mstore\n        /* \"#utility.yul\":8622:8624   */\n      0x10\n        /* \"#utility.yul\":8602:8620   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8595:8625   */\n      mstore\n      shl(0x82, 0x14d85b19481b9bdd081cdd185c9d1959)\n        /* \"#utility.yul\":8641:8659   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8634:8680   */\n      mstore\n        /* \"#utility.yul\":8697:8715   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":669:727  require(block.timestamp >= START_TIME, \"Sale not started\") */\n      tag_232\n        /* \"#utility.yul\":8381:8721   */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":669:727  require(block.timestamp >= START_TIME, \"Sale not started\") */\n    tag_234:\n        /* \"contracts/contracts/BatchNFTs.sol\":198:201  100 */\n      0x64\n        /* \"contracts/contracts/BatchNFTs.sol\":763:771  quantity */\n      dup2\n        /* \"contracts/contracts/BatchNFTs.sol\":746:760  _totalMinted() */\n      tag_237\n        /* \"contracts/contracts/ERC721A.sol\":6741:6754  _currentIndex */\n      sload(0x01)\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":6495:6791  function _totalMinted() internal view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":746:760  _totalMinted() */\n    tag_237:\n        /* \"contracts/contracts/BatchNFTs.sol\":746:771  _totalMinted() + quantity */\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/contracts/BatchNFTs.sol\":746:785  _totalMinted() + quantity <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":738:804  require(_totalMinted() + quantity <= MAX_SUPPLY, \"Max Supply Hit\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9190:9192   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":738:804  require(_totalMinted() + quantity <= MAX_SUPPLY, \"Max Supply Hit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9172:9193   */\n      mstore\n        /* \"#utility.yul\":9229:9231   */\n      0x0e\n        /* \"#utility.yul\":9209:9227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9202:9232   */\n      mstore\n      shl(0x92, 0x13585e0814dd5c1c1b1e48121a5d)\n        /* \"#utility.yul\":9248:9266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9241:9285   */\n      mstore\n        /* \"#utility.yul\":9302:9320   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":738:804  require(_totalMinted() + quantity <= MAX_SUPPLY, \"Max Supply Hit\") */\n      tag_232\n        /* \"#utility.yul\":8988:9326   */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":738:804  require(_totalMinted() + quantity <= MAX_SUPPLY, \"Max Supply Hit\") */\n    tag_241:\n        /* \"contracts/contracts/BatchNFTs.sol\":837:847  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":7634:7641  uint256 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":7662:7687  _packedAddressData[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":7662:7680  _packedAddressData */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":7662:7687  _packedAddressData[owner] */\n      0x20\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":1555:1557  64 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":7662:7687  _packedAddressData[owner] */\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/BatchNFTs.sol\":254:255  5 */\n      0x05\n      swap2\n        /* \"contracts/contracts/BatchNFTs.sol\":823:859  _numberMinted(msg.sender) + quantity */\n      tag_246\n      swap2\n        /* \"contracts/contracts/BatchNFTs.sol\":851:859  quantity */\n      dup5\n      swap2\n        /* \"contracts/contracts/ERC721A.sol\":7662:7712  _packedAddressData[owner] >> _BITPOS_NUMBER_MINTED */\n      shr\n        /* \"contracts/contracts/ERC721A.sol\":1417:1430  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/contracts/ERC721A.sol\":7661:7743  (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"contracts/contracts/BatchNFTs.sol\":823:859  _numberMinted(msg.sender) + quantity */\n      tag_240\n      jump\t// in\n    tag_246:\n        /* \"contracts/contracts/BatchNFTs.sol\":823:882  _numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER */\n      gt\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":815:912  require(_numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER, \"Max Mint per user Reached\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9533:9535   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":815:912  require(_numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER, \"Max Mint per user Reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9515:9536   */\n      mstore\n        /* \"#utility.yul\":9572:9574   */\n      0x19\n        /* \"#utility.yul\":9552:9570   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9545:9575   */\n      mstore\n        /* \"#utility.yul\":9611:9638   */\n      0x4d6178204d696e74207065722075736572205265616368656400000000000000\n        /* \"#utility.yul\":9591:9609   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9584:9639   */\n      mstore\n        /* \"#utility.yul\":9656:9674   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":815:912  require(_numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER, \"Max Mint per user Reached\") */\n      tag_232\n        /* \"#utility.yul\":9331:9680   */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":815:912  require(_numberMinted(msg.sender) + quantity <= MAX_SUPPLY_PER_USER, \"Max Mint per user Reached\") */\n    tag_247:\n        /* \"contracts/contracts/BatchNFTs.sol\":944:970  quantity * PRICE_PER_TOKEN */\n      tag_250\n        /* \"contracts/contracts/BatchNFTs.sol\":304:311  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/contracts/BatchNFTs.sol\":944:952  quantity */\n      dup3\n        /* \"contracts/contracts/BatchNFTs.sol\":944:970  quantity * PRICE_PER_TOKEN */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"contracts/contracts/BatchNFTs.sol\":931:940  msg.value */\n      callvalue\n        /* \"contracts/contracts/BatchNFTs.sol\":931:970  msg.value >= quantity * PRICE_PER_TOKEN */\n      lt\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":923:993  require(msg.value >= quantity * PRICE_PER_TOKEN, \"Insufficient Funds\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10060:10062   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":923:993  require(msg.value >= quantity * PRICE_PER_TOKEN, \"Insufficient Funds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10042:10063   */\n      mstore\n        /* \"#utility.yul\":10099:10101   */\n      0x12\n        /* \"#utility.yul\":10079:10097   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10072:10102   */\n      mstore\n      shl(0x70, 0x496e73756666696369656e742046756e6473)\n        /* \"#utility.yul\":10118:10136   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10111:10159   */\n      mstore\n        /* \"#utility.yul\":10176:10194   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":923:993  require(msg.value >= quantity * PRICE_PER_TOKEN, \"Insufficient Funds\") */\n      tag_232\n        /* \"#utility.yul\":9858:10200   */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":923:993  require(msg.value >= quantity * PRICE_PER_TOKEN, \"Insufficient Funds\") */\n    tag_252:\n        /* \"contracts/contracts/BatchNFTs.sol\":1004:1035  _safeMint(msg.sender, quantity) */\n      tag_255\n        /* \"contracts/contracts/BatchNFTs.sol\":1014:1024  msg.sender */\n      caller\n        /* \"contracts/contracts/BatchNFTs.sol\":1026:1034  quantity */\n      dup3\n        /* \"contracts/contracts/BatchNFTs.sol\":1004:1013  _safeMint */\n      tag_256\n        /* \"contracts/contracts/BatchNFTs.sol\":1004:1035  _safeMint(msg.sender, quantity) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/contracts/BatchNFTs.sol\":560:1043  function mint(uint256 quantity) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_121:\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17467:17506  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17467:17485  _operatorApprovals */\n      0x08\n        /* \"contracts/contracts/ERC721A.sol\":17467:17506  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":17467:17516  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":17467:17527  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17467:17516  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      swap2\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n    tag_125:\n        /* \"contracts/contracts/ERC721A.sol\":24340:24371  transferFrom(from, to, tokenId) */\n      tag_262\n        /* \"contracts/contracts/ERC721A.sol\":24353:24357  from */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24359:24361  to */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24363:24370  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24340:24352  transferFrom */\n      tag_64\n        /* \"contracts/contracts/ERC721A.sol\":24340:24371  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":24386:24400  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/contracts/ERC721A.sol\":24386:24405  to.code.length != 0 */\n      iszero\n        /* \"contracts/contracts/ERC721A.sol\":24382:24565  if (to.code.length != 0)... */\n      tag_266\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":24425:24481  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_264\n        /* \"contracts/contracts/ERC721A.sol\":24456:24460  from */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24462:24464  to */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24466:24473  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24475:24480  _data */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24425:24455  _checkContractOnERC721Received */\n      tag_265\n        /* \"contracts/contracts/ERC721A.sol\":24425:24481  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/contracts/ERC721A.sol\":24420:24565  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_266\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":24509:24549  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":24420:24565  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_266:\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_129:\n        /* \"contracts/contracts/ERC721A.sol\":10782:10795  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10813:10829  _exists(tokenId) */\n      tag_268\n        /* \"contracts/contracts/ERC721A.sol\":10821:10828  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":10813:10820  _exists */\n      tag_162\n        /* \"contracts/contracts/ERC721A.sol\":10813:10829  _exists(tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/contracts/ERC721A.sol\":10808:10867  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_269\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":10838:10867  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":10808:10867  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_269:\n        /* \"contracts/contracts/ERC721A.sol\":10880:10901  string memory baseURI */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":10904:10914  _baseURI() */\n      tag_270\n        /* \"contracts/contracts/ERC721A.sol\":10904:10912  _baseURI */\n      tag_271\n        /* \"contracts/contracts/ERC721A.sol\":10904:10914  _baseURI() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/contracts/ERC721A.sol\":10880:10914  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":10938:10945  baseURI */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":10932:10953  bytes(baseURI).length */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":10957:10958  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":10932:10958  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":10932:11019  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_272\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_273)\n    tag_272:\n        /* \"contracts/contracts/ERC721A.sol\":10985:10992  baseURI */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":10994:11012  _toString(tokenId) */\n      tag_274\n        /* \"contracts/contracts/ERC721A.sol\":11004:11011  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":10994:11003  _toString */\n      tag_275\n        /* \"contracts/contracts/ERC721A.sol\":10994:11012  _toString(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/contracts/ERC721A.sol\":10968:11013  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":10932:11019  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_273:\n        /* \"contracts/contracts/ERC721A.sol\":10925:11019  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":17860:17864  bool */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17884:17902  _operatorApprovals */\n      0x08\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":17884:17919  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/Ownable.sol\":2148:2349  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_144:\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      tag_280\n        /* \"contracts/contracts/Ownable.sol\":1128:1139  _checkOwner */\n      tag_203\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      jump\t// in\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/Ownable.sol\":2237:2259  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/Ownable.sol\":2229:2302  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10908:10910   */\n      0x20\n        /* \"contracts/contracts/Ownable.sol\":2229:2302  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10890:10911   */\n      mstore\n        /* \"#utility.yul\":10947:10949   */\n      0x26\n        /* \"#utility.yul\":10927:10945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10920:10950   */\n      mstore\n        /* \"#utility.yul\":10986:11020   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10966:10984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10959:11021   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11037:11055   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11030:11066   */\n      mstore\n        /* \"#utility.yul\":11083:11102   */\n      0x84\n      add\n        /* \"contracts/contracts/Ownable.sol\":2229:2302  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_232\n        /* \"#utility.yul\":10706:11108   */\n      jump\n        /* \"contracts/contracts/Ownable.sol\":2229:2302  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_282:\n        /* \"contracts/contracts/Ownable.sol\":2313:2341  _transferOwnership(newOwner) */\n      tag_255\n        /* \"contracts/contracts/Ownable.sol\":2332:2340  newOwner */\n      dup2\n        /* \"contracts/contracts/Ownable.sol\":2313:2331  _transferOwnership */\n      tag_222\n        /* \"contracts/contracts/Ownable.sol\":2313:2341  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/contracts/BatchNFTs.sol\":1684:1826  function pauseMint(bool _paused) external onlyOwner {... */\n    tag_149:\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      tag_287\n        /* \"contracts/contracts/Ownable.sol\":1128:1139  _checkOwner */\n      tag_203\n        /* \"contracts/contracts/Ownable.sol\":1128:1141  _checkOwner() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/contracts/BatchNFTs.sol\":1756:1766  mintPaused */\n      and(0xff, sload(0x09))\n        /* \"contracts/contracts/BatchNFTs.sol\":1755:1766  !mintPaused */\n      iszero\n        /* \"contracts/contracts/BatchNFTs.sol\":1747:1787  require(!mintPaused, \"Contract paused.\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11315:11317   */\n      0x20\n        /* \"contracts/contracts/BatchNFTs.sol\":1747:1787  require(!mintPaused, \"Contract paused.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11297:11318   */\n      mstore\n        /* \"#utility.yul\":11354:11356   */\n      0x10\n        /* \"#utility.yul\":11334:11352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11327:11357   */\n      mstore\n      shl(0x81, 0x21b7b73a3930b1ba103830bab9b2b217)\n        /* \"#utility.yul\":11373:11391   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11366:11412   */\n      mstore\n        /* \"#utility.yul\":11429:11447   */\n      0x64\n      add\n        /* \"contracts/contracts/BatchNFTs.sol\":1747:1787  require(!mintPaused, \"Contract paused.\") */\n      tag_232\n        /* \"#utility.yul\":11113:11453   */\n      jump\n        /* \"contracts/contracts/BatchNFTs.sol\":1747:1787  require(!mintPaused, \"Contract paused.\") */\n    tag_289:\n        /* \"contracts/contracts/BatchNFTs.sol\":1798:1808  mintPaused */\n      0x09\n        /* \"contracts/contracts/BatchNFTs.sol\":1798:1818  mintPaused = _paused */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/BatchNFTs.sol\":1684:1826  function pauseMint(bool _paused) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":18185:18467  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_162:\n        /* \"contracts/contracts/ERC721A.sol\":18250:18254  bool */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":18340:18353  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":18330:18337  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":18330:18353  tokenId < _currentIndex */\n      lt\n        /* \"contracts/contracts/ERC721A.sol\":18287:18440  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":18391:18417  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":18391:18408  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":18391:18417  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":18391:18435  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":18391:18440  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":18185:18467  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":12871:14146  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_177:\n        /* \"contracts/contracts/ERC721A.sol\":12938:12945  uint256 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":12973:12980  tokenId */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":13075:13088  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":13068:13072  curr */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":13068:13088  curr < _currentIndex */\n      lt\n        /* \"contracts/contracts/ERC721A.sol\":13064:14079  if (curr < _currentIndex) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":13113:13127  uint256 packed */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":13130:13153  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":13130:13147  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":13130:13153  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":13219:13243  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":13219:13248  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":13215:14060  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_302\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n    tag_303:\n        /* \"contracts/contracts/ERC721A.sol\":13891:13897  packed */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":13901:13902  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":13891:13902  packed == 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n      tag_273\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/contracts/ERC721A.sol\":13962:13968  --curr */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":13944:13969  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":13944:13961  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":13944:13969  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n      jump(tag_303)\n        /* \"contracts/contracts/ERC721A.sol\":13215:14060  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_302:\n        /* \"contracts/contracts/ERC721A.sol\":13090:14079  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":13064:14079  if (curr < _currentIndex) {... */\n    tag_301:\n        /* \"contracts/contracts/ERC721A.sol\":14107:14138  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/Ownable.sol\":1407:1539  function _checkOwner() internal view virtual {... */\n    tag_203:\n        /* \"contracts/contracts/Ownable.sol\":1288:1295  address */\n      0x00\n        /* \"contracts/contracts/Ownable.sol\":1315:1321  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/Ownable.sol\":1471:1494  owner() == _msgSender() */\n      eq\n        /* \"contracts/contracts/Ownable.sol\":1463:1531  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11660:11662   */\n      0x20\n        /* \"contracts/contracts/Ownable.sol\":1463:1531  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11642:11663   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11679:11697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11672:11702   */\n      mstore\n        /* \"#utility.yul\":11738:11772   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11718:11736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11711:11773   */\n      mstore\n        /* \"#utility.yul\":11790:11808   */\n      0x64\n      add\n        /* \"contracts/contracts/Ownable.sol\":1463:1531  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_232\n        /* \"#utility.yul\":11458:11814   */\n      jump\n        /* \"contracts/contracts/Ownable.sol\":2509:2700  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_222:\n        /* \"contracts/contracts/Ownable.sol\":2583:2599  address oldOwner */\n      0x00\n        /* \"contracts/contracts/Ownable.sol\":2602:2608  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/Ownable.sol\":2619:2636  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/contracts/Ownable.sol\":2602:2608  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/contracts/Ownable.sol\":2583:2599  address oldOwner */\n      swap1\n        /* \"contracts/contracts/Ownable.sol\":2652:2692  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/contracts/Ownable.sol\":2572:2700  {... */\n      pop\n        /* \"contracts/contracts/Ownable.sol\":2509:2700  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":34325:34437  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_256:\n        /* \"contracts/contracts/ERC721A.sol\":34402:34429  _safeMint(to, quantity, '') */\n      tag_206\n        /* \"contracts/contracts/ERC721A.sol\":34412:34414  to */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":34416:34424  quantity */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":34402:34429  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":34402:34411  _safeMint */\n      tag_326\n        /* \"contracts/contracts/ERC721A.sol\":34402:34429  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":26656:27372  function _checkContractOnERC721Received(... */\n    tag_265:\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":26819:26823  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":26840:26885  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_329\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26907:26911  from */\n      dup10\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26913:26920  tokenId */\n      dup9\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26922:26927  _data */\n      dup9\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_330\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_331\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_332\n      swap2\n      dup2\n      add\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      0x01\n    tag_331:\n        /* \"contracts/contracts/ERC721A.sol\":26836:27365  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_334\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_339\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_338)\n    tag_339:\n      0x60\n      swap2\n      pop\n    tag_338:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":27123:27129  reason */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":27123:27136  reason.length */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":27140:27141  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":27123:27141  reason.length == 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":27119:27354  if (reason.length == 0) {... */\n      tag_340\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":27169:27209  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":27119:27354  if (reason.length == 0) {... */\n    tag_340:\n        /* \"contracts/contracts/ERC721A.sol\":27312:27318  reason */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":27306:27319  mload(reason) */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":27297:27303  reason */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":27293:27295  32 */\n      0x20\n        /* \"contracts/contracts/ERC721A.sol\":27289:27304  add(32, reason) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":27282:27320  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":26836:27365  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_334:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":26999:27063  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":26656:27372  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/BatchNFTs.sol\":1513:1676  function _baseURI() internal pure override returns (string memory) {... */\n    tag_271:\n        /* \"contracts/contracts/BatchNFTs.sol\":1565:1578  string memory */\n      0x60\n        /* \"contracts/contracts/BatchNFTs.sol\":1591:1668  return \"https://ipfs.io/ipfs/QmPq58FTVaZukiB6q8SXz1cMiMEEPaBswuykTNkfhWuDNz/\" */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x44\n      dup2\n      mstore\n      0x20\n      add\n      data_a7eb0451a604c4dc108fec9b71a0e76d6307ea82c680c4246676e81f6657eff4\n      0x44\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/contracts/BatchNFTs.sol\":1513:1676  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":40700:42445  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_275:\n        /* \"contracts/contracts/ERC721A.sol\":40765:40782  string memory str */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":41199:41203  0xa0 */\n      0xa0\n        /* \"contracts/contracts/ERC721A.sol\":41192:41196  0x40 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":41186:41197  mload(0x40) */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":41182:41204  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":41291:41292  m */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41285:41289  0x40 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":41278:41293  mstore(0x40, m) */\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":41366:41370  0x20 */\n      0x20\n        /* \"contracts/contracts/ERC721A.sol\":41363:41364  m */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":41359:41371  sub(m, 0x20) */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":41352:41371  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":41448:41449  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":41443:41446  str */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":41436:41450  mstore(str, 0) */\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":41552:41555  str */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41791:41796  value */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":41773:42201  for { let temp := value } 1 {} {... */\n    tag_345:\n        /* \"contracts/contracts/ERC721A.sol\":41839:41840  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":41834:41837  str */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":41830:41841  sub(str, 1) */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":41823:41841  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":42010:42012  10 */\n      0x0a\n        /* \"contracts/contracts/ERC721A.sol\":42004:42008  temp */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":42000:42013  mod(temp, 10) */\n      mod\n        /* \"contracts/contracts/ERC721A.sol\":41996:41998  48 */\n      0x30\n        /* \"contracts/contracts/ERC721A.sol\":41992:42014  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":41987:41990  str */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":41979:42015  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/contracts/ERC721A.sol\":42104:42106  10 */\n      0x0a\n        /* \"contracts/contracts/ERC721A.sol\":42094:42107  div(temp, 10) */\n      swap1\n      div\n        /* \"contracts/contracts/ERC721A.sol\":42161:42186  if iszero(temp) { break } */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41773:42201  for { let temp := value } 1 {} {... */\n      tag_345\n        /* \"contracts/contracts/ERC721A.sol\":42161:42186  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":42231:42244  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"contracts/contracts/ERC721A.sol\":42346:42360  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/ERC721A.sol\":42408:42427  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":42346:42360  sub(str, 0x20) */\n      swap2\n        /* \"contracts/contracts/ERC721A.sol\":40700:42445  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":33552:34241  function _safeMint(... */\n    tag_326:\n        /* \"contracts/contracts/ERC721A.sol\":33683:33702  _mint(to, quantity) */\n      tag_352\n        /* \"contracts/contracts/ERC721A.sol\":33689:33691  to */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":33693:33701  quantity */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":33683:33688  _mint */\n      tag_353\n        /* \"contracts/contracts/ERC721A.sol\":33683:33702  _mint(to, quantity) */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":33744:33758  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/contracts/ERC721A.sol\":33744:33763  to.code.length != 0 */\n      iszero\n        /* \"contracts/contracts/ERC721A.sol\":33740:34223  if (to.code.length != 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":33798:33811  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":33846:33860  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":33879:34112  do {... */\n    tag_355:\n        /* \"contracts/contracts/ERC721A.sol\":33910:33972  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_358\n        /* \"contracts/contracts/ERC721A.sol\":33949:33950  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":33953:33955  to */\n      dup7\n        /* \"contracts/contracts/ERC721A.sol\":33957:33964  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":33966:33971  _data */\n      dup7\n        /* \"contracts/contracts/ERC721A.sol\":33910:33940  _checkContractOnERC721Received */\n      tag_265\n        /* \"contracts/contracts/ERC721A.sol\":33910:33972  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_358:\n        /* \"contracts/contracts/ERC721A.sol\":33905:34072  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_359\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":34008:34048  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":33905:34072  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_359:\n        /* \"contracts/contracts/ERC721A.sol\":34107:34110  end */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":34099:34104  index */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":34099:34110  index < end */\n      lt\n        /* \"contracts/contracts/ERC721A.sol\":33879:34112  do {... */\n      tag_355\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":34194:34197  end */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":34177:34190  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":34177:34197  _currentIndex != end */\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":34173:34207  if (_currentIndex != end) revert() */\n      tag_360\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":34199:34207  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":34173:34207  if (_currentIndex != end) revert() */\n    tag_360:\n        /* \"contracts/contracts/ERC721A.sol\":33765:34223  {... */\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":33552:34241  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":27834:30800  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_353:\n        /* \"contracts/contracts/ERC721A.sol\":27930:27943  _currentIndex */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":27907:27927  uint256 startTokenId */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":27958:27971  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":27954:27998  if (quantity == 0) revert MintZeroQuantity() */\n      tag_362\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":27980:27998  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":27954:27998  if (quantity == 0) revert MintZeroQuantity() */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":28486:28508  _packedAddressData[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":28486:28504  _packedAddressData */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":28486:28508  _packedAddressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":1555:1557  64 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":28486:28508  _packedAddressData[to] */\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":28486:28557  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":28524:28556  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"contracts/contracts/ERC721A.sol\":28512:28557  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup9\n      mul\n        /* \"contracts/contracts/ERC721A.sol\":28486:28557  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":28800:28831  _packedOwnerships[startTokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":28800:28817  _packedOwnerships */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":28800:28831  _packedOwnerships[startTokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":15536:15551  eq(quantity, 1) */\n      dup6\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":15510:15534  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"contracts/contracts/ERC721A.sol\":15506:15552  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"contracts/contracts/ERC721A.sol\":15105:15116  timestamp() */\n      timestamp\n        /* \"contracts/contracts/ERC721A.sol\":15080:15103  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/contracts/ERC721A.sol\":15076:15117  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/contracts/ERC721A.sol\":15073:15125  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/contracts/ERC721A.sol\":15063:15126  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup4\n      or\n        /* \"contracts/contracts/ERC721A.sol\":28800:28973  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":29035:29058  startTokenId + quantity */\n      dup3\n      dup5\n      add\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":28800:28831  _packedOwnerships[startTokenId] */\n      dup4\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":28486:28508  _packedAddressData[to] */\n      dup4\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":29800:29825  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/contracts/ERC721A.sol\":28486:28508  _packedAddressData[to] */\n      dup2\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":29653:29988  log4(... */\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":30314:30315  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":30300:30312  startTokenId */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":30296:30316  add(startTokenId, 1) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":30254:30600  for {... */\n    tag_368:\n        /* \"contracts/contracts/ERC721A.sol\":30355:30358  end */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":30346:30353  tokenId */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":30343:30359  eq(tokenId, end) */\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":30254:30600  for {... */\n      tag_370\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":30573:30580  tokenId */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":30563:30571  toMasked */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":30560:30561  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":30533:30558  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/contracts/ERC721A.sol\":30530:30531  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":30527:30528  0 */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":30522:30581  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":30408:30409  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":30395:30410  add(tokenId, 1) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":30254:30600  for {... */\n      jump(tag_368)\n    tag_370:\n        /* \"contracts/contracts/ERC721A.sol\":30258:30335  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":30633:30641  toMasked */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":30645:30646  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":30633:30646  toMasked == 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":30629:30674  if (toMasked == 0) revert MintToZeroAddress() */\n      tag_371\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":30655:30674  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":30629:30674  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_371:\n        /* \"contracts/contracts/ERC721A.sol\":30691:30704  _currentIndex */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":30691:30710  _currentIndex = end */\n      sstore\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_374:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_36:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_388:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_273\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_374\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_375:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_392:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_392)\n    tag_394:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_376:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_396\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_375\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_44:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_273\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_376\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_48:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_377:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_403:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_54:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_405:\n        /* \"#utility.yul\":2087:2116   */\n      tag_406\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_377\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_63:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_409:\n        /* \"#utility.yul\":2545:2574   */\n      tag_410\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_377\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_411\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_377\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:3285   */\n    tag_78:\n        /* \"#utility.yul\":2764:2770   */\n      0x00\n        /* \"#utility.yul\":2772:2778   */\n      dup1\n        /* \"#utility.yul\":2825:2827   */\n      0x20\n        /* \"#utility.yul\":2813:2822   */\n      dup4\n        /* \"#utility.yul\":2804:2811   */\n      dup6\n        /* \"#utility.yul\":2800:2823   */\n      sub\n        /* \"#utility.yul\":2796:2828   */\n      slt\n        /* \"#utility.yul\":2793:2845   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2838:2839   */\n      dup1\n        /* \"#utility.yul\":2831:2843   */\n      revert\n        /* \"#utility.yul\":2793:2845   */\n    tag_413:\n        /* \"#utility.yul\":2881:2890   */\n      dup3\n        /* \"#utility.yul\":2868:2891   */\n      calldataload\n        /* \"#utility.yul\":2910:2928   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2951:2953   */\n      dup1\n        /* \"#utility.yul\":2943:2949   */\n      dup3\n        /* \"#utility.yul\":2940:2954   */\n      gt\n        /* \"#utility.yul\":2937:2971   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2964:2965   */\n      dup1\n        /* \"#utility.yul\":2957:2969   */\n      revert\n        /* \"#utility.yul\":2937:2971   */\n    tag_414:\n        /* \"#utility.yul\":3005:3011   */\n      dup2\n        /* \"#utility.yul\":2994:3003   */\n      dup6\n        /* \"#utility.yul\":2990:3012   */\n      add\n        /* \"#utility.yul\":2980:3012   */\n      swap2\n      pop\n        /* \"#utility.yul\":3050:3057   */\n      dup6\n        /* \"#utility.yul\":3043:3047   */\n      0x1f\n        /* \"#utility.yul\":3039:3041   */\n      dup4\n        /* \"#utility.yul\":3035:3048   */\n      add\n        /* \"#utility.yul\":3031:3058   */\n      slt\n        /* \"#utility.yul\":3021:3076   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3072:3073   */\n      0x00\n        /* \"#utility.yul\":3069:3070   */\n      dup1\n        /* \"#utility.yul\":3062:3074   */\n      revert\n        /* \"#utility.yul\":3021:3076   */\n    tag_415:\n        /* \"#utility.yul\":3112:3114   */\n      dup2\n        /* \"#utility.yul\":3099:3115   */\n      calldataload\n        /* \"#utility.yul\":3138:3140   */\n      dup2\n        /* \"#utility.yul\":3130:3136   */\n      dup2\n        /* \"#utility.yul\":3127:3141   */\n      gt\n        /* \"#utility.yul\":3124:3158   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3151:3152   */\n      dup1\n        /* \"#utility.yul\":3144:3156   */\n      revert\n        /* \"#utility.yul\":3124:3158   */\n    tag_416:\n        /* \"#utility.yul\":3199:3206   */\n      dup7\n        /* \"#utility.yul\":3194:3196   */\n      0x20\n        /* \"#utility.yul\":3185:3191   */\n      dup3\n        /* \"#utility.yul\":3181:3183   */\n      dup6\n        /* \"#utility.yul\":3177:3192   */\n      add\n        /* \"#utility.yul\":3173:3197   */\n      add\n        /* \"#utility.yul\":3170:3207   */\n      gt\n        /* \"#utility.yul\":3167:3224   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3220:3221   */\n      0x00\n        /* \"#utility.yul\":3217:3218   */\n      dup1\n        /* \"#utility.yul\":3210:3222   */\n      revert\n        /* \"#utility.yul\":3167:3224   */\n    tag_417:\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3243:3254   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":3273:3279   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":2693:3285   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3290:3476   */\n    tag_92:\n        /* \"#utility.yul\":3349:3355   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3381:3388   */\n      dup5\n        /* \"#utility.yul\":3377:3400   */\n      sub\n        /* \"#utility.yul\":3373:3405   */\n      slt\n        /* \"#utility.yul\":3370:3422   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":3418:3419   */\n      0x00\n        /* \"#utility.yul\":3415:3416   */\n      dup1\n        /* \"#utility.yul\":3408:3420   */\n      revert\n        /* \"#utility.yul\":3370:3422   */\n    tag_419:\n        /* \"#utility.yul\":3441:3470   */\n      tag_273\n        /* \"#utility.yul\":3460:3469   */\n      dup3\n        /* \"#utility.yul\":3441:3470   */\n      tag_377\n      jump\t// in\n        /* \"#utility.yul\":3481:3641   */\n    tag_378:\n        /* \"#utility.yul\":3546:3566   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3602:3615   */\n      dup1\n      iszero\n        /* \"#utility.yul\":3595:3616   */\n      iszero\n        /* \"#utility.yul\":3585:3617   */\n      dup2\n      eq\n        /* \"#utility.yul\":3575:3635   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3631:3632   */\n      0x00\n        /* \"#utility.yul\":3628:3629   */\n      dup1\n        /* \"#utility.yul\":3621:3633   */\n      revert\n        /* \"#utility.yul\":3646:3900   */\n    tag_120:\n        /* \"#utility.yul\":3711:3717   */\n      0x00\n        /* \"#utility.yul\":3719:3725   */\n      dup1\n        /* \"#utility.yul\":3772:3774   */\n      0x40\n        /* \"#utility.yul\":3760:3769   */\n      dup4\n        /* \"#utility.yul\":3751:3758   */\n      dup6\n        /* \"#utility.yul\":3747:3770   */\n      sub\n        /* \"#utility.yul\":3743:3775   */\n      slt\n        /* \"#utility.yul\":3740:3792   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":3788:3789   */\n      0x00\n        /* \"#utility.yul\":3785:3786   */\n      dup1\n        /* \"#utility.yul\":3778:3790   */\n      revert\n        /* \"#utility.yul\":3740:3792   */\n    tag_424:\n        /* \"#utility.yul\":3811:3840   */\n      tag_425\n        /* \"#utility.yul\":3830:3839   */\n      dup4\n        /* \"#utility.yul\":3811:3840   */\n      tag_377\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3801:3840   */\n      swap2\n      pop\n        /* \"#utility.yul\":3859:3894   */\n      tag_426\n        /* \"#utility.yul\":3890:3892   */\n      0x20\n        /* \"#utility.yul\":3879:3888   */\n      dup5\n        /* \"#utility.yul\":3875:3893   */\n      add\n        /* \"#utility.yul\":3859:3894   */\n      tag_378\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3849:3894   */\n      swap1\n      pop\n        /* \"#utility.yul\":3646:3900   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4032   */\n    tag_379:\n        /* \"#utility.yul\":3966:3976   */\n      0x4e487b71\n        /* \"#utility.yul\":3961:3964   */\n      0xe0\n        /* \"#utility.yul\":3957:3977   */\n      shl\n        /* \"#utility.yul\":3954:3955   */\n      0x00\n        /* \"#utility.yul\":3947:3978   */\n      mstore\n        /* \"#utility.yul\":3997:4001   */\n      0x41\n        /* \"#utility.yul\":3994:3995   */\n      0x04\n        /* \"#utility.yul\":3987:4002   */\n      mstore\n        /* \"#utility.yul\":4021:4025   */\n      0x24\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4011:4026   */\n      revert\n        /* \"#utility.yul\":4037:5175   */\n    tag_124:\n        /* \"#utility.yul\":4132:4138   */\n      0x00\n        /* \"#utility.yul\":4140:4146   */\n      dup1\n        /* \"#utility.yul\":4148:4154   */\n      0x00\n        /* \"#utility.yul\":4156:4162   */\n      dup1\n        /* \"#utility.yul\":4209:4212   */\n      0x80\n        /* \"#utility.yul\":4197:4206   */\n      dup6\n        /* \"#utility.yul\":4188:4195   */\n      dup8\n        /* \"#utility.yul\":4184:4207   */\n      sub\n        /* \"#utility.yul\":4180:4213   */\n      slt\n        /* \"#utility.yul\":4177:4230   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4223:4224   */\n      dup1\n        /* \"#utility.yul\":4216:4228   */\n      revert\n        /* \"#utility.yul\":4177:4230   */\n    tag_429:\n        /* \"#utility.yul\":4249:4278   */\n      tag_430\n        /* \"#utility.yul\":4268:4277   */\n      dup6\n        /* \"#utility.yul\":4249:4278   */\n      tag_377\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4239:4278   */\n      swap4\n      pop\n        /* \"#utility.yul\":4297:4335   */\n      tag_431\n        /* \"#utility.yul\":4331:4333   */\n      0x20\n        /* \"#utility.yul\":4320:4329   */\n      dup7\n        /* \"#utility.yul\":4316:4334   */\n      add\n        /* \"#utility.yul\":4297:4335   */\n      tag_377\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4287:4335   */\n      swap3\n      pop\n        /* \"#utility.yul\":4382:4384   */\n      0x40\n        /* \"#utility.yul\":4371:4380   */\n      dup6\n        /* \"#utility.yul\":4367:4385   */\n      add\n        /* \"#utility.yul\":4354:4386   */\n      calldataload\n        /* \"#utility.yul\":4344:4386   */\n      swap2\n      pop\n        /* \"#utility.yul\":4437:4439   */\n      0x60\n        /* \"#utility.yul\":4426:4435   */\n      dup6\n        /* \"#utility.yul\":4422:4440   */\n      add\n        /* \"#utility.yul\":4409:4441   */\n      calldataload\n        /* \"#utility.yul\":4460:4478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4501:4503   */\n      dup1\n        /* \"#utility.yul\":4493:4499   */\n      dup3\n        /* \"#utility.yul\":4490:4504   */\n      gt\n        /* \"#utility.yul\":4487:4521   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4517:4518   */\n      0x00\n        /* \"#utility.yul\":4514:4515   */\n      dup1\n        /* \"#utility.yul\":4507:4519   */\n      revert\n        /* \"#utility.yul\":4487:4521   */\n    tag_432:\n        /* \"#utility.yul\":4555:4561   */\n      dup2\n        /* \"#utility.yul\":4544:4553   */\n      dup8\n        /* \"#utility.yul\":4540:4562   */\n      add\n        /* \"#utility.yul\":4530:4562   */\n      swap2\n      pop\n        /* \"#utility.yul\":4600:4607   */\n      dup8\n        /* \"#utility.yul\":4593:4597   */\n      0x1f\n        /* \"#utility.yul\":4589:4591   */\n      dup4\n        /* \"#utility.yul\":4585:4598   */\n      add\n        /* \"#utility.yul\":4581:4608   */\n      slt\n        /* \"#utility.yul\":4571:4626   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":4622:4623   */\n      0x00\n        /* \"#utility.yul\":4619:4620   */\n      dup1\n        /* \"#utility.yul\":4612:4624   */\n      revert\n        /* \"#utility.yul\":4571:4626   */\n    tag_433:\n        /* \"#utility.yul\":4658:4660   */\n      dup2\n        /* \"#utility.yul\":4645:4661   */\n      calldataload\n        /* \"#utility.yul\":4680:4682   */\n      dup2\n        /* \"#utility.yul\":4676:4678   */\n      dup2\n        /* \"#utility.yul\":4673:4683   */\n      gt\n        /* \"#utility.yul\":4670:4706   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4686:4704   */\n      tag_435\n      tag_379\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4761:4763   */\n      0x40\n        /* \"#utility.yul\":4755:4764   */\n      mload\n        /* \"#utility.yul\":4729:4731   */\n      0x1f\n        /* \"#utility.yul\":4815:4828   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4811:4833   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4835:4837   */\n      0x3f\n        /* \"#utility.yul\":4807:4838   */\n      add\n        /* \"#utility.yul\":4803:4843   */\n      and\n        /* \"#utility.yul\":4791:4844   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4859:4877   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4879:4901   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4856:4902   */\n      or\n        /* \"#utility.yul\":4853:4925   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4905:4923   */\n      tag_437\n      tag_379\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4945:4955   */\n      dup2\n        /* \"#utility.yul\":4941:4943   */\n      0x40\n        /* \"#utility.yul\":4934:4956   */\n      mstore\n        /* \"#utility.yul\":4980:4982   */\n      dup3\n        /* \"#utility.yul\":4972:4978   */\n      dup2\n        /* \"#utility.yul\":4965:4983   */\n      mstore\n        /* \"#utility.yul\":5020:5027   */\n      dup11\n        /* \"#utility.yul\":5015:5017   */\n      0x20\n        /* \"#utility.yul\":5010:5012   */\n      dup5\n        /* \"#utility.yul\":5006:5008   */\n      dup8\n        /* \"#utility.yul\":5002:5013   */\n      add\n        /* \"#utility.yul\":4998:5018   */\n      add\n        /* \"#utility.yul\":4995:5028   */\n      gt\n        /* \"#utility.yul\":4992:5045   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5041:5042   */\n      0x00\n        /* \"#utility.yul\":5038:5039   */\n      dup1\n        /* \"#utility.yul\":5031:5043   */\n      revert\n        /* \"#utility.yul\":4992:5045   */\n    tag_438:\n        /* \"#utility.yul\":5097:5099   */\n      dup3\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"#utility.yul\":5088:5090   */\n      dup7\n        /* \"#utility.yul\":5084:5095   */\n      add\n        /* \"#utility.yul\":5079:5081   */\n      0x20\n        /* \"#utility.yul\":5071:5077   */\n      dup4\n        /* \"#utility.yul\":5067:5082   */\n      add\n        /* \"#utility.yul\":5054:5100   */\n      calldatacopy\n        /* \"#utility.yul\":5142:5143   */\n      0x00\n        /* \"#utility.yul\":5137:5139   */\n      0x20\n        /* \"#utility.yul\":5132:5134   */\n      dup5\n        /* \"#utility.yul\":5124:5130   */\n      dup4\n        /* \"#utility.yul\":5120:5135   */\n      add\n        /* \"#utility.yul\":5116:5140   */\n      add\n        /* \"#utility.yul\":5109:5144   */\n      mstore\n        /* \"#utility.yul\":5163:5169   */\n      dup1\n        /* \"#utility.yul\":5153:5169   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4037:5175   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5180:5440   */\n    tag_138:\n        /* \"#utility.yul\":5248:5254   */\n      0x00\n        /* \"#utility.yul\":5256:5262   */\n      dup1\n        /* \"#utility.yul\":5309:5311   */\n      0x40\n        /* \"#utility.yul\":5297:5306   */\n      dup4\n        /* \"#utility.yul\":5288:5295   */\n      dup6\n        /* \"#utility.yul\":5284:5307   */\n      sub\n        /* \"#utility.yul\":5280:5312   */\n      slt\n        /* \"#utility.yul\":5277:5329   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":5325:5326   */\n      0x00\n        /* \"#utility.yul\":5322:5323   */\n      dup1\n        /* \"#utility.yul\":5315:5327   */\n      revert\n        /* \"#utility.yul\":5277:5329   */\n    tag_440:\n        /* \"#utility.yul\":5348:5377   */\n      tag_441\n        /* \"#utility.yul\":5367:5376   */\n      dup4\n        /* \"#utility.yul\":5348:5377   */\n      tag_377\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5338:5377   */\n      swap2\n      pop\n        /* \"#utility.yul\":5396:5434   */\n      tag_426\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup5\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5396:5434   */\n      tag_377\n      jump\t// in\n        /* \"#utility.yul\":5445:5625   */\n    tag_148:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"#utility.yul\":5542:5551   */\n      dup3\n        /* \"#utility.yul\":5533:5540   */\n      dup5\n        /* \"#utility.yul\":5529:5552   */\n      sub\n        /* \"#utility.yul\":5525:5557   */\n      slt\n        /* \"#utility.yul\":5522:5574   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5570:5571   */\n      0x00\n        /* \"#utility.yul\":5567:5568   */\n      dup1\n        /* \"#utility.yul\":5560:5572   */\n      revert\n        /* \"#utility.yul\":5522:5574   */\n    tag_444:\n        /* \"#utility.yul\":5593:5619   */\n      tag_273\n        /* \"#utility.yul\":5609:5618   */\n      dup3\n        /* \"#utility.yul\":5593:5619   */\n      tag_378\n      jump\t// in\n        /* \"#utility.yul\":5630:6010   */\n    tag_155:\n        /* \"#utility.yul\":5709:5710   */\n      0x01\n        /* \"#utility.yul\":5705:5717   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5752:5764   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5773:5834   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5827:5831   */\n      0x7f\n        /* \"#utility.yul\":5819:5825   */\n      dup3\n        /* \"#utility.yul\":5815:5832   */\n      and\n        /* \"#utility.yul\":5805:5832   */\n      swap2\n      pop\n        /* \"#utility.yul\":5773:5834   */\n    tag_447:\n        /* \"#utility.yul\":5880:5882   */\n      0x20\n        /* \"#utility.yul\":5872:5878   */\n      dup3\n        /* \"#utility.yul\":5869:5883   */\n      lt\n        /* \"#utility.yul\":5849:5867   */\n      dup2\n        /* \"#utility.yul\":5846:5884   */\n      sub\n        /* \"#utility.yul\":5843:6004   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5926:5936   */\n      0x4e487b71\n        /* \"#utility.yul\":5921:5924   */\n      0xe0\n        /* \"#utility.yul\":5917:5937   */\n      shl\n        /* \"#utility.yul\":5914:5915   */\n      0x00\n        /* \"#utility.yul\":5907:5938   */\n      mstore\n        /* \"#utility.yul\":5961:5965   */\n      0x22\n        /* \"#utility.yul\":5958:5959   */\n      0x04\n        /* \"#utility.yul\":5951:5966   */\n      mstore\n        /* \"#utility.yul\":5989:5993   */\n      0x24\n        /* \"#utility.yul\":5986:5987   */\n      0x00\n        /* \"#utility.yul\":5979:5994   */\n      revert\n        /* \"#utility.yul\":5843:6004   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":5630:6010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6141:6659   */\n    tag_381:\n        /* \"#utility.yul\":6243:6245   */\n      0x1f\n        /* \"#utility.yul\":6238:6241   */\n      dup3\n        /* \"#utility.yul\":6235:6246   */\n      gt\n        /* \"#utility.yul\":6232:6653   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":6279:6284   */\n      dup1\n        /* \"#utility.yul\":6276:6277   */\n      0x00\n        /* \"#utility.yul\":6269:6285   */\n      mstore\n        /* \"#utility.yul\":6323:6327   */\n      0x20\n        /* \"#utility.yul\":6320:6321   */\n      0x00\n        /* \"#utility.yul\":6310:6328   */\n      keccak256\n        /* \"#utility.yul\":6393:6395   */\n      0x1f\n        /* \"#utility.yul\":6381:6391   */\n      dup5\n        /* \"#utility.yul\":6377:6396   */\n      add\n        /* \"#utility.yul\":6374:6375   */\n      0x05\n        /* \"#utility.yul\":6370:6397   */\n      shr\n        /* \"#utility.yul\":6364:6368   */\n      dup2\n        /* \"#utility.yul\":6360:6398   */\n      add\n        /* \"#utility.yul\":6429:6433   */\n      0x20\n        /* \"#utility.yul\":6417:6427   */\n      dup6\n        /* \"#utility.yul\":6414:6434   */\n      lt\n        /* \"#utility.yul\":6411:6458   */\n      iszero\n      tag_452\n      jumpi\n      pop\n        /* \"#utility.yul\":6452:6456   */\n      dup1\n        /* \"#utility.yul\":6411:6458   */\n    tag_452:\n        /* \"#utility.yul\":6507:6509   */\n      0x1f\n        /* \"#utility.yul\":6502:6505   */\n      dup5\n        /* \"#utility.yul\":6498:6510   */\n      add\n        /* \"#utility.yul\":6495:6496   */\n      0x05\n        /* \"#utility.yul\":6491:6511   */\n      shr\n        /* \"#utility.yul\":6485:6489   */\n      dup3\n        /* \"#utility.yul\":6481:6512   */\n      add\n        /* \"#utility.yul\":6471:6512   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6643   */\n    tag_453:\n        /* \"#utility.yul\":6580:6582   */\n      dup2\n        /* \"#utility.yul\":6573:6578   */\n      dup2\n        /* \"#utility.yul\":6570:6583   */\n      lt\n        /* \"#utility.yul\":6562:6643   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":6639:6640   */\n      0x00\n        /* \"#utility.yul\":6625:6641   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6606:6607   */\n      0x01\n        /* \"#utility.yul\":6595:6608   */\n      add\n        /* \"#utility.yul\":6562:6643   */\n      jump(tag_453)\n        /* \"#utility.yul\":6835:8033   */\n    tag_213:\n        /* \"#utility.yul\":6959:6977   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6954:6957   */\n      dup4\n        /* \"#utility.yul\":6951:6978   */\n      gt\n        /* \"#utility.yul\":6948:7001   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6981:6999   */\n      tag_459\n      tag_379\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":7010:7104   */\n      tag_460\n        /* \"#utility.yul\":7100:7103   */\n      dup4\n        /* \"#utility.yul\":7060:7098   */\n      tag_461\n        /* \"#utility.yul\":7092:7096   */\n      dup4\n        /* \"#utility.yul\":7086:7097   */\n      sload\n        /* \"#utility.yul\":7060:7098   */\n      tag_155\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7054:7058   */\n      dup4\n        /* \"#utility.yul\":7010:7104   */\n      tag_381\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7130:7131   */\n      0x00\n        /* \"#utility.yul\":7155:7157   */\n      0x1f\n        /* \"#utility.yul\":7150:7153   */\n      dup5\n        /* \"#utility.yul\":7147:7158   */\n      gt\n        /* \"#utility.yul\":7172:7173   */\n      0x01\n        /* \"#utility.yul\":7167:7775   */\n      dup2\n      eq\n      tag_463\n      jumpi\n        /* \"#utility.yul\":7819:7820   */\n      0x00\n        /* \"#utility.yul\":7836:7839   */\n      dup6\n        /* \"#utility.yul\":7833:7926   */\n      iszero\n      tag_464\n      jumpi\n      pop\n        /* \"#utility.yul\":7892:7911   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":7879:7912   */\n      calldataload\n        /* \"#utility.yul\":7833:7926   */\n    tag_464:\n      not(0x00)\n        /* \"#utility.yul\":6792:6793   */\n      0x03\n        /* \"#utility.yul\":6788:6799   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":6784:6808   */\n      shr\n        /* \"#utility.yul\":6780:6809   */\n      not\n        /* \"#utility.yul\":6770:6810   */\n      and\n        /* \"#utility.yul\":6816:6817   */\n      0x01\n        /* \"#utility.yul\":6812:6823   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6767:6824   */\n      or\n        /* \"#utility.yul\":7939:8017   */\n      dup4\n      sstore\n        /* \"#utility.yul\":7140:8027   */\n      jump(tag_360)\n        /* \"#utility.yul\":7167:7775   */\n    tag_463:\n        /* \"#utility.yul\":6088:6089   */\n      0x00\n        /* \"#utility.yul\":6081:6095   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6125:6129   */\n      0x20\n        /* \"#utility.yul\":6112:6130   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7203:7220   */\n      dup8\n      and\n      swap2\n        /* \"#utility.yul\":7318:7547   */\n    tag_467:\n        /* \"#utility.yul\":7332:7339   */\n      dup3\n        /* \"#utility.yul\":7329:7330   */\n      dup2\n        /* \"#utility.yul\":7326:7340   */\n      lt\n        /* \"#utility.yul\":7318:7547   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":7421:7440   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":7408:7441   */\n      calldataload\n        /* \"#utility.yul\":7393:7442   */\n      dup3\n      sstore\n        /* \"#utility.yul\":7528:7532   */\n      0x20\n        /* \"#utility.yul\":7513:7533   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":7481:7482   */\n      0x01\n        /* \"#utility.yul\":7469:7483   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":7348:7360   */\n      add\n        /* \"#utility.yul\":7318:7547   */\n      jump(tag_467)\n    tag_469:\n        /* \"#utility.yul\":7322:7325   */\n      pop\n        /* \"#utility.yul\":7575:7578   */\n      dup7\n        /* \"#utility.yul\":7566:7573   */\n      dup3\n        /* \"#utility.yul\":7563:7579   */\n      lt\n        /* \"#utility.yul\":7560:7719   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7699:7700   */\n      0x00\n        /* \"#utility.yul\":7695:7701   */\n      not\n        /* \"#utility.yul\":7689:7692   */\n      0xf8\n        /* \"#utility.yul\":7683:7686   */\n      dup9\n        /* \"#utility.yul\":7680:7681   */\n      0x03\n        /* \"#utility.yul\":7676:7687   */\n      shl\n        /* \"#utility.yul\":7672:7693   */\n      and\n        /* \"#utility.yul\":7668:7702   */\n      shr\n        /* \"#utility.yul\":7664:7703   */\n      not\n        /* \"#utility.yul\":7651:7660   */\n      dup5\n        /* \"#utility.yul\":7646:7649   */\n      dup8\n        /* \"#utility.yul\":7642:7661   */\n      add\n        /* \"#utility.yul\":7629:7662   */\n      calldataload\n        /* \"#utility.yul\":7625:7704   */\n      and\n        /* \"#utility.yul\":7617:7623   */\n      dup2\n        /* \"#utility.yul\":7610:7705   */\n      sstore\n        /* \"#utility.yul\":7560:7719   */\n    tag_470:\n      pop\n      pop\n        /* \"#utility.yul\":7762:7763   */\n      0x01\n        /* \"#utility.yul\":7756:7759   */\n      dup6\n        /* \"#utility.yul\":7753:7754   */\n      0x01\n        /* \"#utility.yul\":7749:7760   */\n      shl\n        /* \"#utility.yul\":7745:7764   */\n      add\n        /* \"#utility.yul\":7739:7743   */\n      dup4\n        /* \"#utility.yul\":7732:7765   */\n      sstore\n        /* \"#utility.yul\":7140:8027   */\n      pop\n      pop\n        /* \"#utility.yul\":6835:8033   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8726:8853   */\n    tag_383:\n        /* \"#utility.yul\":8787:8797   */\n      0x4e487b71\n        /* \"#utility.yul\":8782:8785   */\n      0xe0\n        /* \"#utility.yul\":8778:8798   */\n      shl\n        /* \"#utility.yul\":8775:8776   */\n      0x00\n        /* \"#utility.yul\":8768:8799   */\n      mstore\n        /* \"#utility.yul\":8818:8822   */\n      0x11\n        /* \"#utility.yul\":8815:8816   */\n      0x04\n        /* \"#utility.yul\":8808:8823   */\n      mstore\n        /* \"#utility.yul\":8842:8846   */\n      0x24\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8832:8847   */\n      revert\n        /* \"#utility.yul\":8858:8983   */\n    tag_240:\n        /* \"#utility.yul\":8923:8932   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8944:8954   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8941:8977   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":8957:8975   */\n      tag_152\n      tag_383\n      jump\t// in\n        /* \"#utility.yul\":9685:9853   */\n    tag_251:\n        /* \"#utility.yul\":9758:9767   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9789:9798   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9806:9821   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9800:9822   */\n      dup5\n      eq\n        /* \"#utility.yul\":9786:9823   */\n      or\n        /* \"#utility.yul\":9776:9847   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":9827:9845   */\n      tag_152\n      tag_383\n      jump\t// in\n        /* \"#utility.yul\":10205:10701   */\n    tag_277:\n        /* \"#utility.yul\":10384:10387   */\n      0x00\n        /* \"#utility.yul\":10422:10428   */\n      dup4\n        /* \"#utility.yul\":10416:10429   */\n      mload\n        /* \"#utility.yul\":10438:10504   */\n      tag_484\n        /* \"#utility.yul\":10497:10503   */\n      dup2\n        /* \"#utility.yul\":10492:10495   */\n      dup5\n        /* \"#utility.yul\":10485:10489   */\n      0x20\n        /* \"#utility.yul\":10477:10483   */\n      dup9\n        /* \"#utility.yul\":10473:10490   */\n      add\n        /* \"#utility.yul\":10438:10504   */\n      tag_375\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10567:10580   */\n      dup4\n      mload\n        /* \"#utility.yul\":10526:10542   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10589:10659   */\n      tag_485\n        /* \"#utility.yul\":10567:10580   */\n      dup2\n        /* \"#utility.yul\":10526:10542   */\n      dup4\n        /* \"#utility.yul\":10636:10640   */\n      0x20\n        /* \"#utility.yul\":10624:10641   */\n      dup9\n      add\n        /* \"#utility.yul\":10589:10659   */\n      tag_375\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10675:10695   */\n      add\n      swap5\n        /* \"#utility.yul\":10205:10701   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11819:12308   */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12088:12103   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":12070:12104   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12140:12155   */\n      dup5\n      and\n        /* \"#utility.yul\":12135:12137   */\n      0x20\n        /* \"#utility.yul\":12120:12138   */\n      dup3\n      add\n        /* \"#utility.yul\":12113:12156   */\n      mstore\n        /* \"#utility.yul\":12187:12189   */\n      0x40\n        /* \"#utility.yul\":12172:12190   */\n      dup2\n      add\n        /* \"#utility.yul\":12165:12199   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12235:12238   */\n      0x80\n        /* \"#utility.yul\":12230:12232   */\n      0x60\n        /* \"#utility.yul\":12215:12233   */\n      dup3\n      add\n        /* \"#utility.yul\":12208:12239   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12013:12017   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12256:12302   */\n      tag_490\n      swap1\n        /* \"#utility.yul\":12282:12301   */\n      dup4\n      add\n        /* \"#utility.yul\":12274:12280   */\n      dup5\n        /* \"#utility.yul\":12256:12302   */\n      tag_376\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12248:12302   */\n      swap7\n        /* \"#utility.yul\":11819:12308   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12313:12562   */\n    tag_333:\n        /* \"#utility.yul\":12382:12388   */\n      0x00\n        /* \"#utility.yul\":12435:12437   */\n      0x20\n        /* \"#utility.yul\":12423:12432   */\n      dup3\n        /* \"#utility.yul\":12414:12421   */\n      dup5\n        /* \"#utility.yul\":12410:12433   */\n      sub\n        /* \"#utility.yul\":12406:12438   */\n      slt\n        /* \"#utility.yul\":12403:12455   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12451:12452   */\n      0x00\n        /* \"#utility.yul\":12448:12449   */\n      dup1\n        /* \"#utility.yul\":12441:12453   */\n      revert\n        /* \"#utility.yul\":12403:12455   */\n    tag_492:\n        /* \"#utility.yul\":12483:12492   */\n      dup2\n        /* \"#utility.yul\":12477:12493   */\n      mload\n        /* \"#utility.yul\":12502:12532   */\n      tag_273\n        /* \"#utility.yul\":12526:12531   */\n      dup2\n        /* \"#utility.yul\":12502:12532   */\n      tag_374\n      jump\t// in\n    stop\n    data_a7eb0451a604c4dc108fec9b71a0e76d6307ea82c680c4246676e81f6657eff4 68747470733a2f2f697066732e696f2f697066732f516d50713538465456615a756b694236713853587a31634d694d4545506142737775796b544e6b66685775444e7a2f\n\n    auxdata: 0xa2646970667358221220f5e95c567ef4d7336ea45d6b5b437789397541e687a132ef2e524447343d56e664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1807": {
									"entryPoint": null,
									"id": 1807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2114": {
									"entryPoint": 167,
									"id": 2114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1895": {
									"entryPoint": 171,
									"id": 1895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:5",
										"nodeType": "YulBlock",
										"src": "0:2698:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "201:325:5",
													"nodeType": "YulBlock",
													"src": "201:325:5",
													"statements": [
														{
															"nativeSrc": "211:22:5",
															"nodeType": "YulAssignment",
															"src": "211:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:5",
																		"nodeType": "YulLiteral",
																		"src": "225:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:5"
																},
																"nativeSrc": "221:12:5",
																"nodeType": "YulFunctionCall",
																"src": "221:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																}
															]
														},
														{
															"nativeSrc": "242:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:5",
																		"nodeType": "YulLiteral",
																		"src": "278:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:5"
																},
																"nativeSrc": "268:12:5",
																"nodeType": "YulFunctionCall",
																"src": "268:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:5",
																	"nodeType": "YulTypedName",
																	"src": "246:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:5",
																"nodeType": "YulBlock",
																"src": "319:31:5",
																"statements": [
																	{
																		"nativeSrc": "321:27:5",
																		"nodeType": "YulAssignment",
																		"src": "321:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:5",
																					"nodeType": "YulLiteral",
																					"src": "343:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:5"
																			},
																			"nativeSrc": "331:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:5"
																},
																"nativeSrc": "292:26:5",
																"nodeType": "YulFunctionCall",
																"src": "292:26:5"
															},
															"nativeSrc": "289:61:5",
															"nodeType": "YulIf",
															"src": "289:61:5"
														},
														{
															"body": {
																"nativeSrc": "409:111:5",
																"nodeType": "YulBlock",
																"src": "409:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:5",
																					"nodeType": "YulLiteral",
																					"src": "430:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:5",
																							"nodeType": "YulLiteral",
																							"src": "437:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:5",
																							"nodeType": "YulLiteral",
																							"src": "442:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:5"
																					},
																					"nativeSrc": "433:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:5"
																			},
																			"nativeSrc": "423:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:5"
																		},
																		"nativeSrc": "423:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:5",
																					"nodeType": "YulLiteral",
																					"src": "474:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:5",
																					"nodeType": "YulLiteral",
																					"src": "477:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:5"
																			},
																			"nativeSrc": "467:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:5"
																		},
																		"nativeSrc": "467:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:5",
																					"nodeType": "YulLiteral",
																					"src": "502:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:5",
																					"nodeType": "YulLiteral",
																					"src": "505:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:5"
																			},
																			"nativeSrc": "495:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:5"
																		},
																		"nativeSrc": "495:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:5",
																				"nodeType": "YulLiteral",
																				"src": "396:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:5"
																		},
																		"nativeSrc": "385:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:5"
																},
																"nativeSrc": "362:38:5",
																"nodeType": "YulFunctionCall",
																"src": "362:38:5"
															},
															"nativeSrc": "359:161:5",
															"nodeType": "YulIf",
															"src": "359:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:5",
														"nodeType": "YulTypedName",
														"src": "181:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:5",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													}
												],
												"src": "146:380:5"
											},
											{
												"body": {
													"nativeSrc": "587:65:5",
													"nodeType": "YulBlock",
													"src": "587:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:5",
																		"nodeType": "YulLiteral",
																		"src": "604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																},
																"nativeSrc": "597:14:5",
																"nodeType": "YulFunctionCall",
																"src": "597:14:5"
															},
															"nativeSrc": "597:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:5"
														},
														{
															"nativeSrc": "620:26:5",
															"nodeType": "YulAssignment",
															"src": "620:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:5",
																		"nodeType": "YulLiteral",
																		"src": "638:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:5",
																		"nodeType": "YulLiteral",
																		"src": "641:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:5"
																},
																"nativeSrc": "628:18:5",
																"nodeType": "YulFunctionCall",
																"src": "628:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:5",
														"nodeType": "YulTypedName",
														"src": "570:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:5",
														"nodeType": "YulTypedName",
														"src": "578:4:5",
														"type": ""
													}
												],
												"src": "531:121:5"
											},
											{
												"body": {
													"nativeSrc": "738:437:5",
													"nodeType": "YulBlock",
													"src": "738:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:5",
																"nodeType": "YulBlock",
																"src": "771:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:5",
																					"nodeType": "YulLiteral",
																					"src": "792:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:5"
																			},
																			"nativeSrc": "785:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:5"
																		},
																		"nativeSrc": "785:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:5"
																	},
																	{
																		"nativeSrc": "814:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:5",
																					"nodeType": "YulLiteral",
																					"src": "839:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:5"
																			},
																			"nativeSrc": "826:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:5",
																				"nodeType": "YulTypedName",
																				"src": "818:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:5",
																							"nodeType": "YulLiteral",
																							"src": "890:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:5",
																									"nodeType": "YulLiteral",
																									"src": "909:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:5"
																							},
																							"nativeSrc": "893:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:5"
																					},
																					"nativeSrc": "886:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:5"
																			},
																			"nativeSrc": "876:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:5",
																				"nodeType": "YulTypedName",
																				"src": "861:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:5",
																			"nodeType": "YulBlock",
																			"src": "951:23:5",
																			"statements": [
																				{
																					"nativeSrc": "953:19:5",
																					"nodeType": "YulAssignment",
																					"src": "953:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:5",
																					"nodeType": "YulLiteral",
																					"src": "945:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:5"
																			},
																			"nativeSrc": "930:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:5"
																		},
																		"nativeSrc": "927:47:5",
																		"nodeType": "YulIf",
																		"src": "927:47:5"
																	},
																	{
																		"nativeSrc": "987:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:5"
																							},
																							"nativeSrc": "1014:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:5"
																					},
																					"nativeSrc": "1007:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:5"
																			},
																			"nativeSrc": "997:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:5",
																				"nodeType": "YulTypedName",
																				"src": "991:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:5",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:5",
																			"nodeType": "YulBlock",
																			"src": "1139:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:5"
																						},
																						"nativeSrc": "1141:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:5"
																					},
																					"nativeSrc": "1141:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:5"
																			},
																			"nativeSrc": "1086:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:5"
																		},
																		"nativeSrc": "1078:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:5",
																			"nodeType": "YulBlock",
																			"src": "1100:26:5",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:5",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:5"
																						},
																						"nativeSrc": "1111:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:5",
																			"nodeType": "YulBlock",
																			"src": "1082:3:5",
																			"statements": []
																		},
																		"src": "1078:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:5",
																		"nodeType": "YulLiteral",
																		"src": "759:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:5"
																},
																"nativeSrc": "751:11:5",
																"nodeType": "YulFunctionCall",
																"src": "751:11:5"
															},
															"nativeSrc": "748:421:5",
															"nodeType": "YulIf",
															"src": "748:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:5",
														"nodeType": "YulTypedName",
														"src": "710:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:5",
														"nodeType": "YulTypedName",
														"src": "717:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:5",
														"nodeType": "YulTypedName",
														"src": "722:10:5",
														"type": ""
													}
												],
												"src": "657:518:5"
											},
											{
												"body": {
													"nativeSrc": "1265:81:5",
													"nodeType": "YulBlock",
													"src": "1265:81:5",
													"statements": [
														{
															"nativeSrc": "1275:65:5",
															"nodeType": "YulAssignment",
															"src": "1275:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:5"
																								},
																								"nativeSrc": "1304:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:5"
																								},
																								"nativeSrc": "1317:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:5"
																						},
																						"nativeSrc": "1300:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:5"
																				},
																				"nativeSrc": "1296:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:5"
																		},
																		"nativeSrc": "1286:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:5"
																		},
																		"nativeSrc": "1328:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:5"
																},
																"nativeSrc": "1283:57:5",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:5",
														"nodeType": "YulTypedName",
														"src": "1242:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:5",
														"nodeType": "YulTypedName",
														"src": "1248:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:5",
														"nodeType": "YulTypedName",
														"src": "1256:4:5",
														"type": ""
													}
												],
												"src": "1180:166:5"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:5",
													"nodeType": "YulBlock",
													"src": "1447:1249:5",
													"statements": [
														{
															"nativeSrc": "1457:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:5"
																},
																"nativeSrc": "1471:10:5",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:5",
																"nodeType": "YulBlock",
																"src": "1524:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:5"
																			},
																			"nativeSrc": "1526:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:5"
																		},
																		"nativeSrc": "1526:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:5"
																				},
																				"nativeSrc": "1508:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:5"
																		},
																		"nativeSrc": "1504:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:5"
																},
																"nativeSrc": "1493:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:5"
															},
															"nativeSrc": "1490:56:5",
															"nodeType": "YulIf",
															"src": "1490:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:5"
																				},
																				"nativeSrc": "1631:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:5"
																		},
																		"nativeSrc": "1605:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:5"
																},
																"nativeSrc": "1555:97:5",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:5"
															},
															"nativeSrc": "1555:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:5"
														},
														{
															"nativeSrc": "1661:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:5",
																"nodeType": "YulLiteral",
																"src": "1678:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:5",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:5",
																"nodeType": "YulLiteral",
																"src": "1707:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:5",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:5",
															"nodeType": "YulAssignment",
															"src": "1720:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:5",
																"nodeType": "YulLiteral",
																"src": "1733:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:5",
																		"nodeType": "YulBlock",
																		"src": "1783:656:5",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:5"
																							},
																							"nativeSrc": "1824:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:5"
																					},
																					"nativeSrc": "1812:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:5",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:5"
																					},
																					"nativeSrc": "1859:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:5",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:5",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:5",
																					"nodeType": "YulBlock",
																					"src": "1994:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:5"
																												},
																												"nativeSrc": "2033:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:5"
																										},
																										"nativeSrc": "2027:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:5"
																								},
																								"nativeSrc": "2012:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:5"
																							},
																							"nativeSrc": "2012:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:5"
																						},
																						{
																							"nativeSrc": "2071:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:5"
																								},
																								"nativeSrc": "2081:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:5",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:5"
																								},
																								"nativeSrc": "2125:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:5"
																					},
																					"nativeSrc": "1938:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:5"
																				},
																				"nativeSrc": "1930:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:5",
																					"nodeType": "YulBlock",
																					"src": "1953:28:5",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:5",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:5"
																								},
																								"nativeSrc": "1960:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:5",
																					"nodeType": "YulBlock",
																					"src": "1934:3:5",
																					"statements": []
																				},
																				"src": "1930:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:5",
																					"nodeType": "YulBlock",
																					"src": "2214:166:5",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:5"
																										},
																										"nativeSrc": "2255:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:5"
																								},
																								"nativeSrc": "2249:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:5",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:5"
																																		},
																																		"nativeSrc": "2334:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:5"
																																},
																																"nativeSrc": "2330:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:5"
																																},
																																"nativeSrc": "2356:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:5"
																														},
																														"nativeSrc": "2326:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:5"
																												},
																												"nativeSrc": "2322:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:5"
																										},
																										"nativeSrc": "2307:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:5"
																								},
																								"nativeSrc": "2292:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:5"
																							},
																							"nativeSrc": "2292:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:5"
																					},
																					"nativeSrc": "2182:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:5"
																				},
																				"nativeSrc": "2179:201:5",
																				"nodeType": "YulIf",
																				"src": "2179:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:5",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:5"
																									},
																									"nativeSrc": "2410:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:5",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:5"
																							},
																							"nativeSrc": "2406:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:5"
																					},
																					"nativeSrc": "2393:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:5"
																				},
																				"nativeSrc": "2393:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:5"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:5",
																	"nodeType": "YulCase",
																	"src": "1776:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:5",
																		"nodeType": "YulBlock",
																		"src": "2456:234:5",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:5",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:5",
																					"nodeType": "YulBlock",
																					"src": "2519:67:5",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:5",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:5"
																										},
																										"nativeSrc": "2552:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:5"
																								},
																								"nativeSrc": "2546:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:5"
																				},
																				"nativeSrc": "2497:89:5",
																				"nodeType": "YulIf",
																				"src": "2497:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:5"
																							},
																							"nativeSrc": "2612:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:5"
																					},
																					"nativeSrc": "2599:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:5"
																				},
																				"nativeSrc": "2599:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:5"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:5",
																	"nodeType": "YulCase",
																	"src": "2448:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:5"
																},
																"nativeSrc": "1753:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:5"
															},
															"nativeSrc": "1746:944:5",
															"nodeType": "YulSwitch",
															"src": "1746:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:5",
														"nodeType": "YulTypedName",
														"src": "1432:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:5",
														"nodeType": "YulTypedName",
														"src": "1438:3:5",
														"type": ""
													}
												],
												"src": "1351:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b506040518060400160405280600d81526020016c22a9219b9918a0902a37b5b2b760991b815250604051806040016040528060058152602001640dcc8c505560da1b8152506200006f62000069620000a760201b60201c565b620000ab565b60036200007d838262000198565b5060046200008c828262000198565b505f6001555050426080526009805460ff1916905562000264565b3390565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200012357607f821691505b6020821081036200014257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200019357805f5260205f20601f840160051c810160208510156200016f5750805b601f840160051c820191505b8181101562000190575f81556001016200017b565b50505b505050565b81516001600160401b03811115620001b457620001b4620000fa565b620001cc81620001c584546200010e565b8462000148565b602080601f83116001811462000202575f8415620001ea5750858301515b5f19600386901b1c1916600185901b1785556200025c565b5f85815260208120601f198616915b82811015620002325788860151825594840194600190910190840162000211565b50858210156200025057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b608051611634620002845f395f81816103ee01526108ee01526116345ff3fe60806040526004361061017b575f3560e01c8063715018a6116100cd578063a22cb46511610087578063ddaa26ad11610062578063ddaa26ad146103dd578063e985e9c514610410578063f2fde38b1461042f578063f30e6e771461044e575f80fd5b8063a22cb4651461038c578063b88d4fde146103ab578063c87b56dd146103be575f80fd5b8063715018a6146103015780637e4831d314610315578063833b94991461032e5780638da5cb5b1461034957806395d89b4114610365578063a0712d6814610379575f80fd5b806332cb6b0c1161013857806355f804b31161011357806355f804b31461029057806360f1f878146102af5780636352211e146102c357806370a08231146102e2575f80fd5b806332cb6b0c146102555780633ccfd60b1461026957806342842e0e1461027d575f80fd5b806301ffc9a71461017f57806306fdde03146101b3578063081812fc146101d4578063095ea7b31461020b57806318160ddd1461022057806323b872dd14610242575b5f80fd5b34801561018a575f80fd5b5061019e6101993660046110c5565b61046d565b60405190151581526020015b60405180910390f35b3480156101be575f80fd5b506101c76104be565b6040516101aa919061112d565b3480156101df575f80fd5b506101f36101ee36600461113f565b61054e565b6040516001600160a01b0390911681526020016101aa565b61021e610219366004611171565b610590565b005b34801561022b575f80fd5b50600254600154035b6040519081526020016101aa565b61021e610250366004611199565b61062e565b348015610260575f80fd5b50610234606481565b348015610274575f80fd5b5061021e6107be565b61021e61028b366004611199565b6107f6565b34801561029b575f80fd5b5061021e6102aa3660046111d2565b610815565b3480156102ba575f80fd5b50610234600581565b3480156102ce575f80fd5b506101f36102dd36600461113f565b61082a565b3480156102ed575f80fd5b506102346102fc36600461123e565b610834565b34801561030c575f80fd5b5061021e610881565b348015610320575f80fd5b5060095461019e9060ff1681565b348015610339575f80fd5b50610234670de0b6b3a764000081565b348015610354575f80fd5b505f546001600160a01b03166101f3565b348015610370575f80fd5b506101c7610894565b61021e61038736600461113f565b6108a3565b348015610397575f80fd5b5061021e6103a6366004611266565b610a7f565b61021e6103b93660046112ab565b610aea565b3480156103c9575f80fd5b506101c76103d836600461113f565b610b34565b3480156103e8575f80fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b34801561041b575f80fd5b5061019e61042a366004611380565b610bb5565b34801561043a575f80fd5b5061021e61044936600461123e565b610be2565b348015610459575f80fd5b5061021e6104683660046113a8565b610c58565b5f6301ffc9a760e01b6001600160e01b03198316148061049d57506380ac58cd60e01b6001600160e01b03198316145b806104b85750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600380546104cd906113c1565b80601f01602080910402602001604051908101604052809291908181526020018280546104f9906113c1565b80156105445780601f1061051b57610100808354040283529160200191610544565b820191905f5260205f20905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b5f61055882610cb9565b610575576040516333d1c03960e21b815260040160405180910390fd5b505f908152600760205260409020546001600160a01b031690565b5f61059a8261082a565b9050336001600160a01b038216146105d3576105b68133610bb5565b6105d3576040516367d9dca160e11b815260040160405180910390fd5b5f8281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b5f61063882610cdf565b9050836001600160a01b0316816001600160a01b03161461066b5760405162a1148160e81b815260040160405180910390fd5b5f8281526007602052604090208054338082146001600160a01b038816909114176106b75761069a8633610bb5565b6106b757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166106de57604051633a954ecd60e21b815260040160405180910390fd5b80156106e8575f82555b6001600160a01b038681165f9081526006602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260056020526040812091909155600160e11b8416900361077557600184015f818152600560205260408120549003610773576001548114610773575f8181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6107c6610d41565b6040514790339082156108fc029083905f818181858888f193505050501580156107f2573d5f803e3d5ffd5b5050565b61081083838360405180602001604052805f815250610aea565b505050565b61081d610d41565b600a61081082848361143d565b5f6104b882610cdf565b5f6001600160a01b03821661085c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03165f9081526006602052604090205467ffffffffffffffff1690565b610889610d41565b6108925f610d9a565b565b6060600480546104cd906113c1565b60095460ff16156108ec5760405162461bcd60e51b815260206004820152600e60248201526d135a5b9d081a5cc81c185d5cd95960921b60448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042101561094f5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481b9bdd081cdd185c9d195960821b60448201526064016108e3565b60648161095b60015490565b610965919061150b565b11156109a45760405162461bcd60e51b815260206004820152600e60248201526d13585e0814dd5c1c1b1e48121a5d60921b60448201526064016108e3565b335f9081526006602052604090819020546005916109ce9184911c67ffffffffffffffff1661150b565b1115610a1c5760405162461bcd60e51b815260206004820152601960248201527f4d6178204d696e7420706572207573657220526561636865640000000000000060448201526064016108e3565b610a2e670de0b6b3a76400008261151e565b341015610a725760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b60448201526064016108e3565b610a7c3382610de9565b50565b335f8181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610af584848461062e565b6001600160a01b0383163b15610b2e57610b1184848484610e02565b610b2e576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610b3f82610cb9565b610b5c57604051630a14c4b560e41b815260040160405180910390fd5b5f610b65610ee9565b905080515f03610b835760405180602001604052805f815250610bae565b80610b8d84610f09565b604051602001610b9e929190611535565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260086020908152604080832093909416825291909152205460ff1690565b610bea610d41565b6001600160a01b038116610c4f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e3565b610a7c81610d9a565b610c60610d41565b60095460ff1615610ca65760405162461bcd60e51b815260206004820152601060248201526f21b7b73a3930b1ba103830bab9b2b21760811b60448201526064016108e3565b6009805460ff1916911515919091179055565b5f600154821080156104b85750505f90815260056020526040902054600160e01b161590565b5f81600154811015610d28575f8181526005602052604081205490600160e01b82169003610d26575b805f03610bae57505f19015f81815260056020526040902054610d08565b505b604051636f96cda160e11b815260040160405180910390fd5b5f546001600160a01b031633146108925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107f2828260405180602001604052805f815250610f4c565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290610e36903390899088908890600401611563565b6020604051808303815f875af1925050508015610e70575060408051601f3d908101601f19168201909252610e6d9181019061159f565b60015b610ecc573d808015610e9d576040519150601f19603f3d011682016040523d82523d5f602084013e610ea2565b606091505b5080515f03610ec4576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606040518060800160405280604481526020016115bb60449139905090565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480610f225750819003601f19909101908152919050565b610f568383610fb7565b6001600160a01b0383163b15610810576001548281035b610f7f5f868380600101945086610e02565b610f9c576040516368d2bf6b60e11b815260040160405180910390fd5b818110610f6d578160015414610fb0575f80fd5b5050505050565b6001545f829003610fdb5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0383165f8181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146110875780835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4600101611051565b50815f036110a757604051622e076360e81b815260040160405180910390fd5b60015550505050565b6001600160e01b031981168114610a7c575f80fd5b5f602082840312156110d5575f80fd5b8135610bae816110b0565b5f5b838110156110fa5781810151838201526020016110e2565b50505f910152565b5f81518084526111198160208601602086016110e0565b601f01601f19169290920160200192915050565b602081525f610bae6020830184611102565b5f6020828403121561114f575f80fd5b5035919050565b80356001600160a01b038116811461116c575f80fd5b919050565b5f8060408385031215611182575f80fd5b61118b83611156565b946020939093013593505050565b5f805f606084860312156111ab575f80fd5b6111b484611156565b92506111c260208501611156565b9150604084013590509250925092565b5f80602083850312156111e3575f80fd5b823567ffffffffffffffff808211156111fa575f80fd5b818501915085601f83011261120d575f80fd5b81358181111561121b575f80fd5b86602082850101111561122c575f80fd5b60209290920196919550909350505050565b5f6020828403121561124e575f80fd5b610bae82611156565b8035801515811461116c575f80fd5b5f8060408385031215611277575f80fd5b61128083611156565b915061128e60208401611257565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156112be575f80fd5b6112c785611156565b93506112d560208601611156565b925060408501359150606085013567ffffffffffffffff808211156112f8575f80fd5b818701915087601f83011261130b575f80fd5b81358181111561131d5761131d611297565b604051601f8201601f19908116603f0116810190838211818310171561134557611345611297565b816040528281528a602084870101111561135d575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215611391575f80fd5b61139a83611156565b915061128e60208401611156565b5f602082840312156113b8575f80fd5b610bae82611257565b600181811c908216806113d557607f821691505b6020821081036113f357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561081057805f5260205f20601f840160051c8101602085101561141e5750805b601f840160051c820191505b81811015610fb0575f815560010161142a565b67ffffffffffffffff83111561145557611455611297565b6114698361146383546113c1565b836113f9565b5f601f84116001811461149a575f85156114835750838201355b5f19600387901b1c1916600186901b178355610fb0565b5f83815260208120601f198716915b828110156114c957868501358255602094850194600190920191016114a9565b50868210156114e5575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104b8576104b86114f7565b80820281158282048414176104b8576104b86114f7565b5f83516115468184602088016110e0565b83519083019061155a8183602088016110e0565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061159590830184611102565b9695505050505050565b5f602082840312156115af575f80fd5b8151610bae816110b056fe68747470733a2f2f697066732e696f2f697066732f516d50713538465456615a756b694236713853587a31634d694d4545506142737775796b544e6b66685775444e7a2fa2646970667358221220f5e95c567ef4d7336ea45d6b5b437789397541e687a132ef2e524447343d56e664736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x22A9219B9918A0902A37B5B2B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0xDCC8C5055 PUSH1 0xDA SHL DUP2 MSTORE POP PUSH3 0x6F PUSH3 0x69 PUSH3 0xA7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAB JUMP JUMPDEST PUSH1 0x3 PUSH3 0x7D DUP4 DUP3 PUSH3 0x198 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x8C DUP3 DUP3 PUSH3 0x198 JUMP JUMPDEST POP PUSH0 PUSH1 0x1 SSTORE POP POP TIMESTAMP PUSH1 0x80 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x264 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x123 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x142 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x193 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x16F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x190 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x17B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1B4 JUMPI PUSH3 0x1B4 PUSH3 0xFA JUMP JUMPDEST PUSH3 0x1CC DUP2 PUSH3 0x1C5 DUP5 SLOAD PUSH3 0x10E JUMP JUMPDEST DUP5 PUSH3 0x148 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x202 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x1EA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x25C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x232 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x211 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x250 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1634 PUSH3 0x284 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3EE ADD MSTORE PUSH2 0x8EE ADD MSTORE PUSH2 0x1634 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDDAA26AD GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDDAA26AD EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xF30E6E77 EQ PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7E4831D3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x833B9499 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x60F1F878 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x242 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x21E PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x21E PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x834 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x19E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x49D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x4B8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x13C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x544 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x544 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x527 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x558 DUP3 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x59A DUP3 PUSH2 0x82A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5D3 JUMPI PUSH2 0x5B6 DUP2 CALLER PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x638 DUP3 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6B7 JUMPI PUSH2 0x69A DUP7 CALLER PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x775 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x773 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x773 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C6 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x810 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x81D PUSH2 0xD41 JUMP JUMPDEST PUSH1 0xA PUSH2 0x810 DUP3 DUP5 DUP4 PUSH2 0x143D JUMP JUMPDEST PUSH0 PUSH2 0x4B8 DUP3 PUSH2 0xCDF JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x889 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x892 PUSH0 PUSH2 0xD9A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x135A5B9D081A5CC81C185D5CD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14D85B19481B9BDD081CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH2 0x95B PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST GT ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13585E0814DD5C1C1B1E48121A5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SWAP2 PUSH2 0x9CE SWAP2 DUP5 SWAP2 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST GT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204D696E74207065722075736572205265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA2E PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x151E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA7C CALLER DUP3 PUSH2 0xDE9 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAF5 DUP5 DUP5 DUP5 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xB2E JUMPI PUSH2 0xB11 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB3F DUP3 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB65 PUSH2 0xEE9 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBAE JUMP JUMPDEST DUP1 PUSH2 0xB8D DUP5 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9E SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBEA PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0xC60 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x21B7B73A3930B1BA103830BAB9B2B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x4B8 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xD28 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0xD26 JUMPI JUMPDEST DUP1 PUSH0 SUB PUSH2 0xBAE JUMPI POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD08 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE36 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE70 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE6D SWAP2 DUP2 ADD SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xECC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15BB PUSH1 0x44 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xF22 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF56 DUP4 DUP4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x810 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xF7F PUSH0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xF6D JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0xFB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 DUP3 SWAP1 SUB PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1087 JUMPI DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1051 JUMP JUMPDEST POP DUP2 PUSH0 SUB PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBAE DUP2 PUSH2 0x10B0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10FA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10E2 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1119 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x116C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118B DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B4 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP3 POP PUSH2 0x11C2 PUSH1 0x20 DUP6 ADD PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x121B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x1156 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1277 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1280 DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH2 0x128E PUSH1 0x20 DUP5 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 DUP6 PUSH2 0x1156 JUMP JUMPDEST SWAP4 POP PUSH2 0x12D5 PUSH1 0x20 DUP7 ADD PUSH2 0x1156 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x130B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x131D JUMPI PUSH2 0x131D PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1345 PUSH2 0x1297 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x135D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x139A DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH2 0x128E PUSH1 0x20 DUP5 ADD PUSH2 0x1156 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x810 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x141E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x142A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1455 JUMPI PUSH2 0x1455 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x1469 DUP4 PUSH2 0x1463 DUP4 SLOAD PUSH2 0x13C1 JUMP JUMPDEST DUP4 PUSH2 0x13F9 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x149A JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1483 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xFB0 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14C9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x14A9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x14E5 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B8 JUMPI PUSH2 0x4B8 PUSH2 0x14F7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4B8 JUMPI PUSH2 0x4B8 PUSH2 0x14F7 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1546 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x155A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1595 SWAP1 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBAE DUP2 PUSH2 0x10B0 JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D507135 CODESIZE CHAINID SLOAD JUMP PUSH2 0x5A75 PUSH12 0x694236713853587A31634D69 0x4D GASLIMIT GASLIMIT POP PUSH2 0x4273 PUSH24 0x75796B544E6B66685775444E7A2FA2646970667358221220 CREATE2 0xE9 0x5C JUMP PUSH31 0xF4D7336EA45D6B5B437789397541E687A132EF2E524447343D56E664736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "113:1716:0:-:0;;;427:125;;;;;;;;;;5096:158:1;;;;;;;;;;;;;-1:-1:-1;;;5096:158:1;;;;;;;;;;;;;;;;-1:-1:-1;;;5096:158:1;;;963:32:2;982:12;:10;;;:12;;:::i;:::-;963:18;:32::i;:::-;5163:5:1;:13;5171:5;5163;:13;:::i;:::-;-1:-1:-1;5187:7:1;:17;5197:7;5187;:17;:::i;:::-;-1:-1:-1;5646:7:1;5215:13;:31;-1:-1:-1;;499:15:0::1;486:28;::::0;525:10:::1;:19:::0;;-1:-1:-1;;525:19:0::1;::::0;;113:1716;;656:98:4;736:10;;656:98::o;2509:191:2:-;2583:16;2602:6;;-1:-1:-1;;;;;2619:17:2;;;-1:-1:-1;;;;;;2619:17:2;;;;;;2652:40;;2602:6;;;;;;;2652:40;;2583:16;2652:40;2572:128;2509:191;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:5;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:5;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:5;;;2546:26;2497:89;-1:-1:-1;;1308:1:5;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:5;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:5;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;113:1716:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_PER_USER_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_PER_TOKEN_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@START_TIME_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_1168": {
									"entryPoint": null,
									"id": 1168,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_141": {
									"entryPoint": 3817,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1155": {
									"entryPoint": null,
									"id": 1155,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1223": {
									"entryPoint": 3586,
									"id": 1223,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_1838": {
									"entryPoint": 3393,
									"id": 1838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_907": {
									"entryPoint": 3257,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_940": {
									"entryPoint": null,
									"id": 940,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_921": {
									"entryPoint": null,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1319": {
									"entryPoint": 4023,
									"id": 1319,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1772": {
									"entryPoint": null,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_2114": {
									"entryPoint": null,
									"id": 2114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1762": {
									"entryPoint": null,
									"id": 1762,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_769": {
									"entryPoint": null,
									"id": 769,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_numberMinted_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_693": {
									"entryPoint": 3295,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1493": {
									"entryPoint": 3916,
									"id": 1493,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1508": {
									"entryPoint": 3561,
									"id": 1508,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1782": {
									"entryPoint": 3849,
									"id": 1782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_totalMinted_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1895": {
									"entryPoint": 3482,
									"id": 1895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_814": {
									"entryPoint": 1424,
									"id": 814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_380": {
									"entryPoint": 2100,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_837": {
									"entryPoint": 1358,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_881": {
									"entryPoint": 2997,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintPaused_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_97": {
									"entryPoint": 2211,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_503": {
									"entryPoint": 1214,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_585": {
									"entryPoint": 2090,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1824": {
									"entryPoint": null,
									"id": 1824,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseMint_159": {
									"entryPoint": 3160,
									"id": 159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_1852": {
									"entryPoint": 2177,
									"id": 1852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1104": {
									"entryPoint": 2038,
									"id": 1104,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1142": {
									"entryPoint": 2794,
									"id": 1142,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_863": {
									"entryPoint": 2687,
									"id": 863,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_132": {
									"entryPoint": 2069,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_493": {
									"entryPoint": 1133,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_513": {
									"entryPoint": 2196,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_556": {
									"entryPoint": 2868,
									"id": 556,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1085": {
									"entryPoint": 1582,
									"id": 1085,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1875": {
									"entryPoint": 3042,
									"id": 1875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_120": {
									"entryPoint": 1982,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52fc37eea2c0d3c3f0ae18dbe0c776a45a7fea05024a6d448bf5c234ad2119f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a36ce2fe11e7a22ec094f53a6a94ebaa3066bd42273542ea31d71f057a6ad24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e271d0129e8e12cda0aaa8784505b29d15f9f3d3e0740882335d922c3502e98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f733e8a31024a32c5aeba2a6e8f3847e85b35d131aafeebef04e5956fc9af21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5399184c2076f566882f1fc75b9dfe0bde0db13e3df52a00fb810ba4306e75c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12564:5",
										"nodeType": "YulBlock",
										"src": "0:12564:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:5",
													"nodeType": "YulBlock",
													"src": "58:87:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:5",
																"nodeType": "YulBlock",
																"src": "123:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:5",
																					"nodeType": "YulLiteral",
																					"src": "132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:5",
																					"nodeType": "YulLiteral",
																					"src": "135:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:5"
																			},
																			"nativeSrc": "125:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:5"
																		},
																		"nativeSrc": "125:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:5",
																								"nodeType": "YulLiteral",
																								"src": "103:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:5",
																								"nodeType": "YulLiteral",
																								"src": "108:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:5"
																						},
																						"nativeSrc": "99:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:5"
																				},
																				"nativeSrc": "88:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:5"
																		},
																		"nativeSrc": "78:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:5"
																},
																"nativeSrc": "71:51:5",
																"nodeType": "YulFunctionCall",
																"src": "71:51:5"
															},
															"nativeSrc": "68:71:5",
															"nodeType": "YulIf",
															"src": "68:71:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:5",
														"nodeType": "YulTypedName",
														"src": "47:5:5",
														"type": ""
													}
												],
												"src": "14:131:5"
											},
											{
												"body": {
													"nativeSrc": "219:176:5",
													"nodeType": "YulBlock",
													"src": "219:176:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:5",
																"nodeType": "YulBlock",
																"src": "265:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:5",
																					"nodeType": "YulLiteral",
																					"src": "274:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:5",
																					"nodeType": "YulLiteral",
																					"src": "277:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:5"
																			},
																			"nativeSrc": "267:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:5"
																		},
																		"nativeSrc": "267:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:5"
																		},
																		"nativeSrc": "236:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:5",
																		"nodeType": "YulLiteral",
																		"src": "261:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:5"
																},
																"nativeSrc": "232:32:5",
																"nodeType": "YulFunctionCall",
																"src": "232:32:5"
															},
															"nativeSrc": "229:52:5",
															"nodeType": "YulIf",
															"src": "229:52:5"
														},
														{
															"nativeSrc": "290:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:5"
																},
																"nativeSrc": "303:23:5",
																"nodeType": "YulFunctionCall",
																"src": "303:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulTypedName",
																	"src": "294:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:5"
																},
																"nativeSrc": "335:30:5",
																"nodeType": "YulFunctionCall",
																"src": "335:30:5"
															},
															"nativeSrc": "335:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:5"
														},
														{
															"nativeSrc": "374:15:5",
															"nodeType": "YulAssignment",
															"src": "374:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:5",
																"nodeType": "YulIdentifier",
																"src": "384:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:5",
														"nodeType": "YulTypedName",
														"src": "185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:5",
														"nodeType": "YulTypedName",
														"src": "196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:5",
														"nodeType": "YulTypedName",
														"src": "208:6:5",
														"type": ""
													}
												],
												"src": "150:245:5"
											},
											{
												"body": {
													"nativeSrc": "495:92:5",
													"nodeType": "YulBlock",
													"src": "495:92:5",
													"statements": [
														{
															"nativeSrc": "505:26:5",
															"nodeType": "YulAssignment",
															"src": "505:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:5",
																		"nodeType": "YulLiteral",
																		"src": "528:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:5"
																},
																"nativeSrc": "513:18:5",
																"nodeType": "YulFunctionCall",
																"src": "513:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:5"
																				},
																				"nativeSrc": "565:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:5"
																		},
																		"nativeSrc": "558:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:5"
																},
																"nativeSrc": "540:41:5",
																"nodeType": "YulFunctionCall",
																"src": "540:41:5"
															},
															"nativeSrc": "540:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:5",
														"nodeType": "YulTypedName",
														"src": "464:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:5",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:5",
														"nodeType": "YulTypedName",
														"src": "486:4:5",
														"type": ""
													}
												],
												"src": "400:187:5"
											},
											{
												"body": {
													"nativeSrc": "658:184:5",
													"nodeType": "YulBlock",
													"src": "658:184:5",
													"statements": [
														{
															"nativeSrc": "668:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:5",
																"nodeType": "YulLiteral",
																"src": "677:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:5",
																	"nodeType": "YulTypedName",
																	"src": "672:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:5",
																"nodeType": "YulBlock",
																"src": "737:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:5"
																					},
																					"nativeSrc": "758:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:5"
																							},
																							"nativeSrc": "777:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:5"
																					},
																					"nativeSrc": "771:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:5"
																			},
																			"nativeSrc": "751:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:5"
																		},
																		"nativeSrc": "751:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:5"
																},
																"nativeSrc": "695:13:5",
																"nodeType": "YulFunctionCall",
																"src": "695:13:5"
															},
															"nativeSrc": "687:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:5",
																"nodeType": "YulBlock",
																"src": "709:19:5",
																"statements": [
																	{
																		"nativeSrc": "711:15:5",
																		"nodeType": "YulAssignment",
																		"src": "711:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:5",
																					"nodeType": "YulLiteral",
																					"src": "723:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:5"
																			},
																			"nativeSrc": "716:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:5",
																"nodeType": "YulBlock",
																"src": "691:3:5",
																"statements": []
															},
															"src": "687:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:5"
																		},
																		"nativeSrc": "816:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:5",
																		"nodeType": "YulLiteral",
																		"src": "834:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:5"
																},
																"nativeSrc": "809:27:5",
																"nodeType": "YulFunctionCall",
																"src": "809:27:5"
															},
															"nativeSrc": "809:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:5",
														"nodeType": "YulTypedName",
														"src": "636:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:5",
														"nodeType": "YulTypedName",
														"src": "641:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:5",
														"nodeType": "YulTypedName",
														"src": "646:6:5",
														"type": ""
													}
												],
												"src": "592:250:5"
											},
											{
												"body": {
													"nativeSrc": "897:221:5",
													"nodeType": "YulBlock",
													"src": "897:221:5",
													"statements": [
														{
															"nativeSrc": "907:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:5"
																},
																"nativeSrc": "921:12:5",
																"nodeType": "YulFunctionCall",
																"src": "921:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:5",
																	"nodeType": "YulTypedName",
																	"src": "911:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:5"
																},
																"nativeSrc": "942:19:5",
																"nodeType": "YulFunctionCall",
																"src": "942:19:5"
															},
															"nativeSrc": "942:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:5"
																		},
																		"nativeSrc": "1005:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nativeSrc": "1023:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:5"
																},
																"nativeSrc": "970:76:5",
																"nodeType": "YulFunctionCall",
																"src": "970:76:5"
															},
															"nativeSrc": "970:76:5",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:5"
														},
														{
															"nativeSrc": "1055:57:5",
															"nodeType": "YulAssignment",
															"src": "1055:57:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:5"
																						},
																						"nativeSrc": "1079:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:5"
																						},
																						"nativeSrc": "1096:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:5"
																				},
																				"nativeSrc": "1075:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:5"
																		},
																		"nativeSrc": "1066:39:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:5"
																},
																"nativeSrc": "1062:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:5",
														"nodeType": "YulTypedName",
														"src": "874:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:5",
														"nodeType": "YulTypedName",
														"src": "881:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:5",
														"nodeType": "YulTypedName",
														"src": "889:3:5",
														"type": ""
													}
												],
												"src": "847:271:5"
											},
											{
												"body": {
													"nativeSrc": "1244:99:5",
													"nodeType": "YulBlock",
													"src": "1244:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:5"
																},
																"nativeSrc": "1254:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:5"
															},
															"nativeSrc": "1254:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:5"
														},
														{
															"nativeSrc": "1284:53:5",
															"nodeType": "YulAssignment",
															"src": "1284:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:5"
																		},
																		"nativeSrc": "1318:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:5"
																},
																"nativeSrc": "1292:45:5",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:5",
														"nodeType": "YulTypedName",
														"src": "1213:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:5",
														"nodeType": "YulTypedName",
														"src": "1224:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:5",
														"nodeType": "YulTypedName",
														"src": "1235:4:5",
														"type": ""
													}
												],
												"src": "1123:220:5"
											},
											{
												"body": {
													"nativeSrc": "1418:110:5",
													"nodeType": "YulBlock",
													"src": "1418:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:5",
																"nodeType": "YulBlock",
																"src": "1464:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:5"
																			},
																			"nativeSrc": "1466:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:5"
																		},
																		"nativeSrc": "1466:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:5"
																		},
																		"nativeSrc": "1435:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:5"
																},
																"nativeSrc": "1431:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:5"
															},
															"nativeSrc": "1428:52:5",
															"nodeType": "YulIf",
															"src": "1428:52:5"
														},
														{
															"nativeSrc": "1489:33:5",
															"nodeType": "YulAssignment",
															"src": "1489:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:5"
																},
																"nativeSrc": "1499:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:5",
														"nodeType": "YulTypedName",
														"src": "1384:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:5",
														"nodeType": "YulTypedName",
														"src": "1395:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:5",
														"nodeType": "YulTypedName",
														"src": "1407:6:5",
														"type": ""
													}
												],
												"src": "1348:180:5"
											},
											{
												"body": {
													"nativeSrc": "1634:102:5",
													"nodeType": "YulBlock",
													"src": "1634:102:5",
													"statements": [
														{
															"nativeSrc": "1644:26:5",
															"nodeType": "YulAssignment",
															"src": "1644:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:5"
																},
																"nativeSrc": "1652:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:5"
																						},
																						"nativeSrc": "1713:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:5"
																				},
																				"nativeSrc": "1709:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:5"
																		},
																		"nativeSrc": "1697:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:5"
																},
																"nativeSrc": "1679:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:5"
															},
															"nativeSrc": "1679:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:5",
														"nodeType": "YulTypedName",
														"src": "1603:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:5",
														"nodeType": "YulTypedName",
														"src": "1614:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:5",
														"nodeType": "YulTypedName",
														"src": "1625:4:5",
														"type": ""
													}
												],
												"src": "1533:203:5"
											},
											{
												"body": {
													"nativeSrc": "1790:124:5",
													"nodeType": "YulBlock",
													"src": "1790:124:5",
													"statements": [
														{
															"nativeSrc": "1800:29:5",
															"nodeType": "YulAssignment",
															"src": "1800:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:5"
																},
																"nativeSrc": "1809:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:5",
																"nodeType": "YulBlock",
																"src": "1892:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:5"
																			},
																			"nativeSrc": "1894:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:5"
																		},
																		"nativeSrc": "1894:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:5"
																								},
																								"nativeSrc": "1873:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:5"
																						},
																						"nativeSrc": "1869:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:5"
																				},
																				"nativeSrc": "1858:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:5"
																		},
																		"nativeSrc": "1848:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:5"
																},
																"nativeSrc": "1841:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:5"
															},
															"nativeSrc": "1838:70:5",
															"nodeType": "YulIf",
															"src": "1838:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:5",
														"nodeType": "YulTypedName",
														"src": "1780:5:5",
														"type": ""
													}
												],
												"src": "1741:173:5"
											},
											{
												"body": {
													"nativeSrc": "2006:167:5",
													"nodeType": "YulBlock",
													"src": "2006:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:5",
																"nodeType": "YulBlock",
																"src": "2052:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:5"
																			},
																			"nativeSrc": "2054:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:5"
																		},
																		"nativeSrc": "2054:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:5"
																		},
																		"nativeSrc": "2023:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:5"
																},
																"nativeSrc": "2019:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:5"
															},
															"nativeSrc": "2016:52:5",
															"nodeType": "YulIf",
															"src": "2016:52:5"
														},
														{
															"nativeSrc": "2077:39:5",
															"nodeType": "YulAssignment",
															"src": "2077:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:5"
																},
																"nativeSrc": "2087:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:5"
																}
															]
														},
														{
															"nativeSrc": "2125:42:5",
															"nodeType": "YulAssignment",
															"src": "2125:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:5"
																		},
																		"nativeSrc": "2148:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:5"
																},
																"nativeSrc": "2135:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:5",
														"nodeType": "YulTypedName",
														"src": "1964:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:5",
														"nodeType": "YulTypedName",
														"src": "1975:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:5",
														"nodeType": "YulTypedName",
														"src": "1987:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:5",
														"nodeType": "YulTypedName",
														"src": "1995:6:5",
														"type": ""
													}
												],
												"src": "1919:254:5"
											},
											{
												"body": {
													"nativeSrc": "2279:76:5",
													"nodeType": "YulBlock",
													"src": "2279:76:5",
													"statements": [
														{
															"nativeSrc": "2289:26:5",
															"nodeType": "YulAssignment",
															"src": "2289:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2301:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2312:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2297:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:5"
																},
																"nativeSrc": "2297:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2297:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2289:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2331:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2342:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2324:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:5"
																},
																"nativeSrc": "2324:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2324:25:5"
															},
															"nativeSrc": "2324:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2178:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2248:9:5",
														"nodeType": "YulTypedName",
														"src": "2248:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2259:6:5",
														"nodeType": "YulTypedName",
														"src": "2259:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2270:4:5",
														"nodeType": "YulTypedName",
														"src": "2270:4:5",
														"type": ""
													}
												],
												"src": "2178:177:5"
											},
											{
												"body": {
													"nativeSrc": "2464:224:5",
													"nodeType": "YulBlock",
													"src": "2464:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:16:5",
																"nodeType": "YulBlock",
																"src": "2510:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2519:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2522:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2512:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:5"
																			},
																			"nativeSrc": "2512:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:5"
																		},
																		"nativeSrc": "2512:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:5"
																		},
																		"nativeSrc": "2481:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:5"
																},
																"nativeSrc": "2477:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:5"
															},
															"nativeSrc": "2474:52:5",
															"nodeType": "YulIf",
															"src": "2474:52:5"
														},
														{
															"nativeSrc": "2535:39:5",
															"nodeType": "YulAssignment",
															"src": "2535:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2545:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:5"
																},
																"nativeSrc": "2545:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2545:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2535:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:5"
																}
															]
														},
														{
															"nativeSrc": "2583:48:5",
															"nodeType": "YulAssignment",
															"src": "2583:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2616:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2627:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2612:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:5"
																		},
																		"nativeSrc": "2612:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2593:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:5"
																},
																"nativeSrc": "2593:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2593:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2583:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:5"
																}
															]
														},
														{
															"nativeSrc": "2640:42:5",
															"nodeType": "YulAssignment",
															"src": "2640:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2667:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2678:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:5"
																		},
																		"nativeSrc": "2663:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2650:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:5"
																},
																"nativeSrc": "2650:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2650:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2640:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2360:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:5",
														"nodeType": "YulTypedName",
														"src": "2414:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2425:7:5",
														"nodeType": "YulTypedName",
														"src": "2425:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2437:6:5",
														"nodeType": "YulTypedName",
														"src": "2437:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2445:6:5",
														"nodeType": "YulTypedName",
														"src": "2445:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2453:6:5",
														"nodeType": "YulTypedName",
														"src": "2453:6:5",
														"type": ""
													}
												],
												"src": "2360:328:5"
											},
											{
												"body": {
													"nativeSrc": "2783:502:5",
													"nodeType": "YulBlock",
													"src": "2783:502:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2829:16:5",
																"nodeType": "YulBlock",
																"src": "2829:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2838:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2838:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2841:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2841:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2831:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2831:6:5"
																			},
																			"nativeSrc": "2831:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2831:12:5"
																		},
																		"nativeSrc": "2831:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2831:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2804:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2804:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2813:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2800:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2800:3:5"
																		},
																		"nativeSrc": "2800:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2800:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2825:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2825:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2796:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:5"
																},
																"nativeSrc": "2796:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2796:32:5"
															},
															"nativeSrc": "2793:52:5",
															"nodeType": "YulIf",
															"src": "2793:52:5"
														},
														{
															"nativeSrc": "2854:37:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2854:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2881:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2881:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2868:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2868:12:5"
																},
																"nativeSrc": "2868:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2868:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2858:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2858:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2900:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2900:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2910:18:5",
																"nodeType": "YulLiteral",
																"src": "2910:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2904:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2904:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2955:16:5",
																"nodeType": "YulBlock",
																"src": "2955:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2964:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2964:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2967:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2967:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2957:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:5"
																			},
																			"nativeSrc": "2957:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2957:12:5"
																		},
																		"nativeSrc": "2957:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2957:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2943:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2943:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2951:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2951:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2940:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2940:2:5"
																},
																"nativeSrc": "2940:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2940:14:5"
															},
															"nativeSrc": "2937:34:5",
															"nodeType": "YulIf",
															"src": "2937:34:5"
														},
														{
															"nativeSrc": "2980:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2980:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2994:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2994:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3005:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3005:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2990:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2990:3:5"
																},
																"nativeSrc": "2990:22:5",
																"nodeType": "YulFunctionCall",
																"src": "2990:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2984:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2984:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3060:16:5",
																"nodeType": "YulBlock",
																"src": "3060:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3069:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3069:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3072:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3072:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3062:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3062:6:5"
																			},
																			"nativeSrc": "3062:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3062:12:5"
																		},
																		"nativeSrc": "3062:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3062:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3039:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3039:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3043:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3043:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3035:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3035:3:5"
																				},
																				"nativeSrc": "3035:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3035:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3050:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3031:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:5"
																		},
																		"nativeSrc": "3031:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3031:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3024:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:5"
																},
																"nativeSrc": "3024:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3024:35:5"
															},
															"nativeSrc": "3021:55:5",
															"nodeType": "YulIf",
															"src": "3021:55:5"
														},
														{
															"nativeSrc": "3085:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3085:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3112:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3112:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3099:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3099:12:5"
																},
																"nativeSrc": "3099:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3099:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3089:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3089:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3142:16:5",
																"nodeType": "YulBlock",
																"src": "3142:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3151:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3151:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3154:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3144:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3144:6:5"
																			},
																			"nativeSrc": "3144:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:12:5"
																		},
																		"nativeSrc": "3144:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3130:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3130:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3138:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3138:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3127:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3127:2:5"
																},
																"nativeSrc": "3127:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3127:14:5"
															},
															"nativeSrc": "3124:34:5",
															"nodeType": "YulIf",
															"src": "3124:34:5"
														},
														{
															"body": {
																"nativeSrc": "3208:16:5",
																"nodeType": "YulBlock",
																"src": "3208:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3217:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3217:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3220:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3220:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3210:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3210:6:5"
																			},
																			"nativeSrc": "3210:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3210:12:5"
																		},
																		"nativeSrc": "3210:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3210:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3181:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3181:2:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3185:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3185:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3177:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3177:3:5"
																				},
																				"nativeSrc": "3177:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3177:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3194:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3194:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3173:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3173:3:5"
																		},
																		"nativeSrc": "3173:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3173:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3199:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3199:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3170:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3170:2:5"
																},
																"nativeSrc": "3170:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3170:37:5"
															},
															"nativeSrc": "3167:57:5",
															"nodeType": "YulIf",
															"src": "3167:57:5"
														},
														{
															"nativeSrc": "3233:21:5",
															"nodeType": "YulAssignment",
															"src": "3233:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3247:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3247:2:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3251:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3251:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3243:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:5"
																},
																"nativeSrc": "3243:11:5",
																"nodeType": "YulFunctionCall",
																"src": "3243:11:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3233:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:5"
																}
															]
														},
														{
															"nativeSrc": "3263:16:5",
															"nodeType": "YulAssignment",
															"src": "3263:16:5",
															"value": {
																"name": "length",
																"nativeSrc": "3273:6:5",
																"nodeType": "YulIdentifier",
																"src": "3273:6:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3263:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3263:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "2693:592:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2741:9:5",
														"nodeType": "YulTypedName",
														"src": "2741:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2752:7:5",
														"nodeType": "YulTypedName",
														"src": "2752:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2764:6:5",
														"nodeType": "YulTypedName",
														"src": "2764:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2772:6:5",
														"nodeType": "YulTypedName",
														"src": "2772:6:5",
														"type": ""
													}
												],
												"src": "2693:592:5"
											},
											{
												"body": {
													"nativeSrc": "3360:116:5",
													"nodeType": "YulBlock",
													"src": "3360:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3406:16:5",
																"nodeType": "YulBlock",
																"src": "3406:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3415:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3415:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3418:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3418:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3408:6:5"
																			},
																			"nativeSrc": "3408:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:12:5"
																		},
																		"nativeSrc": "3408:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3381:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3390:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:5"
																		},
																		"nativeSrc": "3377:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:5"
																},
																"nativeSrc": "3373:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3373:32:5"
															},
															"nativeSrc": "3370:52:5",
															"nodeType": "YulIf",
															"src": "3370:52:5"
														},
														{
															"nativeSrc": "3431:39:5",
															"nodeType": "YulAssignment",
															"src": "3431:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3460:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3460:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3441:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3441:18:5"
																},
																"nativeSrc": "3441:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3441:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3431:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3290:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:5",
														"nodeType": "YulTypedName",
														"src": "3326:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3337:7:5",
														"nodeType": "YulTypedName",
														"src": "3337:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3349:6:5",
														"nodeType": "YulTypedName",
														"src": "3349:6:5",
														"type": ""
													}
												],
												"src": "3290:186:5"
											},
											{
												"body": {
													"nativeSrc": "3527:114:5",
													"nodeType": "YulBlock",
													"src": "3527:114:5",
													"statements": [
														{
															"nativeSrc": "3537:29:5",
															"nodeType": "YulAssignment",
															"src": "3537:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3559:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3559:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3546:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3546:12:5"
																},
																"nativeSrc": "3546:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3546:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3537:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3537:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3619:16:5",
																"nodeType": "YulBlock",
																"src": "3619:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3628:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3628:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3631:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3631:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3621:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:5"
																			},
																			"nativeSrc": "3621:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3621:12:5"
																		},
																		"nativeSrc": "3621:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3621:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3588:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3588:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3609:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3609:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3602:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3602:6:5"
																						},
																						"nativeSrc": "3602:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3602:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3595:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3595:6:5"
																				},
																				"nativeSrc": "3595:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3595:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3585:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3585:2:5"
																		},
																		"nativeSrc": "3585:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3585:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3578:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3578:6:5"
																},
																"nativeSrc": "3578:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3578:40:5"
															},
															"nativeSrc": "3575:60:5",
															"nodeType": "YulIf",
															"src": "3575:60:5"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "3481:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3506:6:5",
														"nodeType": "YulTypedName",
														"src": "3506:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:5",
														"nodeType": "YulTypedName",
														"src": "3517:5:5",
														"type": ""
													}
												],
												"src": "3481:160:5"
											},
											{
												"body": {
													"nativeSrc": "3730:170:5",
													"nodeType": "YulBlock",
													"src": "3730:170:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3776:16:5",
																"nodeType": "YulBlock",
																"src": "3776:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3785:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3788:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3788:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3778:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3778:6:5"
																			},
																			"nativeSrc": "3778:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3778:12:5"
																		},
																		"nativeSrc": "3778:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3778:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3751:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3751:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3760:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3760:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3747:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:5"
																		},
																		"nativeSrc": "3747:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3772:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3772:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3743:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3743:3:5"
																},
																"nativeSrc": "3743:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3743:32:5"
															},
															"nativeSrc": "3740:52:5",
															"nodeType": "YulIf",
															"src": "3740:52:5"
														},
														{
															"nativeSrc": "3801:39:5",
															"nodeType": "YulAssignment",
															"src": "3801:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3830:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3811:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3811:18:5"
																},
																"nativeSrc": "3811:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3811:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3801:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3801:6:5"
																}
															]
														},
														{
															"nativeSrc": "3849:45:5",
															"nodeType": "YulAssignment",
															"src": "3849:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3879:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3890:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3890:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3875:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:5"
																		},
																		"nativeSrc": "3875:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3875:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "3859:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "3859:15:5"
																},
																"nativeSrc": "3859:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3859:35:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3849:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3646:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3688:9:5",
														"nodeType": "YulTypedName",
														"src": "3688:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3699:7:5",
														"nodeType": "YulTypedName",
														"src": "3699:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3711:6:5",
														"nodeType": "YulTypedName",
														"src": "3711:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3719:6:5",
														"nodeType": "YulTypedName",
														"src": "3719:6:5",
														"type": ""
													}
												],
												"src": "3646:254:5"
											},
											{
												"body": {
													"nativeSrc": "3937:95:5",
													"nodeType": "YulBlock",
													"src": "3937:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3954:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3961:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3961:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3966:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3966:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3957:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:5"
																		},
																		"nativeSrc": "3957:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3947:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:5"
																},
																"nativeSrc": "3947:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3947:31:5"
															},
															"nativeSrc": "3947:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3947:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3994:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3994:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3997:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3997:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3987:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:5"
																},
																"nativeSrc": "3987:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3987:15:5"
															},
															"nativeSrc": "3987:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3987:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4018:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4018:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4021:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4021:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4011:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:5"
																},
																"nativeSrc": "4011:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4011:15:5"
															},
															"nativeSrc": "4011:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4011:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3905:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3905:127:5"
											},
											{
												"body": {
													"nativeSrc": "4167:1008:5",
													"nodeType": "YulBlock",
													"src": "4167:1008:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4214:16:5",
																"nodeType": "YulBlock",
																"src": "4214:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4223:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4223:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4216:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4216:6:5"
																			},
																			"nativeSrc": "4216:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:12:5"
																		},
																		"nativeSrc": "4216:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4216:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4188:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4197:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4197:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4184:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4184:3:5"
																		},
																		"nativeSrc": "4184:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4209:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4209:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4180:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4180:3:5"
																},
																"nativeSrc": "4180:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4180:33:5"
															},
															"nativeSrc": "4177:53:5",
															"nodeType": "YulIf",
															"src": "4177:53:5"
														},
														{
															"nativeSrc": "4239:39:5",
															"nodeType": "YulAssignment",
															"src": "4239:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4268:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4268:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4249:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4249:18:5"
																},
																"nativeSrc": "4249:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4249:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4239:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:5"
																}
															]
														},
														{
															"nativeSrc": "4287:48:5",
															"nodeType": "YulAssignment",
															"src": "4287:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4320:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4320:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4331:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4331:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4316:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:5"
																		},
																		"nativeSrc": "4316:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4316:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4297:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4297:18:5"
																},
																"nativeSrc": "4297:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4297:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4287:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:5"
																}
															]
														},
														{
															"nativeSrc": "4344:42:5",
															"nodeType": "YulAssignment",
															"src": "4344:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4371:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4382:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4382:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:5"
																		},
																		"nativeSrc": "4367:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4354:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4354:12:5"
																},
																"nativeSrc": "4354:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4354:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4344:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:5"
																}
															]
														},
														{
															"nativeSrc": "4395:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4395:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4426:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4437:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4437:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4422:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:5"
																		},
																		"nativeSrc": "4422:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4409:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4409:12:5"
																},
																"nativeSrc": "4409:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4409:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4399:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4399:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4450:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4450:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4460:18:5",
																"nodeType": "YulLiteral",
																"src": "4460:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4454:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4454:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4505:16:5",
																"nodeType": "YulBlock",
																"src": "4505:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4514:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4514:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4517:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4507:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4507:6:5"
																			},
																			"nativeSrc": "4507:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4507:12:5"
																		},
																		"nativeSrc": "4507:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4507:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4493:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4501:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4501:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4490:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4490:2:5"
																},
																"nativeSrc": "4490:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4490:14:5"
															},
															"nativeSrc": "4487:34:5",
															"nodeType": "YulIf",
															"src": "4487:34:5"
														},
														{
															"nativeSrc": "4530:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4530:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4544:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4544:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4555:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4540:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4540:3:5"
																},
																"nativeSrc": "4540:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4540:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4534:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4534:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4610:16:5",
																"nodeType": "YulBlock",
																"src": "4610:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4619:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4619:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4622:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4622:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4612:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4612:6:5"
																			},
																			"nativeSrc": "4612:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4612:12:5"
																		},
																		"nativeSrc": "4612:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4612:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4589:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4589:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4593:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4593:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4585:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4585:3:5"
																				},
																				"nativeSrc": "4585:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4585:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4600:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4600:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4581:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:5"
																		},
																		"nativeSrc": "4581:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4581:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4574:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:5"
																},
																"nativeSrc": "4574:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4574:35:5"
															},
															"nativeSrc": "4571:55:5",
															"nodeType": "YulIf",
															"src": "4571:55:5"
														},
														{
															"nativeSrc": "4635:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4635:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4658:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4658:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4645:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4645:12:5"
																},
																"nativeSrc": "4645:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4645:16:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "4639:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4639:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4684:22:5",
																"nodeType": "YulBlock",
																"src": "4684:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4686:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4686:16:5"
																			},
																			"nativeSrc": "4686:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4686:18:5"
																		},
																		"nativeSrc": "4686:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4686:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4676:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4676:2:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4680:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4680:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4673:2:5"
																},
																"nativeSrc": "4673:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4673:10:5"
															},
															"nativeSrc": "4670:36:5",
															"nodeType": "YulIf",
															"src": "4670:36:5"
														},
														{
															"nativeSrc": "4715:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4715:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4729:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4725:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:5"
																},
																"nativeSrc": "4725:7:5",
																"nodeType": "YulFunctionCall",
																"src": "4725:7:5"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4719:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4719:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4741:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4741:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4761:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4761:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4755:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4755:5:5"
																},
																"nativeSrc": "4755:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4755:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4745:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4745:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4773:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4795:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4795:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4819:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "4819:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4823:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4823:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4815:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4815:3:5"
																								},
																								"nativeSrc": "4815:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4815:13:5"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4830:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "4830:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4811:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4811:3:5"
																						},
																						"nativeSrc": "4811:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4811:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4835:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4835:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4807:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4807:3:5"
																				},
																				"nativeSrc": "4807:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4807:31:5"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4840:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4840:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4803:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:5"
																		},
																		"nativeSrc": "4803:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4791:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:5"
																},
																"nativeSrc": "4791:53:5",
																"nodeType": "YulFunctionCall",
																"src": "4791:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4777:10:5",
																	"nodeType": "YulTypedName",
																	"src": "4777:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4903:22:5",
																"nodeType": "YulBlock",
																"src": "4903:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4905:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4905:16:5"
																			},
																			"nativeSrc": "4905:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4905:18:5"
																		},
																		"nativeSrc": "4905:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4862:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4862:10:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4874:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4874:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4859:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4859:2:5"
																		},
																		"nativeSrc": "4859:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4859:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4882:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4882:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4894:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4879:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4879:2:5"
																		},
																		"nativeSrc": "4879:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4856:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4856:2:5"
																},
																"nativeSrc": "4856:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4856:46:5"
															},
															"nativeSrc": "4853:72:5",
															"nodeType": "YulIf",
															"src": "4853:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4945:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "4945:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4934:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:5"
																},
																"nativeSrc": "4934:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4934:22:5"
															},
															"nativeSrc": "4934:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4934:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4972:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4972:6:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4980:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4980:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:5"
																},
																"nativeSrc": "4965:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4965:18:5"
															},
															"nativeSrc": "4965:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "4965:18:5"
														},
														{
															"body": {
																"nativeSrc": "5029:16:5",
																"nodeType": "YulBlock",
																"src": "5029:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5038:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5038:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5041:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5041:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5031:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5031:6:5"
																			},
																			"nativeSrc": "5031:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5031:12:5"
																		},
																		"nativeSrc": "5031:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5031:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5006:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5006:2:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "5010:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5010:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5002:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5002:3:5"
																				},
																				"nativeSrc": "5002:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5002:11:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5015:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5015:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4998:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:5"
																		},
																		"nativeSrc": "4998:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4998:20:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5020:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "5020:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4995:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4995:2:5"
																},
																"nativeSrc": "4995:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4995:33:5"
															},
															"nativeSrc": "4992:53:5",
															"nodeType": "YulIf",
															"src": "4992:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5071:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5071:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5079:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5079:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:5"
																		},
																		"nativeSrc": "5067:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5088:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "5088:2:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5092:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5084:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5084:3:5"
																		},
																		"nativeSrc": "5084:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:11:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "5097:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5097:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5054:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5054:12:5"
																},
																"nativeSrc": "5054:46:5",
																"nodeType": "YulFunctionCall",
																"src": "5054:46:5"
															},
															"nativeSrc": "5054:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "5054:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "5124:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5124:6:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "5132:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5132:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5120:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:5"
																				},
																				"nativeSrc": "5120:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5120:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5137:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5137:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5116:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:5"
																		},
																		"nativeSrc": "5116:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:24:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5142:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5142:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5109:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:5"
																},
																"nativeSrc": "5109:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5109:35:5"
															},
															"nativeSrc": "5109:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "5109:35:5"
														},
														{
															"nativeSrc": "5153:16:5",
															"nodeType": "YulAssignment",
															"src": "5153:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5163:6:5",
																"nodeType": "YulIdentifier",
																"src": "5163:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5153:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "4037:1138:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4109:9:5",
														"nodeType": "YulTypedName",
														"src": "4109:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4120:7:5",
														"nodeType": "YulTypedName",
														"src": "4120:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4132:6:5",
														"nodeType": "YulTypedName",
														"src": "4132:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4140:6:5",
														"nodeType": "YulTypedName",
														"src": "4140:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4148:6:5",
														"nodeType": "YulTypedName",
														"src": "4148:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4156:6:5",
														"nodeType": "YulTypedName",
														"src": "4156:6:5",
														"type": ""
													}
												],
												"src": "4037:1138:5"
											},
											{
												"body": {
													"nativeSrc": "5267:173:5",
													"nodeType": "YulBlock",
													"src": "5267:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5313:16:5",
																"nodeType": "YulBlock",
																"src": "5313:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5322:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5322:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5325:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5325:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5315:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5315:6:5"
																			},
																			"nativeSrc": "5315:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5315:12:5"
																		},
																		"nativeSrc": "5315:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5315:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5288:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5288:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5297:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5297:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5284:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5284:3:5"
																		},
																		"nativeSrc": "5284:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5284:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5309:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5309:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5280:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5280:3:5"
																},
																"nativeSrc": "5280:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5280:32:5"
															},
															"nativeSrc": "5277:52:5",
															"nodeType": "YulIf",
															"src": "5277:52:5"
														},
														{
															"nativeSrc": "5338:39:5",
															"nodeType": "YulAssignment",
															"src": "5338:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5367:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5367:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5348:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5348:18:5"
																},
																"nativeSrc": "5348:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5348:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5338:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:5"
																}
															]
														},
														{
															"nativeSrc": "5386:48:5",
															"nodeType": "YulAssignment",
															"src": "5386:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5419:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5430:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:5"
																		},
																		"nativeSrc": "5415:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5396:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5396:18:5"
																},
																"nativeSrc": "5396:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5396:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5386:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5180:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5225:9:5",
														"nodeType": "YulTypedName",
														"src": "5225:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5236:7:5",
														"nodeType": "YulTypedName",
														"src": "5236:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5248:6:5",
														"nodeType": "YulTypedName",
														"src": "5248:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5256:6:5",
														"nodeType": "YulTypedName",
														"src": "5256:6:5",
														"type": ""
													}
												],
												"src": "5180:260:5"
											},
											{
												"body": {
													"nativeSrc": "5512:113:5",
													"nodeType": "YulBlock",
													"src": "5512:113:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5558:16:5",
																"nodeType": "YulBlock",
																"src": "5558:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5567:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5567:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5570:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5560:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5560:6:5"
																			},
																			"nativeSrc": "5560:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5560:12:5"
																		},
																		"nativeSrc": "5560:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5560:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5533:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5533:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5542:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5529:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5529:3:5"
																		},
																		"nativeSrc": "5529:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5529:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5525:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:5"
																},
																"nativeSrc": "5525:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5525:32:5"
															},
															"nativeSrc": "5522:52:5",
															"nodeType": "YulIf",
															"src": "5522:52:5"
														},
														{
															"nativeSrc": "5583:36:5",
															"nodeType": "YulAssignment",
															"src": "5583:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5609:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5609:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "5593:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "5593:15:5"
																},
																"nativeSrc": "5593:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5593:26:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5583:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "5445:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:5",
														"nodeType": "YulTypedName",
														"src": "5478:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:5",
														"nodeType": "YulTypedName",
														"src": "5489:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:5",
														"nodeType": "YulTypedName",
														"src": "5501:6:5",
														"type": ""
													}
												],
												"src": "5445:180:5"
											},
											{
												"body": {
													"nativeSrc": "5685:325:5",
													"nodeType": "YulBlock",
													"src": "5685:325:5",
													"statements": [
														{
															"nativeSrc": "5695:22:5",
															"nodeType": "YulAssignment",
															"src": "5695:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5709:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5709:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5712:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5712:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5705:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:5"
																},
																"nativeSrc": "5705:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5705:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5695:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:5"
																}
															]
														},
														{
															"nativeSrc": "5726:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5726:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5756:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5756:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5762:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5762:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5752:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:5"
																},
																"nativeSrc": "5752:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5752:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5730:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5730:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5803:31:5",
																"nodeType": "YulBlock",
																"src": "5803:31:5",
																"statements": [
																	{
																		"nativeSrc": "5805:27:5",
																		"nodeType": "YulAssignment",
																		"src": "5805:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5819:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5819:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5827:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5827:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5815:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5815:3:5"
																			},
																			"nativeSrc": "5815:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5815:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5805:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5805:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5783:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5783:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5776:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:5"
																},
																"nativeSrc": "5776:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5776:26:5"
															},
															"nativeSrc": "5773:61:5",
															"nodeType": "YulIf",
															"src": "5773:61:5"
														},
														{
															"body": {
																"nativeSrc": "5893:111:5",
																"nodeType": "YulBlock",
																"src": "5893:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5914:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5914:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5921:3:5",
																							"nodeType": "YulLiteral",
																							"src": "5921:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5926:10:5",
																							"nodeType": "YulLiteral",
																							"src": "5926:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5917:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5917:3:5"
																					},
																					"nativeSrc": "5917:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5917:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5907:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5907:6:5"
																			},
																			"nativeSrc": "5907:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5907:31:5"
																		},
																		"nativeSrc": "5907:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5907:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5958:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5958:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5961:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5961:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5951:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:5"
																			},
																			"nativeSrc": "5951:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5951:15:5"
																		},
																		"nativeSrc": "5951:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5951:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5986:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5986:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5989:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5989:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5979:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5979:6:5"
																			},
																			"nativeSrc": "5979:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5979:15:5"
																		},
																		"nativeSrc": "5979:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5979:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5849:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5849:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5872:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5872:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5880:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5880:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5869:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5869:2:5"
																		},
																		"nativeSrc": "5869:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5869:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5846:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5846:2:5"
																},
																"nativeSrc": "5846:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5846:38:5"
															},
															"nativeSrc": "5843:161:5",
															"nodeType": "YulIf",
															"src": "5843:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5630:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5665:4:5",
														"nodeType": "YulTypedName",
														"src": "5665:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5674:6:5",
														"nodeType": "YulTypedName",
														"src": "5674:6:5",
														"type": ""
													}
												],
												"src": "5630:380:5"
											},
											{
												"body": {
													"nativeSrc": "6071:65:5",
													"nodeType": "YulBlock",
													"src": "6071:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6088:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6088:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6091:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6091:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6081:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6081:6:5"
																},
																"nativeSrc": "6081:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6081:14:5"
															},
															"nativeSrc": "6081:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "6081:14:5"
														},
														{
															"nativeSrc": "6104:26:5",
															"nodeType": "YulAssignment",
															"src": "6104:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6122:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6122:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6125:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6125:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6112:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "6112:9:5"
																},
																"nativeSrc": "6112:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6112:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6104:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6104:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "6015:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6054:3:5",
														"nodeType": "YulTypedName",
														"src": "6054:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6062:4:5",
														"nodeType": "YulTypedName",
														"src": "6062:4:5",
														"type": ""
													}
												],
												"src": "6015:121:5"
											},
											{
												"body": {
													"nativeSrc": "6222:437:5",
													"nodeType": "YulBlock",
													"src": "6222:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6255:398:5",
																"nodeType": "YulBlock",
																"src": "6255:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6276:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6276:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "6279:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6279:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6269:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6269:6:5"
																			},
																			"nativeSrc": "6269:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6269:16:5"
																		},
																		"nativeSrc": "6269:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6269:16:5"
																	},
																	{
																		"nativeSrc": "6298:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6298:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6320:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6320:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6323:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6323:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "6310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6310:9:5"
																			},
																			"nativeSrc": "6310:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "6302:4:5",
																				"nodeType": "YulTypedName",
																				"src": "6302:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6341:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6341:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6364:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6364:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6374:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6374:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "6381:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "6381:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6393:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6393:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6377:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6377:3:5"
																							},
																							"nativeSrc": "6377:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6377:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6370:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6370:3:5"
																					},
																					"nativeSrc": "6370:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6370:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6360:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6360:3:5"
																			},
																			"nativeSrc": "6360:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6360:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6345:11:5",
																				"nodeType": "YulTypedName",
																				"src": "6345:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6435:23:5",
																			"nodeType": "YulBlock",
																			"src": "6435:23:5",
																			"statements": [
																				{
																					"nativeSrc": "6437:19:5",
																					"nodeType": "YulAssignment",
																					"src": "6437:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "6452:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6452:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6437:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "6437:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6417:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6417:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6429:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6429:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6414:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6414:2:5"
																			},
																			"nativeSrc": "6414:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6414:20:5"
																		},
																		"nativeSrc": "6411:47:5",
																		"nodeType": "YulIf",
																		"src": "6411:47:5"
																	},
																	{
																		"nativeSrc": "6471:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6471:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6485:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6485:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6495:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6495:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6502:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6502:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6507:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6507:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6498:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6498:3:5"
																							},
																							"nativeSrc": "6498:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6498:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6491:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6491:3:5"
																					},
																					"nativeSrc": "6491:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6491:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6481:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6481:3:5"
																			},
																			"nativeSrc": "6481:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6481:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6475:2:5",
																				"nodeType": "YulTypedName",
																				"src": "6475:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6525:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6525:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "6538:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "6538:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "6529:5:5",
																				"nodeType": "YulTypedName",
																				"src": "6529:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6623:20:5",
																			"nodeType": "YulBlock",
																			"src": "6623:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6632:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6632:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6639:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6639:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "6625:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "6625:6:5"
																						},
																						"nativeSrc": "6625:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6625:16:5"
																					},
																					"nativeSrc": "6625:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "6625:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6573:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6573:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6580:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6580:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6570:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6570:2:5"
																			},
																			"nativeSrc": "6570:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6570:13:5"
																		},
																		"nativeSrc": "6562:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "6584:26:5",
																			"nodeType": "YulBlock",
																			"src": "6584:26:5",
																			"statements": [
																				{
																					"nativeSrc": "6586:22:5",
																					"nodeType": "YulAssignment",
																					"src": "6586:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6599:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6599:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6606:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6606:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6595:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6595:3:5"
																						},
																						"nativeSrc": "6595:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6595:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "6586:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "6586:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "6566:3:5",
																			"nodeType": "YulBlock",
																			"src": "6566:3:5",
																			"statements": []
																		},
																		"src": "6562:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6238:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6238:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6235:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6235:2:5"
																},
																"nativeSrc": "6235:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6235:11:5"
															},
															"nativeSrc": "6232:421:5",
															"nodeType": "YulIf",
															"src": "6232:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "6141:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6194:5:5",
														"nodeType": "YulTypedName",
														"src": "6194:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6201:3:5",
														"nodeType": "YulTypedName",
														"src": "6201:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6206:10:5",
														"nodeType": "YulTypedName",
														"src": "6206:10:5",
														"type": ""
													}
												],
												"src": "6141:518:5"
											},
											{
												"body": {
													"nativeSrc": "6749:81:5",
													"nodeType": "YulBlock",
													"src": "6749:81:5",
													"statements": [
														{
															"nativeSrc": "6759:65:5",
															"nodeType": "YulAssignment",
															"src": "6759:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6774:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6774:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6792:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6792:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6795:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "6795:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6788:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6788:3:5"
																								},
																								"nativeSrc": "6788:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6788:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6805:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6805:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6801:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6801:3:5"
																								},
																								"nativeSrc": "6801:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6801:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6784:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6784:3:5"
																						},
																						"nativeSrc": "6784:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6784:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6780:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:5"
																				},
																				"nativeSrc": "6780:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6780:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6770:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:5"
																		},
																		"nativeSrc": "6770:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6770:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6816:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6816:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6819:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6819:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6812:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:5"
																		},
																		"nativeSrc": "6812:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6812:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6767:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6767:2:5"
																},
																"nativeSrc": "6767:57:5",
																"nodeType": "YulFunctionCall",
																"src": "6767:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6759:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6759:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6664:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6726:4:5",
														"nodeType": "YulTypedName",
														"src": "6726:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6732:3:5",
														"nodeType": "YulTypedName",
														"src": "6732:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6740:4:5",
														"nodeType": "YulTypedName",
														"src": "6740:4:5",
														"type": ""
													}
												],
												"src": "6664:166:5"
											},
											{
												"body": {
													"nativeSrc": "6938:1095:5",
													"nodeType": "YulBlock",
													"src": "6938:1095:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6979:22:5",
																"nodeType": "YulBlock",
																"src": "6979:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6981:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6981:16:5"
																			},
																			"nativeSrc": "6981:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6981:18:5"
																		},
																		"nativeSrc": "6981:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6981:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6954:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6954:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6959:18:5",
																		"nodeType": "YulLiteral",
																		"src": "6959:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6951:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6951:2:5"
																},
																"nativeSrc": "6951:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6951:27:5"
															},
															"nativeSrc": "6948:53:5",
															"nodeType": "YulIf",
															"src": "6948:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7054:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7054:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7092:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "7092:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7086:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "7086:5:5"
																				},
																				"nativeSrc": "7086:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7086:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "7060:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "7060:25:5"
																		},
																		"nativeSrc": "7060:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:38:5"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7100:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "7010:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7010:43:5"
																},
																"nativeSrc": "7010:94:5",
																"nodeType": "YulFunctionCall",
																"src": "7010:94:5"
															},
															"nativeSrc": "7010:94:5",
															"nodeType": "YulExpressionStatement",
															"src": "7010:94:5"
														},
														{
															"nativeSrc": "7113:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7113:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7130:1:5",
																"nodeType": "YulLiteral",
																"src": "7130:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7117:9:5",
																	"nodeType": "YulTypedName",
																	"src": "7117:9:5",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7174:601:5",
																		"nodeType": "YulBlock",
																		"src": "7174:601:5",
																		"statements": [
																			{
																				"nativeSrc": "7188:32:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7188:32:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nativeSrc": "7207:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7207:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7216:2:5",
																									"nodeType": "YulLiteral",
																									"src": "7216:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7212:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "7212:3:5"
																							},
																							"nativeSrc": "7212:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7212:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7203:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7203:3:5"
																					},
																					"nativeSrc": "7203:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7203:17:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7192:7:5",
																						"nodeType": "YulTypedName",
																						"src": "7192:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7233:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7233:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7277:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "7277:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "7247:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "7247:29:5"
																					},
																					"nativeSrc": "7247:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7247:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7237:6:5",
																						"nodeType": "YulTypedName",
																						"src": "7237:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7295:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7295:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7304:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7304:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7299:1:5",
																						"nodeType": "YulTypedName",
																						"src": "7299:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7375:172:5",
																					"nodeType": "YulBlock",
																					"src": "7375:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7400:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7400:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7425:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "7425:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7430:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "7430:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7421:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7421:3:5"
																												},
																												"nativeSrc": "7421:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7421:19:5"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "7408:12:5",
																											"nodeType": "YulIdentifier",
																											"src": "7408:12:5"
																										},
																										"nativeSrc": "7408:33:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7408:33:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7393:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7393:6:5"
																								},
																								"nativeSrc": "7393:49:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7393:49:5"
																							},
																							"nativeSrc": "7393:49:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7393:49:5"
																						},
																						{
																							"nativeSrc": "7459:24:5",
																							"nodeType": "YulAssignment",
																							"src": "7459:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7473:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7473:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7481:1:5",
																										"nodeType": "YulLiteral",
																										"src": "7481:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7469:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7469:3:5"
																								},
																								"nativeSrc": "7469:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7469:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7459:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7459:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7500:33:5",
																							"nodeType": "YulAssignment",
																							"src": "7500:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7517:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "7517:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7528:4:5",
																										"nodeType": "YulLiteral",
																										"src": "7528:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7513:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7513:3:5"
																								},
																								"nativeSrc": "7513:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7513:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7500:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "7500:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7329:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "7329:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7332:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7332:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7326:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7326:2:5"
																					},
																					"nativeSrc": "7326:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7326:14:5"
																				},
																				"nativeSrc": "7318:229:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7341:21:5",
																					"nodeType": "YulBlock",
																					"src": "7341:21:5",
																					"statements": [
																						{
																							"nativeSrc": "7343:17:5",
																							"nodeType": "YulAssignment",
																							"src": "7343:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7352:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "7352:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7355:4:5",
																										"nodeType": "YulLiteral",
																										"src": "7355:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7348:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7348:3:5"
																								},
																								"nativeSrc": "7348:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7348:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7343:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "7343:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7322:3:5",
																					"nodeType": "YulBlock",
																					"src": "7322:3:5",
																					"statements": []
																				},
																				"src": "7318:229:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "7592:127:5",
																					"nodeType": "YulBlock",
																					"src": "7592:127:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7617:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7617:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nativeSrc": "7646:3:5",
																																"nodeType": "YulIdentifier",
																																"src": "7646:3:5"
																															},
																															{
																																"name": "srcOffset",
																																"nativeSrc": "7651:9:5",
																																"nodeType": "YulIdentifier",
																																"src": "7651:9:5"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nativeSrc": "7642:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "7642:3:5"
																														},
																														"nativeSrc": "7642:19:5",
																														"nodeType": "YulFunctionCall",
																														"src": "7642:19:5"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nativeSrc": "7629:12:5",
																													"nodeType": "YulIdentifier",
																													"src": "7629:12:5"
																												},
																												"nativeSrc": "7629:33:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7629:33:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7680:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "7680:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nativeSrc": "7683:3:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "7683:3:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7676:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "7676:3:5"
																																		},
																																		"nativeSrc": "7676:11:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7676:11:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7689:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7689:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7672:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7672:3:5"
																																},
																																"nativeSrc": "7672:21:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7672:21:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7699:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7699:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7695:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7695:3:5"
																																},
																																"nativeSrc": "7695:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7695:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7668:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "7668:3:5"
																														},
																														"nativeSrc": "7668:34:5",
																														"nodeType": "YulFunctionCall",
																														"src": "7668:34:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7664:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7664:3:5"
																												},
																												"nativeSrc": "7664:39:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7664:39:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7625:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7625:3:5"
																										},
																										"nativeSrc": "7625:79:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7625:79:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7610:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7610:6:5"
																								},
																								"nativeSrc": "7610:95:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7610:95:5"
																							},
																							"nativeSrc": "7610:95:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7610:95:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7566:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7566:7:5"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "7575:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7575:3:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7563:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7563:2:5"
																					},
																					"nativeSrc": "7563:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7563:16:5"
																				},
																				"nativeSrc": "7560:159:5",
																				"nodeType": "YulIf",
																				"src": "7560:159:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7739:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "7739:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7753:1:5",
																											"nodeType": "YulLiteral",
																											"src": "7753:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nativeSrc": "7756:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7756:3:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "7749:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "7749:3:5"
																									},
																									"nativeSrc": "7749:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "7749:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7762:1:5",
																									"nodeType": "YulLiteral",
																									"src": "7762:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7745:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "7745:3:5"
																							},
																							"nativeSrc": "7745:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7745:19:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7732:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7732:6:5"
																					},
																					"nativeSrc": "7732:33:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7732:33:5"
																				},
																				"nativeSrc": "7732:33:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "7732:33:5"
																			}
																		]
																	},
																	"nativeSrc": "7167:608:5",
																	"nodeType": "YulCase",
																	"src": "7167:608:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7172:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7172:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7792:235:5",
																		"nodeType": "YulBlock",
																		"src": "7792:235:5",
																		"statements": [
																			{
																				"nativeSrc": "7806:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7806:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7819:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7819:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7810:5:5",
																						"nodeType": "YulTypedName",
																						"src": "7810:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7852:74:5",
																					"nodeType": "YulBlock",
																					"src": "7852:74:5",
																					"statements": [
																						{
																							"nativeSrc": "7870:42:5",
																							"nodeType": "YulAssignment",
																							"src": "7870:42:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7896:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "7896:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7901:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "7901:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7892:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7892:3:5"
																										},
																										"nativeSrc": "7892:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7892:19:5"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "7879:12:5",
																									"nodeType": "YulIdentifier",
																									"src": "7879:12:5"
																								},
																								"nativeSrc": "7879:33:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7879:33:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7870:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "7870:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nativeSrc": "7836:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7836:3:5"
																				},
																				"nativeSrc": "7833:93:5",
																				"nodeType": "YulIf",
																				"src": "7833:93:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7946:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "7946:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8005:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8005:5:5"
																								},
																								{
																									"name": "len",
																									"nativeSrc": "8012:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "8012:3:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7952:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "7952:52:5"
																							},
																							"nativeSrc": "7952:64:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7952:64:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7939:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7939:6:5"
																					},
																					"nativeSrc": "7939:78:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7939:78:5"
																				},
																				"nativeSrc": "7939:78:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "7939:78:5"
																			}
																		]
																	},
																	"nativeSrc": "7784:243:5",
																	"nodeType": "YulCase",
																	"src": "7784:243:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7150:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7150:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7155:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7147:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7147:2:5"
																},
																"nativeSrc": "7147:11:5",
																"nodeType": "YulFunctionCall",
																"src": "7147:11:5"
															},
															"nativeSrc": "7140:887:5",
															"nodeType": "YulSwitch",
															"src": "7140:887:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "6835:1198:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6918:4:5",
														"nodeType": "YulTypedName",
														"src": "6918:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6924:3:5",
														"nodeType": "YulTypedName",
														"src": "6924:3:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6929:3:5",
														"nodeType": "YulTypedName",
														"src": "6929:3:5",
														"type": ""
													}
												],
												"src": "6835:1198:5"
											},
											{
												"body": {
													"nativeSrc": "8212:164:5",
													"nodeType": "YulBlock",
													"src": "8212:164:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8229:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8229:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8240:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8240:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8222:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8222:6:5"
																},
																"nativeSrc": "8222:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8222:21:5"
															},
															"nativeSrc": "8222:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "8222:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8263:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8263:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8274:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8274:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8259:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8259:3:5"
																		},
																		"nativeSrc": "8259:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8259:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8252:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8252:6:5"
																},
																"nativeSrc": "8252:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8252:30:5"
															},
															"nativeSrc": "8252:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8252:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8302:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8313:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8298:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:5"
																		},
																		"nativeSrc": "8298:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:5"
																	},
																	{
																		"hexValue": "4d696e7420697320706175736564",
																		"kind": "string",
																		"nativeSrc": "8318:16:5",
																		"nodeType": "YulLiteral",
																		"src": "8318:16:5",
																		"type": "",
																		"value": "Mint is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8291:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:5"
																},
																"nativeSrc": "8291:44:5",
																"nodeType": "YulFunctionCall",
																"src": "8291:44:5"
															},
															"nativeSrc": "8291:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "8291:44:5"
														},
														{
															"nativeSrc": "8344:26:5",
															"nodeType": "YulAssignment",
															"src": "8344:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8356:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8356:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8367:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8367:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8352:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8352:3:5"
																},
																"nativeSrc": "8352:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8352:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8344:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8344:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5399184c2076f566882f1fc75b9dfe0bde0db13e3df52a00fb810ba4306e75c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8038:338:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8189:9:5",
														"nodeType": "YulTypedName",
														"src": "8189:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8203:4:5",
														"nodeType": "YulTypedName",
														"src": "8203:4:5",
														"type": ""
													}
												],
												"src": "8038:338:5"
											},
											{
												"body": {
													"nativeSrc": "8555:166:5",
													"nodeType": "YulBlock",
													"src": "8555:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8572:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8572:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8583:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8583:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:5"
																},
																"nativeSrc": "8565:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8565:21:5"
															},
															"nativeSrc": "8565:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "8565:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8606:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8617:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8617:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8602:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8602:3:5"
																		},
																		"nativeSrc": "8602:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8622:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8622:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8595:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:5"
																},
																"nativeSrc": "8595:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8595:30:5"
															},
															"nativeSrc": "8595:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8595:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8645:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8645:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8656:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8656:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8641:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:5"
																		},
																		"nativeSrc": "8641:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8641:18:5"
																	},
																	{
																		"hexValue": "53616c65206e6f742073746172746564",
																		"kind": "string",
																		"nativeSrc": "8661:18:5",
																		"nodeType": "YulLiteral",
																		"src": "8661:18:5",
																		"type": "",
																		"value": "Sale not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8634:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:5"
																},
																"nativeSrc": "8634:46:5",
																"nodeType": "YulFunctionCall",
																"src": "8634:46:5"
															},
															"nativeSrc": "8634:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "8634:46:5"
														},
														{
															"nativeSrc": "8689:26:5",
															"nodeType": "YulAssignment",
															"src": "8689:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8701:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8712:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8712:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8697:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:5"
																},
																"nativeSrc": "8697:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8697:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8689:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a36ce2fe11e7a22ec094f53a6a94ebaa3066bd42273542ea31d71f057a6ad24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8381:340:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8532:9:5",
														"nodeType": "YulTypedName",
														"src": "8532:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8546:4:5",
														"nodeType": "YulTypedName",
														"src": "8546:4:5",
														"type": ""
													}
												],
												"src": "8381:340:5"
											},
											{
												"body": {
													"nativeSrc": "8758:95:5",
													"nodeType": "YulBlock",
													"src": "8758:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8775:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8775:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8782:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8782:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8787:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8787:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8778:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:5"
																		},
																		"nativeSrc": "8778:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8778:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8768:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8768:6:5"
																},
																"nativeSrc": "8768:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8768:31:5"
															},
															"nativeSrc": "8768:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8768:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8815:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8815:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8818:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8818:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8808:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8808:6:5"
																},
																"nativeSrc": "8808:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8808:15:5"
															},
															"nativeSrc": "8808:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8808:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8842:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8832:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:5"
																},
																"nativeSrc": "8832:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8832:15:5"
															},
															"nativeSrc": "8832:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8832:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8726:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8726:127:5"
											},
											{
												"body": {
													"nativeSrc": "8906:77:5",
													"nodeType": "YulBlock",
													"src": "8906:77:5",
													"statements": [
														{
															"nativeSrc": "8916:16:5",
															"nodeType": "YulAssignment",
															"src": "8916:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8927:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8927:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8930:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8930:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8923:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8923:3:5"
																},
																"nativeSrc": "8923:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8923:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8916:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8955:22:5",
																"nodeType": "YulBlock",
																"src": "8955:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8957:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8957:16:5"
																			},
																			"nativeSrc": "8957:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8957:18:5"
																		},
																		"nativeSrc": "8957:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8957:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8947:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8947:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8950:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8950:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8944:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8944:2:5"
																},
																"nativeSrc": "8944:10:5",
																"nodeType": "YulFunctionCall",
																"src": "8944:10:5"
															},
															"nativeSrc": "8941:36:5",
															"nodeType": "YulIf",
															"src": "8941:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8858:125:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8889:1:5",
														"nodeType": "YulTypedName",
														"src": "8889:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8892:1:5",
														"nodeType": "YulTypedName",
														"src": "8892:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8898:3:5",
														"nodeType": "YulTypedName",
														"src": "8898:3:5",
														"type": ""
													}
												],
												"src": "8858:125:5"
											},
											{
												"body": {
													"nativeSrc": "9162:164:5",
													"nodeType": "YulBlock",
													"src": "9162:164:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9179:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9179:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9190:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9190:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9172:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9172:6:5"
																},
																"nativeSrc": "9172:21:5",
																"nodeType": "YulFunctionCall",
																"src": "9172:21:5"
															},
															"nativeSrc": "9172:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "9172:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9213:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9224:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9224:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9209:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:5"
																		},
																		"nativeSrc": "9209:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9229:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9229:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9202:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9202:6:5"
																},
																"nativeSrc": "9202:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9202:30:5"
															},
															"nativeSrc": "9202:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9202:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9252:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9252:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9263:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9263:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9248:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9248:3:5"
																		},
																		"nativeSrc": "9248:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9248:18:5"
																	},
																	{
																		"hexValue": "4d617820537570706c7920486974",
																		"kind": "string",
																		"nativeSrc": "9268:16:5",
																		"nodeType": "YulLiteral",
																		"src": "9268:16:5",
																		"type": "",
																		"value": "Max Supply Hit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9241:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9241:6:5"
																},
																"nativeSrc": "9241:44:5",
																"nodeType": "YulFunctionCall",
																"src": "9241:44:5"
															},
															"nativeSrc": "9241:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "9241:44:5"
														},
														{
															"nativeSrc": "9294:26:5",
															"nodeType": "YulAssignment",
															"src": "9294:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9306:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9306:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9317:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9317:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9302:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9302:3:5"
																},
																"nativeSrc": "9302:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9302:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9294:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9294:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f733e8a31024a32c5aeba2a6e8f3847e85b35d131aafeebef04e5956fc9af21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8988:338:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9139:9:5",
														"nodeType": "YulTypedName",
														"src": "9139:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9153:4:5",
														"nodeType": "YulTypedName",
														"src": "9153:4:5",
														"type": ""
													}
												],
												"src": "8988:338:5"
											},
											{
												"body": {
													"nativeSrc": "9505:175:5",
													"nodeType": "YulBlock",
													"src": "9505:175:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9522:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9522:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:5"
																},
																"nativeSrc": "9515:21:5",
																"nodeType": "YulFunctionCall",
																"src": "9515:21:5"
															},
															"nativeSrc": "9515:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "9515:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9556:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9567:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9567:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9552:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9552:3:5"
																		},
																		"nativeSrc": "9552:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9552:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9572:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:5",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:5"
																},
																"nativeSrc": "9545:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9545:30:5"
															},
															"nativeSrc": "9545:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9545:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9595:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9595:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9606:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9606:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9591:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9591:3:5"
																		},
																		"nativeSrc": "9591:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9591:18:5"
																	},
																	{
																		"hexValue": "4d6178204d696e742070657220757365722052656163686564",
																		"kind": "string",
																		"nativeSrc": "9611:27:5",
																		"nodeType": "YulLiteral",
																		"src": "9611:27:5",
																		"type": "",
																		"value": "Max Mint per user Reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9584:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9584:6:5"
																},
																"nativeSrc": "9584:55:5",
																"nodeType": "YulFunctionCall",
																"src": "9584:55:5"
															},
															"nativeSrc": "9584:55:5",
															"nodeType": "YulExpressionStatement",
															"src": "9584:55:5"
														},
														{
															"nativeSrc": "9648:26:5",
															"nodeType": "YulAssignment",
															"src": "9648:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9660:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9660:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9671:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9671:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9656:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9656:3:5"
																},
																"nativeSrc": "9656:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9656:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9648:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9648:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e271d0129e8e12cda0aaa8784505b29d15f9f3d3e0740882335d922c3502e98__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9331:349:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9482:9:5",
														"nodeType": "YulTypedName",
														"src": "9482:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9496:4:5",
														"nodeType": "YulTypedName",
														"src": "9496:4:5",
														"type": ""
													}
												],
												"src": "9331:349:5"
											},
											{
												"body": {
													"nativeSrc": "9737:116:5",
													"nodeType": "YulBlock",
													"src": "9737:116:5",
													"statements": [
														{
															"nativeSrc": "9747:20:5",
															"nodeType": "YulAssignment",
															"src": "9747:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9762:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9762:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9765:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9765:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9758:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9758:3:5"
																},
																"nativeSrc": "9758:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9758:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9747:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9747:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9825:22:5",
																"nodeType": "YulBlock",
																"src": "9825:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9827:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9827:16:5"
																			},
																			"nativeSrc": "9827:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9827:18:5"
																		},
																		"nativeSrc": "9827:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9827:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9796:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "9796:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9789:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "9789:6:5"
																				},
																				"nativeSrc": "9789:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9789:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9803:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "9803:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9810:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "9810:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9819:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "9819:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9806:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9806:3:5"
																						},
																						"nativeSrc": "9806:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9806:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9800:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "9800:2:5"
																				},
																				"nativeSrc": "9800:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9800:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9786:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9786:2:5"
																		},
																		"nativeSrc": "9786:37:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9786:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9779:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9779:6:5"
																},
																"nativeSrc": "9779:45:5",
																"nodeType": "YulFunctionCall",
																"src": "9779:45:5"
															},
															"nativeSrc": "9776:71:5",
															"nodeType": "YulIf",
															"src": "9776:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9685:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9716:1:5",
														"nodeType": "YulTypedName",
														"src": "9716:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9719:1:5",
														"nodeType": "YulTypedName",
														"src": "9719:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9725:7:5",
														"nodeType": "YulTypedName",
														"src": "9725:7:5",
														"type": ""
													}
												],
												"src": "9685:168:5"
											},
											{
												"body": {
													"nativeSrc": "10032:168:5",
													"nodeType": "YulBlock",
													"src": "10032:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10049:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10049:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10060:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10060:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10042:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10042:6:5"
																},
																"nativeSrc": "10042:21:5",
																"nodeType": "YulFunctionCall",
																"src": "10042:21:5"
															},
															"nativeSrc": "10042:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "10042:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10083:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10083:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10094:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10094:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10079:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:5"
																		},
																		"nativeSrc": "10079:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10079:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10099:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10099:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10072:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10072:6:5"
																},
																"nativeSrc": "10072:30:5",
																"nodeType": "YulFunctionCall",
																"src": "10072:30:5"
															},
															"nativeSrc": "10072:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "10072:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10133:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10133:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:5"
																		},
																		"nativeSrc": "10118:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:18:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742046756e6473",
																		"kind": "string",
																		"nativeSrc": "10138:20:5",
																		"nodeType": "YulLiteral",
																		"src": "10138:20:5",
																		"type": "",
																		"value": "Insufficient Funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:5"
																},
																"nativeSrc": "10111:48:5",
																"nodeType": "YulFunctionCall",
																"src": "10111:48:5"
															},
															"nativeSrc": "10111:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "10111:48:5"
														},
														{
															"nativeSrc": "10168:26:5",
															"nodeType": "YulAssignment",
															"src": "10168:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10180:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10180:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10191:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10191:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10176:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10176:3:5"
																},
																"nativeSrc": "10176:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10176:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10168:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10168:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9858:342:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10009:9:5",
														"nodeType": "YulTypedName",
														"src": "10009:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10023:4:5",
														"nodeType": "YulTypedName",
														"src": "10023:4:5",
														"type": ""
													}
												],
												"src": "9858:342:5"
											},
											{
												"body": {
													"nativeSrc": "10392:309:5",
													"nodeType": "YulBlock",
													"src": "10392:309:5",
													"statements": [
														{
															"nativeSrc": "10402:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10402:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10422:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10422:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10416:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10416:5:5"
																},
																"nativeSrc": "10416:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10416:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10406:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10406:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10477:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10477:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10485:4:5",
																				"nodeType": "YulLiteral",
																				"src": "10485:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10473:3:5"
																		},
																		"nativeSrc": "10473:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10473:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10492:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10492:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10438:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "10438:34:5"
																},
																"nativeSrc": "10438:66:5",
																"nodeType": "YulFunctionCall",
																"src": "10438:66:5"
															},
															"nativeSrc": "10438:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "10438:66:5"
														},
														{
															"nativeSrc": "10513:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10530:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10530:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10535:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10535:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10526:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10526:3:5"
																},
																"nativeSrc": "10526:16:5",
																"nodeType": "YulFunctionCall",
																"src": "10526:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "10517:5:5",
																	"nodeType": "YulTypedName",
																	"src": "10517:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10551:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10551:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10573:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10573:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10567:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10567:5:5"
																},
																"nativeSrc": "10567:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10567:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "10555:8:5",
																	"nodeType": "YulTypedName",
																	"src": "10555:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10628:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10628:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10636:4:5",
																				"nodeType": "YulLiteral",
																				"src": "10636:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10624:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:5"
																		},
																		"nativeSrc": "10624:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10624:17:5"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "10643:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10643:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10650:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "10650:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10589:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "10589:34:5"
																},
																"nativeSrc": "10589:70:5",
																"nodeType": "YulFunctionCall",
																"src": "10589:70:5"
															},
															"nativeSrc": "10589:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "10589:70:5"
														},
														{
															"nativeSrc": "10668:27:5",
															"nodeType": "YulAssignment",
															"src": "10668:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "10679:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10679:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10686:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "10686:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10675:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10675:3:5"
																},
																"nativeSrc": "10675:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10675:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10668:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10668:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10205:496:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10360:3:5",
														"nodeType": "YulTypedName",
														"src": "10360:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10365:6:5",
														"nodeType": "YulTypedName",
														"src": "10365:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10373:6:5",
														"nodeType": "YulTypedName",
														"src": "10373:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10384:3:5",
														"nodeType": "YulTypedName",
														"src": "10384:3:5",
														"type": ""
													}
												],
												"src": "10205:496:5"
											},
											{
												"body": {
													"nativeSrc": "10880:228:5",
													"nodeType": "YulBlock",
													"src": "10880:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10897:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10897:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10908:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10908:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10890:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10890:6:5"
																},
																"nativeSrc": "10890:21:5",
																"nodeType": "YulFunctionCall",
																"src": "10890:21:5"
															},
															"nativeSrc": "10890:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "10890:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10931:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10931:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10942:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10942:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10927:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10927:3:5"
																		},
																		"nativeSrc": "10927:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10927:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10947:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10947:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10920:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10920:6:5"
																},
																"nativeSrc": "10920:30:5",
																"nodeType": "YulFunctionCall",
																"src": "10920:30:5"
															},
															"nativeSrc": "10920:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "10920:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10970:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10981:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10966:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:5"
																		},
																		"nativeSrc": "10966:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "10986:34:5",
																		"nodeType": "YulLiteral",
																		"src": "10986:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10959:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:5"
																},
																"nativeSrc": "10959:62:5",
																"nodeType": "YulFunctionCall",
																"src": "10959:62:5"
															},
															"nativeSrc": "10959:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "10959:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11041:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11052:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11052:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11037:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:5"
																		},
																		"nativeSrc": "11037:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11037:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "11057:8:5",
																		"nodeType": "YulLiteral",
																		"src": "11057:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11030:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:5"
																},
																"nativeSrc": "11030:36:5",
																"nodeType": "YulFunctionCall",
																"src": "11030:36:5"
															},
															"nativeSrc": "11030:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "11030:36:5"
														},
														{
															"nativeSrc": "11075:27:5",
															"nodeType": "YulAssignment",
															"src": "11075:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11087:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11087:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11098:3:5",
																		"nodeType": "YulLiteral",
																		"src": "11098:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11083:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11083:3:5"
																},
																"nativeSrc": "11083:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11083:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11075:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11075:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10706:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10857:9:5",
														"nodeType": "YulTypedName",
														"src": "10857:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10871:4:5",
														"nodeType": "YulTypedName",
														"src": "10871:4:5",
														"type": ""
													}
												],
												"src": "10706:402:5"
											},
											{
												"body": {
													"nativeSrc": "11287:166:5",
													"nodeType": "YulBlock",
													"src": "11287:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11304:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11304:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11315:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11315:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11297:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11297:6:5"
																},
																"nativeSrc": "11297:21:5",
																"nodeType": "YulFunctionCall",
																"src": "11297:21:5"
															},
															"nativeSrc": "11297:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "11297:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11338:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11338:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11349:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11349:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11334:3:5"
																		},
																		"nativeSrc": "11334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11334:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11354:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11327:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11327:6:5"
																},
																"nativeSrc": "11327:30:5",
																"nodeType": "YulFunctionCall",
																"src": "11327:30:5"
															},
															"nativeSrc": "11327:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "11327:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11377:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11377:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11388:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11388:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11373:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11373:3:5"
																		},
																		"nativeSrc": "11373:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11373:18:5"
																	},
																	{
																		"hexValue": "436f6e7472616374207061757365642e",
																		"kind": "string",
																		"nativeSrc": "11393:18:5",
																		"nodeType": "YulLiteral",
																		"src": "11393:18:5",
																		"type": "",
																		"value": "Contract paused."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11366:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:5"
																},
																"nativeSrc": "11366:46:5",
																"nodeType": "YulFunctionCall",
																"src": "11366:46:5"
															},
															"nativeSrc": "11366:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "11366:46:5"
														},
														{
															"nativeSrc": "11421:26:5",
															"nodeType": "YulAssignment",
															"src": "11421:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11433:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11433:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11444:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11429:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:5"
																},
																"nativeSrc": "11429:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11429:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11421:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11421:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52fc37eea2c0d3c3f0ae18dbe0c776a45a7fea05024a6d448bf5c234ad2119f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11113:340:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11264:9:5",
														"nodeType": "YulTypedName",
														"src": "11264:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11278:4:5",
														"nodeType": "YulTypedName",
														"src": "11278:4:5",
														"type": ""
													}
												],
												"src": "11113:340:5"
											},
											{
												"body": {
													"nativeSrc": "11632:182:5",
													"nodeType": "YulBlock",
													"src": "11632:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11649:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11649:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11660:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11660:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11642:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11642:6:5"
																},
																"nativeSrc": "11642:21:5",
																"nodeType": "YulFunctionCall",
																"src": "11642:21:5"
															},
															"nativeSrc": "11642:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "11642:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11683:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11683:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11694:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11679:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11679:3:5"
																		},
																		"nativeSrc": "11679:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11679:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11699:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11699:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11672:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11672:6:5"
																},
																"nativeSrc": "11672:30:5",
																"nodeType": "YulFunctionCall",
																"src": "11672:30:5"
															},
															"nativeSrc": "11672:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "11672:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11722:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11722:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11733:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11733:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11718:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11718:3:5"
																		},
																		"nativeSrc": "11718:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11718:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11738:34:5",
																		"nodeType": "YulLiteral",
																		"src": "11738:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11711:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11711:6:5"
																},
																"nativeSrc": "11711:62:5",
																"nodeType": "YulFunctionCall",
																"src": "11711:62:5"
															},
															"nativeSrc": "11711:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "11711:62:5"
														},
														{
															"nativeSrc": "11782:26:5",
															"nodeType": "YulAssignment",
															"src": "11782:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11794:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11794:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11805:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11805:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11790:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11790:3:5"
																},
																"nativeSrc": "11790:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11790:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11782:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11782:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11458:356:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11609:9:5",
														"nodeType": "YulTypedName",
														"src": "11609:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11623:4:5",
														"nodeType": "YulTypedName",
														"src": "11623:4:5",
														"type": ""
													}
												],
												"src": "11458:356:5"
											},
											{
												"body": {
													"nativeSrc": "12022:286:5",
													"nodeType": "YulBlock",
													"src": "12022:286:5",
													"statements": [
														{
															"nativeSrc": "12032:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12032:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12050:3:5",
																				"nodeType": "YulLiteral",
																				"src": "12050:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12055:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12055:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12046:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12046:3:5"
																		},
																		"nativeSrc": "12046:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12046:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12059:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12059:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12042:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12042:3:5"
																},
																"nativeSrc": "12042:19:5",
																"nodeType": "YulFunctionCall",
																"src": "12042:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12036:2:5",
																	"nodeType": "YulTypedName",
																	"src": "12036:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12077:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12077:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12092:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12092:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12100:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "12100:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12088:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12088:3:5"
																		},
																		"nativeSrc": "12088:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12088:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12070:6:5"
																},
																"nativeSrc": "12070:34:5",
																"nodeType": "YulFunctionCall",
																"src": "12070:34:5"
															},
															"nativeSrc": "12070:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "12070:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12124:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12124:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12135:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12135:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12120:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:5"
																		},
																		"nativeSrc": "12120:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12120:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12144:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12144:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12152:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "12152:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12140:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:5"
																		},
																		"nativeSrc": "12140:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12140:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12113:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:5"
																},
																"nativeSrc": "12113:43:5",
																"nodeType": "YulFunctionCall",
																"src": "12113:43:5"
															},
															"nativeSrc": "12113:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "12113:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12176:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12176:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12187:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12187:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12172:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12172:3:5"
																		},
																		"nativeSrc": "12172:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12172:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12192:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12192:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12165:6:5"
																},
																"nativeSrc": "12165:34:5",
																"nodeType": "YulFunctionCall",
																"src": "12165:34:5"
															},
															"nativeSrc": "12165:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "12165:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12219:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12219:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12230:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12230:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12215:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12215:3:5"
																		},
																		"nativeSrc": "12215:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12215:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12235:3:5",
																		"nodeType": "YulLiteral",
																		"src": "12235:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12208:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12208:6:5"
																},
																"nativeSrc": "12208:31:5",
																"nodeType": "YulFunctionCall",
																"src": "12208:31:5"
															},
															"nativeSrc": "12208:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "12208:31:5"
														},
														{
															"nativeSrc": "12248:54:5",
															"nodeType": "YulAssignment",
															"src": "12248:54:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12274:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12274:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12286:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12286:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12297:3:5",
																				"nodeType": "YulLiteral",
																				"src": "12297:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12282:3:5"
																		},
																		"nativeSrc": "12282:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12282:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12256:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12256:17:5"
																},
																"nativeSrc": "12256:46:5",
																"nodeType": "YulFunctionCall",
																"src": "12256:46:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12248:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12248:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11819:489:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11967:9:5",
														"nodeType": "YulTypedName",
														"src": "11967:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11978:6:5",
														"nodeType": "YulTypedName",
														"src": "11978:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11986:6:5",
														"nodeType": "YulTypedName",
														"src": "11986:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11994:6:5",
														"nodeType": "YulTypedName",
														"src": "11994:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12002:6:5",
														"nodeType": "YulTypedName",
														"src": "12002:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12013:4:5",
														"nodeType": "YulTypedName",
														"src": "12013:4:5",
														"type": ""
													}
												],
												"src": "11819:489:5"
											},
											{
												"body": {
													"nativeSrc": "12393:169:5",
													"nodeType": "YulBlock",
													"src": "12393:169:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "12439:16:5",
																"nodeType": "YulBlock",
																"src": "12439:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12448:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12448:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12451:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12451:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12441:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12441:6:5"
																			},
																			"nativeSrc": "12441:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12441:12:5"
																		},
																		"nativeSrc": "12441:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12441:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12414:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "12414:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12423:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12423:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12410:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12410:3:5"
																		},
																		"nativeSrc": "12410:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12410:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12435:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12435:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12406:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12406:3:5"
																},
																"nativeSrc": "12406:32:5",
																"nodeType": "YulFunctionCall",
																"src": "12406:32:5"
															},
															"nativeSrc": "12403:52:5",
															"nodeType": "YulIf",
															"src": "12403:52:5"
														},
														{
															"nativeSrc": "12464:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12464:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12483:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12483:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12477:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12477:5:5"
																},
																"nativeSrc": "12477:16:5",
																"nodeType": "YulFunctionCall",
																"src": "12477:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12468:5:5",
																	"nodeType": "YulTypedName",
																	"src": "12468:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12526:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12526:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "12502:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "12502:23:5"
																},
																"nativeSrc": "12502:30:5",
																"nodeType": "YulFunctionCall",
																"src": "12502:30:5"
															},
															"nativeSrc": "12502:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "12502:30:5"
														},
														{
															"nativeSrc": "12541:15:5",
															"nodeType": "YulAssignment",
															"src": "12541:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "12551:5:5",
																"nodeType": "YulIdentifier",
																"src": "12551:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12541:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12541:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12313:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12359:9:5",
														"nodeType": "YulTypedName",
														"src": "12359:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12370:7:5",
														"nodeType": "YulTypedName",
														"src": "12370:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12382:6:5",
														"nodeType": "YulTypedName",
														"src": "12382:6:5",
														"type": ""
													}
												],
												"src": "12313:249:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f5399184c2076f566882f1fc75b9dfe0bde0db13e3df52a00fb810ba4306e75c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Mint is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a36ce2fe11e7a22ec094f53a6a94ebaa3066bd42273542ea31d71f057a6ad24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Sale not started\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9f733e8a31024a32c5aeba2a6e8f3847e85b35d131aafeebef04e5956fc9af21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Max Supply Hit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e271d0129e8e12cda0aaa8784505b29d15f9f3d3e0740882335d922c3502e98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Max Mint per user Reached\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient Funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52fc37eea2c0d3c3f0ae18dbe0c776a45a7fea05024a6d448bf5c234ad2119f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Contract paused.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"18": [
									{
										"length": 32,
										"start": 1006
									},
									{
										"length": 32,
										"start": 2286
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061017b575f3560e01c8063715018a6116100cd578063a22cb46511610087578063ddaa26ad11610062578063ddaa26ad146103dd578063e985e9c514610410578063f2fde38b1461042f578063f30e6e771461044e575f80fd5b8063a22cb4651461038c578063b88d4fde146103ab578063c87b56dd146103be575f80fd5b8063715018a6146103015780637e4831d314610315578063833b94991461032e5780638da5cb5b1461034957806395d89b4114610365578063a0712d6814610379575f80fd5b806332cb6b0c1161013857806355f804b31161011357806355f804b31461029057806360f1f878146102af5780636352211e146102c357806370a08231146102e2575f80fd5b806332cb6b0c146102555780633ccfd60b1461026957806342842e0e1461027d575f80fd5b806301ffc9a71461017f57806306fdde03146101b3578063081812fc146101d4578063095ea7b31461020b57806318160ddd1461022057806323b872dd14610242575b5f80fd5b34801561018a575f80fd5b5061019e6101993660046110c5565b61046d565b60405190151581526020015b60405180910390f35b3480156101be575f80fd5b506101c76104be565b6040516101aa919061112d565b3480156101df575f80fd5b506101f36101ee36600461113f565b61054e565b6040516001600160a01b0390911681526020016101aa565b61021e610219366004611171565b610590565b005b34801561022b575f80fd5b50600254600154035b6040519081526020016101aa565b61021e610250366004611199565b61062e565b348015610260575f80fd5b50610234606481565b348015610274575f80fd5b5061021e6107be565b61021e61028b366004611199565b6107f6565b34801561029b575f80fd5b5061021e6102aa3660046111d2565b610815565b3480156102ba575f80fd5b50610234600581565b3480156102ce575f80fd5b506101f36102dd36600461113f565b61082a565b3480156102ed575f80fd5b506102346102fc36600461123e565b610834565b34801561030c575f80fd5b5061021e610881565b348015610320575f80fd5b5060095461019e9060ff1681565b348015610339575f80fd5b50610234670de0b6b3a764000081565b348015610354575f80fd5b505f546001600160a01b03166101f3565b348015610370575f80fd5b506101c7610894565b61021e61038736600461113f565b6108a3565b348015610397575f80fd5b5061021e6103a6366004611266565b610a7f565b61021e6103b93660046112ab565b610aea565b3480156103c9575f80fd5b506101c76103d836600461113f565b610b34565b3480156103e8575f80fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b34801561041b575f80fd5b5061019e61042a366004611380565b610bb5565b34801561043a575f80fd5b5061021e61044936600461123e565b610be2565b348015610459575f80fd5b5061021e6104683660046113a8565b610c58565b5f6301ffc9a760e01b6001600160e01b03198316148061049d57506380ac58cd60e01b6001600160e01b03198316145b806104b85750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600380546104cd906113c1565b80601f01602080910402602001604051908101604052809291908181526020018280546104f9906113c1565b80156105445780601f1061051b57610100808354040283529160200191610544565b820191905f5260205f20905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b5f61055882610cb9565b610575576040516333d1c03960e21b815260040160405180910390fd5b505f908152600760205260409020546001600160a01b031690565b5f61059a8261082a565b9050336001600160a01b038216146105d3576105b68133610bb5565b6105d3576040516367d9dca160e11b815260040160405180910390fd5b5f8281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b5f61063882610cdf565b9050836001600160a01b0316816001600160a01b03161461066b5760405162a1148160e81b815260040160405180910390fd5b5f8281526007602052604090208054338082146001600160a01b038816909114176106b75761069a8633610bb5565b6106b757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166106de57604051633a954ecd60e21b815260040160405180910390fd5b80156106e8575f82555b6001600160a01b038681165f9081526006602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260056020526040812091909155600160e11b8416900361077557600184015f818152600560205260408120549003610773576001548114610773575f8181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6107c6610d41565b6040514790339082156108fc029083905f818181858888f193505050501580156107f2573d5f803e3d5ffd5b5050565b61081083838360405180602001604052805f815250610aea565b505050565b61081d610d41565b600a61081082848361143d565b5f6104b882610cdf565b5f6001600160a01b03821661085c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03165f9081526006602052604090205467ffffffffffffffff1690565b610889610d41565b6108925f610d9a565b565b6060600480546104cd906113c1565b60095460ff16156108ec5760405162461bcd60e51b815260206004820152600e60248201526d135a5b9d081a5cc81c185d5cd95960921b60448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042101561094f5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481b9bdd081cdd185c9d195960821b60448201526064016108e3565b60648161095b60015490565b610965919061150b565b11156109a45760405162461bcd60e51b815260206004820152600e60248201526d13585e0814dd5c1c1b1e48121a5d60921b60448201526064016108e3565b335f9081526006602052604090819020546005916109ce9184911c67ffffffffffffffff1661150b565b1115610a1c5760405162461bcd60e51b815260206004820152601960248201527f4d6178204d696e7420706572207573657220526561636865640000000000000060448201526064016108e3565b610a2e670de0b6b3a76400008261151e565b341015610a725760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b60448201526064016108e3565b610a7c3382610de9565b50565b335f8181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610af584848461062e565b6001600160a01b0383163b15610b2e57610b1184848484610e02565b610b2e576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610b3f82610cb9565b610b5c57604051630a14c4b560e41b815260040160405180910390fd5b5f610b65610ee9565b905080515f03610b835760405180602001604052805f815250610bae565b80610b8d84610f09565b604051602001610b9e929190611535565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260086020908152604080832093909416825291909152205460ff1690565b610bea610d41565b6001600160a01b038116610c4f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e3565b610a7c81610d9a565b610c60610d41565b60095460ff1615610ca65760405162461bcd60e51b815260206004820152601060248201526f21b7b73a3930b1ba103830bab9b2b21760811b60448201526064016108e3565b6009805460ff1916911515919091179055565b5f600154821080156104b85750505f90815260056020526040902054600160e01b161590565b5f81600154811015610d28575f8181526005602052604081205490600160e01b82169003610d26575b805f03610bae57505f19015f81815260056020526040902054610d08565b505b604051636f96cda160e11b815260040160405180910390fd5b5f546001600160a01b031633146108925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107f2828260405180602001604052805f815250610f4c565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290610e36903390899088908890600401611563565b6020604051808303815f875af1925050508015610e70575060408051601f3d908101601f19168201909252610e6d9181019061159f565b60015b610ecc573d808015610e9d576040519150601f19603f3d011682016040523d82523d5f602084013e610ea2565b606091505b5080515f03610ec4576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606040518060800160405280604481526020016115bb60449139905090565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480610f225750819003601f19909101908152919050565b610f568383610fb7565b6001600160a01b0383163b15610810576001548281035b610f7f5f868380600101945086610e02565b610f9c576040516368d2bf6b60e11b815260040160405180910390fd5b818110610f6d578160015414610fb0575f80fd5b5050505050565b6001545f829003610fdb5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0383165f8181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146110875780835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4600101611051565b50815f036110a757604051622e076360e81b815260040160405180910390fd5b60015550505050565b6001600160e01b031981168114610a7c575f80fd5b5f602082840312156110d5575f80fd5b8135610bae816110b0565b5f5b838110156110fa5781810151838201526020016110e2565b50505f910152565b5f81518084526111198160208601602086016110e0565b601f01601f19169290920160200192915050565b602081525f610bae6020830184611102565b5f6020828403121561114f575f80fd5b5035919050565b80356001600160a01b038116811461116c575f80fd5b919050565b5f8060408385031215611182575f80fd5b61118b83611156565b946020939093013593505050565b5f805f606084860312156111ab575f80fd5b6111b484611156565b92506111c260208501611156565b9150604084013590509250925092565b5f80602083850312156111e3575f80fd5b823567ffffffffffffffff808211156111fa575f80fd5b818501915085601f83011261120d575f80fd5b81358181111561121b575f80fd5b86602082850101111561122c575f80fd5b60209290920196919550909350505050565b5f6020828403121561124e575f80fd5b610bae82611156565b8035801515811461116c575f80fd5b5f8060408385031215611277575f80fd5b61128083611156565b915061128e60208401611257565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156112be575f80fd5b6112c785611156565b93506112d560208601611156565b925060408501359150606085013567ffffffffffffffff808211156112f8575f80fd5b818701915087601f83011261130b575f80fd5b81358181111561131d5761131d611297565b604051601f8201601f19908116603f0116810190838211818310171561134557611345611297565b816040528281528a602084870101111561135d575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215611391575f80fd5b61139a83611156565b915061128e60208401611156565b5f602082840312156113b8575f80fd5b610bae82611257565b600181811c908216806113d557607f821691505b6020821081036113f357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561081057805f5260205f20601f840160051c8101602085101561141e5750805b601f840160051c820191505b81811015610fb0575f815560010161142a565b67ffffffffffffffff83111561145557611455611297565b6114698361146383546113c1565b836113f9565b5f601f84116001811461149a575f85156114835750838201355b5f19600387901b1c1916600186901b178355610fb0565b5f83815260208120601f198716915b828110156114c957868501358255602094850194600190920191016114a9565b50868210156114e5575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104b8576104b86114f7565b80820281158282048414176104b8576104b86114f7565b5f83516115468184602088016110e0565b83519083019061155a8183602088016110e0565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061159590830184611102565b9695505050505050565b5f602082840312156115af575f80fd5b8151610bae816110b056fe68747470733a2f2f697066732e696f2f697066732f516d50713538465456615a756b694236713853587a31634d694d4545506142737775796b544e6b66685775444e7a2fa2646970667358221220f5e95c567ef4d7336ea45d6b5b437789397541e687a132ef2e524447343d56e664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDDAA26AD GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDDAA26AD EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xF30E6E77 EQ PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7E4831D3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x833B9499 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x60F1F878 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x242 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x21E PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x21E PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x834 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x19E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x113F JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x49D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x4B8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x13C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x544 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x544 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x527 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x558 DUP3 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x59A DUP3 PUSH2 0x82A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5D3 JUMPI PUSH2 0x5B6 DUP2 CALLER PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x638 DUP3 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6B7 JUMPI PUSH2 0x69A DUP7 CALLER PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x775 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x773 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x773 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C6 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x810 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x81D PUSH2 0xD41 JUMP JUMPDEST PUSH1 0xA PUSH2 0x810 DUP3 DUP5 DUP4 PUSH2 0x143D JUMP JUMPDEST PUSH0 PUSH2 0x4B8 DUP3 PUSH2 0xCDF JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x889 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x892 PUSH0 PUSH2 0xD9A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x135A5B9D081A5CC81C185D5CD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14D85B19481B9BDD081CDD185C9D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH2 0x95B PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST GT ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x13585E0814DD5C1C1B1E48121A5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SWAP2 PUSH2 0x9CE SWAP2 DUP5 SWAP2 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST GT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204D696E74207065722075736572205265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA2E PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x151E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA7C CALLER DUP3 PUSH2 0xDE9 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAF5 DUP5 DUP5 DUP5 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xB2E JUMPI PUSH2 0xB11 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB3F DUP3 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB65 PUSH2 0xEE9 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBAE JUMP JUMPDEST DUP1 PUSH2 0xB8D DUP5 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9E SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBEA PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0xC60 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x21B7B73A3930B1BA103830BAB9B2B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x4B8 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xD28 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0xD26 JUMPI JUMPDEST DUP1 PUSH0 SUB PUSH2 0xBAE JUMPI POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD08 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8E3 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE36 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE70 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE6D SWAP2 DUP2 ADD SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xECC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15BB PUSH1 0x44 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xF22 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF56 DUP4 DUP4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x810 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xF7F PUSH0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xF6D JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0xFB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 DUP3 SWAP1 SUB PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1087 JUMPI DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1051 JUMP JUMPDEST POP DUP2 PUSH0 SUB PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBAE DUP2 PUSH2 0x10B0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10FA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10E2 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1119 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x116C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x118B DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B4 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP3 POP PUSH2 0x11C2 PUSH1 0x20 DUP6 ADD PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x121B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x1156 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1277 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1280 DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH2 0x128E PUSH1 0x20 DUP5 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 DUP6 PUSH2 0x1156 JUMP JUMPDEST SWAP4 POP PUSH2 0x12D5 PUSH1 0x20 DUP7 ADD PUSH2 0x1156 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x130B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x131D JUMPI PUSH2 0x131D PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1345 PUSH2 0x1297 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x135D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x139A DUP4 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP PUSH2 0x128E PUSH1 0x20 DUP5 ADD PUSH2 0x1156 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x810 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x141E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x142A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1455 JUMPI PUSH2 0x1455 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x1469 DUP4 PUSH2 0x1463 DUP4 SLOAD PUSH2 0x13C1 JUMP JUMPDEST DUP4 PUSH2 0x13F9 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x149A JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1483 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xFB0 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14C9 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x14A9 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x14E5 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B8 JUMPI PUSH2 0x4B8 PUSH2 0x14F7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4B8 JUMPI PUSH2 0x4B8 PUSH2 0x14F7 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1546 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x155A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1595 SWAP1 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBAE DUP2 PUSH2 0x10B0 JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D507135 CODESIZE CHAINID SLOAD JUMP PUSH2 0x5A75 PUSH12 0x694236713853587A31634D69 0x4D GASLIMIT GASLIMIT POP PUSH2 0x4273 PUSH24 0x75796B544E6B66685775444E7A2FA2646970667358221220 CREATE2 0xE9 0x5C JUMP PUSH31 0xF4D7336EA45D6B5B437789397541E687A132EF2E524447343D56E664736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "113:1716:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9421:639:1;;;;;;;;;;-1:-1:-1;9421:639:1;;;;;:::i;:::-;;:::i;:::-;;;565:14:5;;558:22;540:41;;528:2;513:18;9421:639:1;;;;;;;;10323:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16814:218::-;;;;;;;;;;-1:-1:-1;16814:218:1;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:5;;;1679:51;;1667:2;1652:18;16814:218:1;1533:203:5;16247:408:1;;;;;;:::i;:::-;;:::i;:::-;;6074:323;;;;;;;;;;-1:-1:-1;6348:12:1;;6332:13;;:28;6074:323;;;2324:25:5;;;2312:2;2297:18;6074:323:1;2178:177:5;20453:2825:1;;;;;;:::i;:::-;;:::i;161:40:0:-;;;;;;;;;;;;198:3;161:40;;1051:340;;;;;;;;;;;;;:::i;23374:193:1:-;;;;;;:::i;:::-;;:::i;1399:106:0:-;;;;;;;;;;-1:-1:-1;1399:106:0;;;;;:::i;:::-;;:::i;208:47::-;;;;;;;;;;;;254:1;208:47;;11716:152:1;;;;;;;;;;-1:-1:-1;11716:152:1;;;;;:::i;:::-;;:::i;7258:233::-;;;;;;;;;;-1:-1:-1;7258:233:1;;;;;:::i;:::-;;:::i;1890:103:2:-;;;;;;;;;;;;;:::i;360:22:0:-;;;;;;;;;;-1:-1:-1;360:22:0;;;;;;;;262:49;;;;;;;;;;;;304:7;262:49;;1242:87:2;;;;;;;;;;-1:-1:-1;1288:7:2;1315:6;-1:-1:-1;;;;;1315:6:2;1242:87;;10499:104:1;;;;;;;;;;;;;:::i;560:483:0:-;;;;;;:::i;:::-;;:::i;17372:234:1:-;;;;;;;;;;-1:-1:-1;17372:234:1;;;;;:::i;:::-;;:::i;24165:407::-;;;;;;:::i;:::-;;:::i;10709:318::-;;;;;;;;;;-1:-1:-1;10709:318:1;;;;;:::i;:::-;;:::i;318:35:0:-;;;;;;;;;;;;;;;17763:164:1;;;;;;;;;;-1:-1:-1;17763:164:1;;;;;:::i;:::-;;:::i;2148:201:2:-;;;;;;;;;;-1:-1:-1;2148:201:2;;;;;:::i;:::-;;:::i;1684:142:0:-;;;;;;;;;;-1:-1:-1;1684:142:0;;;;;:::i;:::-;;:::i;9421:639:1:-;9506:4;-1:-1:-1;;;;;;;;;9830:25:1;;;;:102;;-1:-1:-1;;;;;;;;;;9907:25:1;;;9830:102;:179;;;-1:-1:-1;;;;;;;;;;9984:25:1;;;9830:179;9810:199;9421:639;-1:-1:-1;;9421:639:1:o;10323:100::-;10377:13;10410:5;10403:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10323:100;:::o;16814:218::-;16890:7;16915:16;16923:7;16915;:16::i;:::-;16910:64;;16940:34;;-1:-1:-1;;;16940:34:1;;;;;;;;;;;16910:64;-1:-1:-1;16994:24:1;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16994:30:1;;16814:218::o;16247:408::-;16336:13;16352:16;16360:7;16352;:16::i;:::-;16336:32;-1:-1:-1;40580:10:1;-1:-1:-1;;;;;16385:28:1;;;16381:175;;16433:44;16450:5;40580:10;17763:164;:::i;16433:44::-;16428:128;;16505:35;;-1:-1:-1;;;16505:35:1;;;;;;;;;;;16428:128;16568:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16568:35:1;-1:-1:-1;;;;;16568:35:1;;;;;;;;;16619:28;;16568:24;;16619:28;;;;;;;16325:330;16247:408;;:::o;20453:2825::-;20595:27;20625;20644:7;20625:18;:27::i;:::-;20595:57;;20710:4;-1:-1:-1;;;;;20669:45:1;20685:19;-1:-1:-1;;;;;20669:45:1;;20665:86;;20723:28;;-1:-1:-1;;;20723:28:1;;;;;;;;;;;20665:86;20765:27;19561:24;;;:15;:24;;;;;19789:26;;40580:10;19186:30;;;-1:-1:-1;;;;;18879:28:1;;19164:20;;;19161:56;20951:180;;21044:43;21061:4;40580:10;17763:164;:::i;21044:43::-;21039:92;;21096:35;;-1:-1:-1;;;21096:35:1;;;;;;;;;;;21039:92;-1:-1:-1;;;;;21148:16:1;;21144:52;;21173:23;;-1:-1:-1;;;21173:23:1;;;;;;;;;;;21144:52;21345:15;21342:160;;;21485:1;21464:19;21457:30;21342:160;-1:-1:-1;;;;;21882:24:1;;;;;;;:18;:24;;;;;;21880:26;;-1:-1:-1;;21880:26:1;;;21951:22;;;;;;;;;21949:24;;-1:-1:-1;21949:24:1;;;15105:11;15080:23;15076:41;15063:63;-1:-1:-1;;;15063:63:1;22244:26;;;;:17;:26;;;;;:175;;;;-1:-1:-1;;;22539:47:1;;:52;;22535:627;;22644:1;22634:11;;22612:19;22767:30;;;:17;:30;;;;;;:35;;22763:384;;22905:13;;22890:11;:28;22886:242;;23052:30;;;;:17;:30;;;;;:52;;;22886:242;22593:569;22535:627;23209:7;23205:2;-1:-1:-1;;;;;23190:27:1;23199:4;-1:-1:-1;;;;;23190:27:1;;;;;;;;;;;20584:2694;;;20453:2825;;;:::o;1051:340:0:-;1128:13:2;:11;:13::i;:::-;1213:37:0::1;::::0;1119:21:::1;::::0;1221:10:::1;::::0;1213:37;::::1;;;::::0;1119:21;;1101:15:::1;1213:37:::0;1101:15;1213:37;1119:21;1221:10;1213:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1090:301;1051:340::o:0;23374:193:1:-;23520:39;23537:4;23543:2;23547:7;23520:39;;;;;;;;;;;;:16;:39::i;:::-;23374:193;;;:::o;1399:106:0:-;1128:13:2;:11;:13::i;:::-;1474::0::1;:23;1490:7:::0;;1474:13;:23:::1;:::i;11716:152:1:-:0;11788:7;11831:27;11850:7;11831:18;:27::i;7258:233::-;7330:7;-1:-1:-1;;;;;7354:19:1;;7350:60;;7382:28;;-1:-1:-1;;;7382:28:1;;;;;;;;;;;7350:60;-1:-1:-1;;;;;;7428:25:1;;;;;:18;:25;;;;;;1417:13;7428:55;;7258:233::o;1890:103:2:-;1128:13;:11;:13::i;:::-;1955:30:::1;1982:1;1955:18;:30::i;:::-;1890:103::o:0;10499:104:1:-;10555:13;10588:7;10581:14;;;;;:::i;560:483:0:-;629:10;;;;628:11;620:38;;;;-1:-1:-1;;;620:38:0;;8240:2:5;620:38:0;;;8222:21:5;8279:2;8259:18;;;8252:30;-1:-1:-1;;;8298:18:5;;;8291:44;8352:18;;620:38:0;;;;;;;;;696:10;677:15;:29;;669:58;;;;-1:-1:-1;;;669:58:0;;8583:2:5;669:58:0;;;8565:21:5;8622:2;8602:18;;;8595:30;-1:-1:-1;;;8641:18:5;;;8634:46;8697:18;;669:58:0;8381:340:5;669:58:0;198:3;763:8;746:14;6741:13:1;;;6495:296;746:14:0;:25;;;;:::i;:::-;:39;;738:66;;;;-1:-1:-1;;;738:66:0;;9190:2:5;738:66:0;;;9172:21:5;9229:2;9209:18;;;9202:30;-1:-1:-1;;;9248:18:5;;;9241:44;9302:18;;738:66:0;8988:338:5;738:66:0;837:10;7634:7:1;7662:25;;;:18;:25;;1555:2;7662:25;;;;;254:1:0;;823:36;;851:8;;7662:50:1;1417:13;7661:82;823:36:0;:::i;:::-;:59;;815:97;;;;-1:-1:-1;;;815:97:0;;9533:2:5;815:97:0;;;9515:21:5;9572:2;9552:18;;;9545:30;9611:27;9591:18;;;9584:55;9656:18;;815:97:0;9331:349:5;815:97:0;944:26;304:7;944:8;:26;:::i;:::-;931:9;:39;;923:70;;;;-1:-1:-1;;;923:70:0;;10060:2:5;923:70:0;;;10042:21:5;10099:2;10079:18;;;10072:30;-1:-1:-1;;;10118:18:5;;;10111:48;10176:18;;923:70:0;9858:342:5;923:70:0;1004:31;1014:10;1026:8;1004:9;:31::i;:::-;560:483;:::o;17372:234:1:-;40580:10;17467:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17467:49:1;;;;;;;;;;;;:60;;-1:-1:-1;;17467:60:1;;;;;;;;;;17543:55;;540:41:5;;;17467:49:1;;40580:10;17543:55;;513:18:5;17543:55:1;;;;;;;17372:234;;:::o;24165:407::-;24340:31;24353:4;24359:2;24363:7;24340:12;:31::i;:::-;-1:-1:-1;;;;;24386:14:1;;;:19;24382:183;;24425:56;24456:4;24462:2;24466:7;24475:5;24425:30;:56::i;:::-;24420:145;;24509:40;;-1:-1:-1;;;24509:40:1;;;;;;;;;;;24420:145;24165:407;;;;:::o;10709:318::-;10782:13;10813:16;10821:7;10813;:16::i;:::-;10808:59;;10838:29;;-1:-1:-1;;;10838:29:1;;;;;;;;;;;10808:59;10880:21;10904:10;:8;:10::i;:::-;10880:34;;10938:7;10932:21;10957:1;10932:26;:87;;;;;;;;;;;;;;;;;10985:7;10994:18;11004:7;10994:9;:18::i;:::-;10968:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10932:87;10925:94;10709:318;-1:-1:-1;;;10709:318:1:o;17763:164::-;-1:-1:-1;;;;;17884:25:1;;;17860:4;17884:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17763:164::o;2148:201:2:-;1128:13;:11;:13::i;:::-;-1:-1:-1;;;;;2237:22:2;::::1;2229:73;;;::::0;-1:-1:-1;;;2229:73:2;;10908:2:5;2229:73:2::1;::::0;::::1;10890:21:5::0;10947:2;10927:18;;;10920:30;10986:34;10966:18;;;10959:62;-1:-1:-1;;;11037:18:5;;;11030:36;11083:19;;2229:73:2::1;10706:402:5::0;2229:73:2::1;2313:28;2332:8;2313:18;:28::i;1684:142:0:-:0;1128:13:2;:11;:13::i;:::-;1756:10:0::1;::::0;::::1;;1755:11;1747:40;;;::::0;-1:-1:-1;;;1747:40:0;;11315:2:5;1747:40:0::1;::::0;::::1;11297:21:5::0;11354:2;11334:18;;;11327:30;-1:-1:-1;;;11373:18:5;;;11366:46;11429:18;;1747:40:0::1;11113:340:5::0;1747:40:0::1;1798:10;:20:::0;;-1:-1:-1;;1798:20:0::1;::::0;::::1;;::::0;;;::::1;::::0;;1684:142::o;18185:282:1:-;18250:4;18340:13;;18330:7;:23;18287:153;;;;-1:-1:-1;;18391:26:1;;;;:17;:26;;;;;;-1:-1:-1;;;18391:44:1;:49;;18185:282::o;12871:1275::-;12938:7;12973;13075:13;;13068:4;:20;13064:1015;;;13113:14;13130:23;;;:17;:23;;;;;;;-1:-1:-1;;;13219:24:1;;:29;;13215:845;;13884:113;13891:6;13901:1;13891:11;13884:113;;-1:-1:-1;;;13962:6:1;13944:25;;;;:17;:25;;;;;;13884:113;;13215:845;13090:989;13064:1015;14107:31;;-1:-1:-1;;;14107:31:1;;;;;;;;;;;1407:132:2;1288:7;1315:6;-1:-1:-1;;;;;1315:6:2;40580:10:1;1471:23:2;1463:68;;;;-1:-1:-1;;;1463:68:2;;11660:2:5;1463:68:2;;;11642:21:5;;;11679:18;;;11672:30;11738:34;11718:18;;;11711:62;11790:18;;1463:68:2;11458:356:5;2509:191:2;2583:16;2602:6;;-1:-1:-1;;;;;2619:17:2;;;-1:-1:-1;;;;;;2619:17:2;;;;;;2652:40;;2602:6;;;;;;;2652:40;;2583:16;2652:40;2572:128;2509:191;:::o;34325:112:1:-;34402:27;34412:2;34416:8;34402:27;;;;;;;;;;;;:9;:27::i;26656:716::-;26840:88;;-1:-1:-1;;;26840:88:1;;26819:4;;-1:-1:-1;;;;;26840:45:1;;;;;:88;;40580:10;;26907:4;;26913:7;;26922:5;;26840:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26840:88:1;;;;;;;;-1:-1:-1;;26840:88:1;;;;;;;;;;;;:::i;:::-;;;26836:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27123:6;:13;27140:1;27123:18;27119:235;;27169:40;;-1:-1:-1;;;27169:40:1;;;;;;;;;;;27119:235;27312:6;27306:13;27297:6;27293:2;27289:15;27282:38;26836:529;-1:-1:-1;;;;;;26999:64:1;-1:-1:-1;;;26999:64:1;;-1:-1:-1;26656:716:1;;;;;;:::o;1513:163:0:-;1565:13;1591:77;;;;;;;;;;;;;;;;;;;1513:163;:::o;40700:1745:1:-;40765:17;41199:4;41192;41186:11;41182:22;41291:1;41285:4;41278:15;41366:4;41363:1;41359:12;41352:19;;;41448:1;41443:3;41436:14;41552:3;41791:5;41773:428;41839:1;41834:3;41830:11;41823:18;;42010:2;42004:4;42000:13;41996:2;41992:22;41987:3;41979:36;42104:2;42094:13;;42161:25;41773:428;42161:25;-1:-1:-1;42231:13:1;;;-1:-1:-1;;42346:14:1;;;42408:19;;;42346:14;40700:1745;-1:-1:-1;40700:1745:1:o;33552:689::-;33683:19;33689:2;33693:8;33683:5;:19::i;:::-;-1:-1:-1;;;;;33744:14:1;;;:19;33740:483;;33798:13;;33846:14;;;33879:233;33910:62;33949:1;33953:2;33957:7;;;;;;33966:5;33910:30;:62::i;:::-;33905:167;;34008:40;;-1:-1:-1;;;34008:40:1;;;;;;;;;;;33905:167;34107:3;34099:5;:11;33879:233;;34194:3;34177:13;;:20;34173:34;;34199:8;;;34173:34;33765:458;;33552:689;;;:::o;27834:2966::-;27930:13;;27907:20;27958:13;;;27954:44;;27980:18;;-1:-1:-1;;;27980:18:1;;;;;;;;;;;27954:44;-1:-1:-1;;;;;28486:22:1;;;;;;:18;:22;;;;1555:2;28486:22;;;:71;;28524:32;28512:45;;28486:71;;;28800:31;;;:17;:31;;;;;-1:-1:-1;15536:15:1;;15510:24;15506:46;15105:11;15080:23;15076:41;15073:52;15063:63;;28800:173;;29035:23;;;;28800:31;;28486:22;;29800:25;28486:22;;29653:335;30314:1;30300:12;30296:20;30254:346;30355:3;30346:7;30343:16;30254:346;;30573:7;30563:8;30560:1;30533:25;30530:1;30527;30522:59;30408:1;30395:15;30254:346;;;30258:77;30633:8;30645:1;30633:13;30629:45;;30655:19;;-1:-1:-1;;;30655:19:1;;;;;;;;;;;30629:45;30691:13;:19;-1:-1:-1;23374:193:1;;;:::o;14:131:5:-;-1:-1:-1;;;;;;88:32:5;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:5;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:5;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:5:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:5;;1348:180;-1:-1:-1;1348:180:5:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:5;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:5:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:592::-;2764:6;2772;2825:2;2813:9;2804:7;2800:23;2796:32;2793:52;;;2841:1;2838;2831:12;2793:52;2881:9;2868:23;2910:18;2951:2;2943:6;2940:14;2937:34;;;2967:1;2964;2957:12;2937:34;3005:6;2994:9;2990:22;2980:32;;3050:7;3043:4;3039:2;3035:13;3031:27;3021:55;;3072:1;3069;3062:12;3021:55;3112:2;3099:16;3138:2;3130:6;3127:14;3124:34;;;3154:1;3151;3144:12;3124:34;3199:7;3194:2;3185:6;3181:2;3177:15;3173:24;3170:37;3167:57;;;3220:1;3217;3210:12;3167:57;3251:2;3243:11;;;;;3273:6;;-1:-1:-1;2693:592:5;;-1:-1:-1;;;;2693:592:5:o;3290:186::-;3349:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:52;;;3418:1;3415;3408:12;3370:52;3441:29;3460:9;3441:29;:::i;3481:160::-;3546:20;;3602:13;;3595:21;3585:32;;3575:60;;3631:1;3628;3621:12;3646:254;3711:6;3719;3772:2;3760:9;3751:7;3747:23;3743:32;3740:52;;;3788:1;3785;3778:12;3740:52;3811:29;3830:9;3811:29;:::i;:::-;3801:39;;3859:35;3890:2;3879:9;3875:18;3859:35;:::i;:::-;3849:45;;3646:254;;;;;:::o;3905:127::-;3966:10;3961:3;3957:20;3954:1;3947:31;3997:4;3994:1;3987:15;4021:4;4018:1;4011:15;4037:1138;4132:6;4140;4148;4156;4209:3;4197:9;4188:7;4184:23;4180:33;4177:53;;;4226:1;4223;4216:12;4177:53;4249:29;4268:9;4249:29;:::i;:::-;4239:39;;4297:38;4331:2;4320:9;4316:18;4297:38;:::i;:::-;4287:48;;4382:2;4371:9;4367:18;4354:32;4344:42;;4437:2;4426:9;4422:18;4409:32;4460:18;4501:2;4493:6;4490:14;4487:34;;;4517:1;4514;4507:12;4487:34;4555:6;4544:9;4540:22;4530:32;;4600:7;4593:4;4589:2;4585:13;4581:27;4571:55;;4622:1;4619;4612:12;4571:55;4658:2;4645:16;4680:2;4676;4673:10;4670:36;;;4686:18;;:::i;:::-;4761:2;4755:9;4729:2;4815:13;;-1:-1:-1;;4811:22:5;;;4835:2;4807:31;4803:40;4791:53;;;4859:18;;;4879:22;;;4856:46;4853:72;;;4905:18;;:::i;:::-;4945:10;4941:2;4934:22;4980:2;4972:6;4965:18;5020:7;5015:2;5010;5006;5002:11;4998:20;4995:33;4992:53;;;5041:1;5038;5031:12;4992:53;5097:2;5092;5088;5084:11;5079:2;5071:6;5067:15;5054:46;5142:1;5137:2;5132;5124:6;5120:15;5116:24;5109:35;5163:6;5153:16;;;;;;;4037:1138;;;;;;;:::o;5180:260::-;5248:6;5256;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;5348:29;5367:9;5348:29;:::i;:::-;5338:39;;5396:38;5430:2;5419:9;5415:18;5396:38;:::i;5445:180::-;5501:6;5554:2;5542:9;5533:7;5529:23;5525:32;5522:52;;;5570:1;5567;5560:12;5522:52;5593:26;5609:9;5593:26;:::i;5630:380::-;5709:1;5705:12;;;;5752;;;5773:61;;5827:4;5819:6;5815:17;5805:27;;5773:61;5880:2;5872:6;5869:14;5849:18;5846:38;5843:161;;5926:10;5921:3;5917:20;5914:1;5907:31;5961:4;5958:1;5951:15;5989:4;5986:1;5979:15;5843:161;;5630:380;;;:::o;6141:518::-;6243:2;6238:3;6235:11;6232:421;;;6279:5;6276:1;6269:16;6323:4;6320:1;6310:18;6393:2;6381:10;6377:19;6374:1;6370:27;6364:4;6360:38;6429:4;6417:10;6414:20;6411:47;;;-1:-1:-1;6452:4:5;6411:47;6507:2;6502:3;6498:12;6495:1;6491:20;6485:4;6481:31;6471:41;;6562:81;6580:2;6573:5;6570:13;6562:81;;;6639:1;6625:16;;6606:1;6595:13;6562:81;;6835:1198;6959:18;6954:3;6951:27;6948:53;;;6981:18;;:::i;:::-;7010:94;7100:3;7060:38;7092:4;7086:11;7060:38;:::i;:::-;7054:4;7010:94;:::i;:::-;7130:1;7155:2;7150:3;7147:11;7172:1;7167:608;;;;7819:1;7836:3;7833:93;;;-1:-1:-1;7892:19:5;;;7879:33;7833:93;-1:-1:-1;;6792:1:5;6788:11;;;6784:24;6780:29;6770:40;6816:1;6812:11;;;6767:57;7939:78;;7140:887;;7167:608;6088:1;6081:14;;;6125:4;6112:18;;-1:-1:-1;;7203:17:5;;;7318:229;7332:7;7329:1;7326:14;7318:229;;;7421:19;;;7408:33;7393:49;;7528:4;7513:20;;;;7481:1;7469:14;;;;7348:12;7318:229;;;7322:3;7575;7566:7;7563:16;7560:159;;;7699:1;7695:6;7689:3;7683;7680:1;7676:11;7672:21;7668:34;7664:39;7651:9;7646:3;7642:19;7629:33;7625:79;7617:6;7610:95;7560:159;;;7762:1;7756:3;7753:1;7749:11;7745:19;7739:4;7732:33;7140:887;;6835:1198;;;:::o;8726:127::-;8787:10;8782:3;8778:20;8775:1;8768:31;8818:4;8815:1;8808:15;8842:4;8839:1;8832:15;8858:125;8923:9;;;8944:10;;;8941:36;;;8957:18;;:::i;9685:168::-;9758:9;;;9789;;9806:15;;;9800:22;;9786:37;9776:71;;9827:18;;:::i;10205:496::-;10384:3;10422:6;10416:13;10438:66;10497:6;10492:3;10485:4;10477:6;10473:17;10438:66;:::i;:::-;10567:13;;10526:16;;;;10589:70;10567:13;10526:16;10636:4;10624:17;;10589:70;:::i;:::-;10675:20;;10205:496;-1:-1:-1;;;;10205:496:5:o;11819:489::-;-1:-1:-1;;;;;12088:15:5;;;12070:34;;12140:15;;12135:2;12120:18;;12113:43;12187:2;12172:18;;12165:34;;;12235:3;12230:2;12215:18;;12208:31;;;12013:4;;12256:46;;12282:19;;12274:6;12256:46;:::i;:::-;12248:54;11819:489;-1:-1:-1;;;;;;11819:489:5:o;12313:249::-;12382:6;12435:2;12423:9;12414:7;12410:23;12406:32;12403:52;;;12451:1;12448;12441:12;12403:52;12483:9;12477:16;12502:30;12526:5;12502:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1136800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "240",
								"MAX_SUPPLY_PER_USER()": "261",
								"PRICE_PER_TOKEN()": "261",
								"START_TIME()": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2702",
								"getApproved(uint256)": "6919",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"mintPaused()": "2343",
								"name()": "infinite",
								"owner()": "2418",
								"ownerOf(uint256)": "infinite",
								"pauseMint(bool)": "28926",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4498",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28417",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 552,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "D"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "22A9219B9918A0902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DCC8C5055"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 963,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 982,
									"end": 994,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 982,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 982,
									"end": 992,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 982,
									"end": 992,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 982,
									"end": 994,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 982,
									"end": 994,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 982,
									"end": 994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 982,
									"end": 994,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 982,
									"end": 994,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 963,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 963,
									"end": 995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 963,
									"end": 995,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 963,
									"end": 995,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5163,
									"end": 5168,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5171,
									"end": 5176,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 5163,
									"end": 5176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5187,
									"end": 5194,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 5197,
									"end": 5204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5194,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 5187,
									"end": 5204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5646,
									"end": 5653,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5215,
									"end": 5228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5215,
									"end": 5246,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 499,
									"end": 514,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 486,
									"end": 514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 486,
									"end": 514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 525,
									"end": 535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 525,
									"end": 544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 525,
									"end": 544,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 525,
									"end": 544,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 525,
									"end": 544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 525,
									"end": 544,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2509,
									"end": 2700,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2509,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2583,
									"end": 2599,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2652,
									"end": 2692,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2652,
									"end": 2692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2652,
									"end": 2692,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2652,
									"end": 2692,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2583,
									"end": 2599,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2652,
									"end": 2692,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2700,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2509,
									"end": 2700,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2509,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1829,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5e95c567ef4d7336ea45d6b5b437789397541e687a132ef2e524447343d56e664736f6c63430008160033",
									".code": [
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "DDAA26AD"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "DDAA26AD"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "F30E6E77"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "7E4831D3"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "833B9499"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "55F804B3"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "55F804B3"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "60F1F878"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 1829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6360,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6348,
											"end": 6360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 198,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 161,
											"end": 201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 201,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1051,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1399,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1399,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 254,
											"end": 255,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 255,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 11716,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11716,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1890,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 360,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 360,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 360,
											"end": 382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 262,
											"end": 311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 262,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 304,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 262,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 311,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1242,
											"end": 1329,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10499,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 560,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 560,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2148,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2148,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1684,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1684,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 10009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10390,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10403,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10403,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16890,
											"end": 16897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 16923,
											"end": 16930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 16915,
											"end": 16931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17009,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 16360,
											"end": 16367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 16352,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16381,
											"end": 16556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16450,
											"end": 16455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16583,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 20644,
											"end": 20651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20625,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 20625,
											"end": 20652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20710,
											"end": 20714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20685,
											"end": 20704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18879,
											"end": 18907,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18879,
											"end": 18907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19161,
											"end": 19217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 21061,
											"end": 21065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21148,
											"end": 21164,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21345,
											"end": 21360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21485,
											"end": 21486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21464,
											"end": 21483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21457,
											"end": 21487,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21900,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15105,
											"end": 15116,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15076,
											"end": 15117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22261,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22539,
											"end": 22586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22591,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22644,
											"end": 22645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22634,
											"end": 22645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22634,
											"end": 22645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22784,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22763,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 22763,
											"end": 23147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22918,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22905,
											"end": 22918,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22890,
											"end": 22901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22890,
											"end": 22918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23069,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22593,
											"end": 23162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23209,
											"end": 23216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23205,
											"end": 23207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23199,
											"end": 23203,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1051,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1140,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1231,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1391,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 23537,
											"end": 23541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23543,
											"end": 23545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23547,
											"end": 23554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 23520,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1399,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1474,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1474,
											"end": 1497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11831,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 11850,
											"end": 11857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11831,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1890,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1982,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1955,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1955,
											"end": 1985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10581,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 629,
											"end": 639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 629,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8240,
											"end": 8242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 8259,
											"end": 8277,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8259,
											"end": 8277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135A5B9D081A5CC81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 620,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 620,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 677,
											"end": 706,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 677,
											"end": 706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 669,
											"end": 727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8583,
											"end": 8585,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8595,
											"end": 8625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D85B19481B9BDD081CDD185C9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8634,
											"end": 8680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8381,
											"end": 8721,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 763,
											"end": 771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 746,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6791,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 746,
											"end": 760,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 746,
											"end": 760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 746,
											"end": 771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 746,
											"end": 771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 746,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 746,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 785,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 746,
											"end": 785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 738,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 738,
											"end": 804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 738,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 738,
											"end": 804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 738,
											"end": 804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 738,
											"end": 804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9172,
											"end": 9193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 9209,
											"end": 9227,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9209,
											"end": 9227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E0814DD5C1C1B1E48121A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9248,
											"end": 9266,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9248,
											"end": 9266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9248,
											"end": 9266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9241,
											"end": 9285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 738,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8988,
											"end": 9326,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 738,
											"end": 804,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 738,
											"end": 804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 847,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7634,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7680,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7687,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 823,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 823,
											"end": 859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 851,
											"end": 859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 851,
											"end": 859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7712,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7661,
											"end": 7743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 823,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 823,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 823,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 823,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 823,
											"end": 882,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 823,
											"end": 882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 815,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 815,
											"end": 912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 815,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 815,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 815,
											"end": 912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9572,
											"end": 9574,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "PUSH",
											"source": 5,
											"value": "4D6178204D696E74207065722075736572205265616368656400000000000000"
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9584,
											"end": 9639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 815,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9331,
											"end": 9680,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 815,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 815,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 304,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 944,
											"end": 952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 944,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 944,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 944,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 940,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 931,
											"end": 970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 931,
											"end": 970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 923,
											"end": 993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 923,
											"end": 993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10060,
											"end": 10062,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 923,
											"end": 993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10101,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10072,
											"end": 10102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742046756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10118,
											"end": 10136,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10118,
											"end": 10136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10176,
											"end": 10194,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10176,
											"end": 10194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9858,
											"end": 10200,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 993,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1004,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1004,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17485,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 24353,
											"end": 24357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24359,
											"end": 24361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24363,
											"end": 24370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 24340,
											"end": 24371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24405,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 24382,
											"end": 24565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 24456,
											"end": 24460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24462,
											"end": 24464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24466,
											"end": 24473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24475,
											"end": 24480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 24425,
											"end": 24481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10821,
											"end": 10828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10813,
											"end": 10829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 10904,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10904,
											"end": 10914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10953,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 10992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11004,
											"end": 11011,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10994,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10968,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 11019,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17860,
											"end": 17864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2148,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2229,
											"end": 2302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2302,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10908,
											"end": 10910,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10947,
											"end": 10949,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10920,
											"end": 10950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11020,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10959,
											"end": 11021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11083,
											"end": 11102,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 11083,
											"end": 11102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10706,
											"end": 11108,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2229,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2332,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2313,
											"end": 2341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1684,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1756,
											"end": 1766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1766,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11315,
											"end": 11317,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11354,
											"end": 11356,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 11334,
											"end": 11352,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11334,
											"end": 11352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11334,
											"end": 11352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11327,
											"end": 11357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B7B73A3930B1BA103830BAB9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11366,
											"end": 11412,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 11113,
											"end": 11453,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1747,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18467,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 18185,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18340,
											"end": 18353,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18340,
											"end": 18353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18353,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18408,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12871,
											"end": 14146,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 12871,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12973,
											"end": 12980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13088,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13113,
											"end": 13127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13219,
											"end": 13243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13962,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13961,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13090,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1539,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1407,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11660,
											"end": 11662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11642,
											"end": 11663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11642,
											"end": 11663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11642,
											"end": 11663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11679,
											"end": 11697,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11679,
											"end": 11697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11679,
											"end": 11697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11672,
											"end": 11702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11738,
											"end": 11772,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11711,
											"end": 11773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11458,
											"end": 11814,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2509,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2636,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 34325,
											"end": 34437,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 34325,
											"end": 34437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 34412,
											"end": 34414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34416,
											"end": 34424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34402,
											"end": 34411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 34402,
											"end": 34429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26911,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26913,
											"end": 26920,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26913,
											"end": 26920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 26840,
											"end": 26928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 26840,
											"end": 26928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27140,
											"end": 27141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27123,
											"end": 27141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27312,
											"end": 27318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27306,
											"end": 27319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27297,
											"end": 27303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27293,
											"end": 27295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27289,
											"end": 27304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27320,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1513,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH data",
											"source": 0,
											"value": "A7EB0451A604C4DC108FEC9B71A0E76D6307EA82C680C4246676E81F6657EFF4"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40765,
											"end": 40782,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 41199,
											"end": 41203,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 41192,
											"end": 41196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41186,
											"end": 41197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 41182,
											"end": 41204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41291,
											"end": 41292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41285,
											"end": 41289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41278,
											"end": 41293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41366,
											"end": 41370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41363,
											"end": 41364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41359,
											"end": 41371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41448,
											"end": 41449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 41443,
											"end": 41446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41436,
											"end": 41450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41552,
											"end": 41555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41791,
											"end": 41796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41839,
											"end": 41840,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 41834,
											"end": 41837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41830,
											"end": 41841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41823,
											"end": 41841,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 41823,
											"end": 41841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 42010,
											"end": 42012,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 42004,
											"end": 42008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42000,
											"end": 42013,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 41996,
											"end": 41998,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 41992,
											"end": 42014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41987,
											"end": 41990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41979,
											"end": 42015,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 42104,
											"end": 42106,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 42094,
											"end": 42107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42094,
											"end": 42107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 42161,
											"end": 42186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 42161,
											"end": 42186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40700,
											"end": 42445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33552,
											"end": 34241,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 33552,
											"end": 34241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33683,
											"end": 33702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 33689,
											"end": 33691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33693,
											"end": 33701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33683,
											"end": 33688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 33683,
											"end": 33702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33683,
											"end": 33702,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 33683,
											"end": 33702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33744,
											"end": 33758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33744,
											"end": 33758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33744,
											"end": 33758,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 33744,
											"end": 33763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33740,
											"end": 34223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 33740,
											"end": 34223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33846,
											"end": 33860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33846,
											"end": 33860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33846,
											"end": 33860,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33879,
											"end": 34112,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 33879,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33910,
											"end": 33972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 33949,
											"end": 33950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33953,
											"end": 33955,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 33957,
											"end": 33964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33966,
											"end": 33971,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33910,
											"end": 33940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 33910,
											"end": 33972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33910,
											"end": 33972,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 33910,
											"end": 33972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33905,
											"end": 34072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 33905,
											"end": 34072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34008,
											"end": 34048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33905,
											"end": 34072,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 33905,
											"end": 34072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34107,
											"end": 34110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34099,
											"end": 34104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34099,
											"end": 34110,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33879,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 33879,
											"end": 34112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34194,
											"end": 34197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34177,
											"end": 34190,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34177,
											"end": 34190,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34177,
											"end": 34197,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 34173,
											"end": 34207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 34173,
											"end": 34207,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34199,
											"end": 34207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34199,
											"end": 34207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34199,
											"end": 34207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34173,
											"end": 34207,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 34173,
											"end": 34207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33765,
											"end": 34223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33765,
											"end": 34223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33552,
											"end": 34241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33552,
											"end": 34241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33552,
											"end": 34241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33552,
											"end": 34241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27834,
											"end": 30800,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 27834,
											"end": 30800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27930,
											"end": 27943,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27930,
											"end": 27943,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27907,
											"end": 27927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27958,
											"end": 27971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27958,
											"end": 27971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27958,
											"end": 27971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27954,
											"end": 27998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 27954,
											"end": 27998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27998,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27954,
											"end": 27998,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 27954,
											"end": 27998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28504,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28557,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28524,
											"end": 28556,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000001"
										},
										{
											"begin": 28512,
											"end": 28557,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28512,
											"end": 28557,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28557,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28817,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15510,
											"end": 15534,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 15506,
											"end": 15552,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15105,
											"end": 15116,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15076,
											"end": 15117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15073,
											"end": 15125,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28973,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 29035,
											"end": 29058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29035,
											"end": 29058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29035,
											"end": 29058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29035,
											"end": 29058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29800,
											"end": 29825,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28486,
											"end": 28508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29653,
											"end": 29988,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 30314,
											"end": 30315,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30300,
											"end": 30312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30296,
											"end": 30316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30355,
											"end": 30358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30346,
											"end": 30353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30343,
											"end": 30359,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30573,
											"end": 30580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30563,
											"end": 30571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30560,
											"end": 30561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30533,
											"end": 30558,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30530,
											"end": 30531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30527,
											"end": 30528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30522,
											"end": 30581,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 30408,
											"end": 30409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30395,
											"end": 30410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 30254,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30258,
											"end": 30335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30633,
											"end": 30641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30645,
											"end": 30646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30633,
											"end": 30646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30629,
											"end": 30674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 30629,
											"end": 30674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30655,
											"end": 30674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30629,
											"end": 30674,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 30629,
											"end": 30674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30691,
											"end": 30704,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30691,
											"end": 30710,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 3285,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2693,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2827,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2813,
											"end": 2822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2828,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 2793,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2891,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2953,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2954,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 3021,
											"end": 3076,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3074,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3076,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 3021,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3115,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3141,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 3167,
											"end": 3224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 3167,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2693,
											"end": 3285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 3285,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2693,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3476,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3290,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 3441,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3641,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 3481,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3566,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 3575,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3770,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 3775,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 3740,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 3830,
											"end": 3839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 3811,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 3859,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3894,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 3859,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4032,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 3905,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3961,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3957,
											"end": 3977,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4195,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4213,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4268,
											"end": 4277,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 4249,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4278,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4249,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4278,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4329,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 4297,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4335,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4409,
											"end": 4441,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4503,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4607,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4608,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 4571,
											"end": 4626,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4622,
											"end": 4623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4626,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 4571,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4661,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4683,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4706,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 4670,
											"end": 4706,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 4686,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4731,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 4837,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4807,
											"end": 4838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4803,
											"end": 4843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 4853,
											"end": 4925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 4905,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4945,
											"end": 4955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 4978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5027,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5028,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5043,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5054,
											"end": 5100,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5169,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5180,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5306,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5295,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5307,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5312,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 5277,
											"end": 5329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5329,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 5277,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5348,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5348,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5348,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5348,
											"end": 5377,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 5348,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5396,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5625,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5445,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5560,
											"end": 5572,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 5593,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 6010,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5630,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 5773,
											"end": 5834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5834,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 5773,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5883,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5846,
											"end": 5884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5843,
											"end": 6004,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5926,
											"end": 5936,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5951,
											"end": 5966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 6004,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5843,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 6004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 6010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 6010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 6010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 6010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6659,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 6141,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6238,
											"end": 6241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6653,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6232,
											"end": 6653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6279,
											"end": 6284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6320,
											"end": 6321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6381,
											"end": 6391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6370,
											"end": 6397,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6427,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6456,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 6411,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6496,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6583,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6641,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6595,
											"end": 6608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 6562,
											"end": 6643,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 8033,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6835,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6978,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 7001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 6948,
											"end": 7001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 6981,
											"end": 6999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "tag",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7010,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7100,
											"end": 7103,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7060,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7060,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7060,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7060,
											"end": 7098,
											"name": "tag",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 7060,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7010,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 7010,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7010,
											"end": 7104,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7010,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7157,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7150,
											"end": 7153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7839,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6788,
											"end": 6799,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6799,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6808,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 6809,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6812,
											"end": 6823,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6823,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6824,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8017,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7140,
											"end": 8027,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "tag",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 7167,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7203,
											"end": 7220,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "tag",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7340,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7441,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7442,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7533,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7533,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7533,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7482,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7469,
											"end": 7483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "tag",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 7318,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7578,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7566,
											"end": 7573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7563,
											"end": 7579,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 7683,
											"end": 7686,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7676,
											"end": 7687,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7702,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7660,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7649,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7642,
											"end": 7661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7662,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7704,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7617,
											"end": 7623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7610,
											"end": 7705,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "tag",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7762,
											"end": 7763,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7749,
											"end": 7760,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7745,
											"end": 7764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7739,
											"end": 7743,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7765,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 8033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 8033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 8033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 8033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8853,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8726,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8787,
											"end": 8797,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8782,
											"end": 8785,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8847,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8858,
											"end": 8983,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8858,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8941,
											"end": 8977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8957,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9685,
											"end": 9853,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9685,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9767,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9767,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9767,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9798,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 9821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 9821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 9821,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9800,
											"end": 9822,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9800,
											"end": 9822,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9786,
											"end": 9823,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 9827,
											"end": 9845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10701,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10205,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10384,
											"end": 10387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10429,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10495,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10483,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 10438,
											"end": 10504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "tag",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10567,
											"end": 10580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10567,
											"end": 10580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 10567,
											"end": 10580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10641,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 10589,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10589,
											"end": 10659,
											"name": "tag",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 10589,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10695,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10701,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10205,
											"end": 10701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11819,
											"end": 12308,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11819,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12088,
											"end": 12103,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12088,
											"end": 12103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12088,
											"end": 12103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12070,
											"end": 12104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12070,
											"end": 12104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12140,
											"end": 12155,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12140,
											"end": 12155,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12135,
											"end": 12137,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12113,
											"end": 12156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12187,
											"end": 12189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12165,
											"end": 12199,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12165,
											"end": 12199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12165,
											"end": 12199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12238,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12230,
											"end": 12232,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12208,
											"end": 12239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12208,
											"end": 12239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12208,
											"end": 12239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12256,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 12256,
											"end": 12302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12256,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 12256,
											"end": 12302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12256,
											"end": 12302,
											"name": "tag",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 12256,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12248,
											"end": 12302,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 11819,
											"end": 12308,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11819,
											"end": 12308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12313,
											"end": 12562,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 12313,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12382,
											"end": 12388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12414,
											"end": 12421,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12410,
											"end": 12433,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12438,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12455,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 12403,
											"end": 12455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12448,
											"end": 12449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12441,
											"end": 12453,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12455,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 12403,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12483,
											"end": 12492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12477,
											"end": 12493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 12526,
											"end": 12531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 12502,
											"end": 12532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									],
									".data": {
										"A7EB0451A604C4DC108FEC9B71A0E76D6307EA82C680C4246676E81F6657EFF4": "68747470733a2f2f697066732e696f2f697066732f516d50713538465456615a756b694236713853587a31634d694d4545506142737775796b544e6b66685775444e7a2f"
									}
								}
							},
							"sourceList": [
								"contracts/contracts/BatchNFTs.sol",
								"contracts/contracts/ERC721A.sol",
								"contracts/contracts/Ownable.sol",
								"contracts/contracts/interfaces/IERC721A.sol",
								"contracts/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"MAX_SUPPLY_PER_USER()": "60f1f878",
							"PRICE_PER_TOKEN()": "833b9499",
							"START_TIME()": "ddaa26ad",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"mintPaused()": "7e4831d3",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pauseMint(bool)": "f30e6e77",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY_PER_USER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PER_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"pauseMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/BatchNFTs.sol\":\"BatchNFTs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/BatchNFTs.sol\":{\"keccak256\":\"0x3b5f82be9a1e19d1f46aa84fc8605404f4db95a2047d6390f74a3c8f9d7f5d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ca1f7c3fcc525fa29434d7f876ab804a27249c0dbb489475fa89286b4c7b81\",\"dweb:/ipfs/QmbVuzZu1RdSHCGstJ8TNpmy7zb68ss4vDkhsz8ptNi1VQ\"]},\"contracts/contracts/ERC721A.sol\":{\"keccak256\":\"0x0f3f87afe72ba7d10710ec25f0c7de3d5ebc9ec28d42593e2515d7e46693a8e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f25df3eafe804bfbcbdb8e1004c977cb071cf2f563b1d56a0829b1a163e878\",\"dweb:/ipfs/QmWNETMmMeqHznZmaRTWhkD4yqZQoTfegZCQuZGP8Q6SpH\"]},\"contracts/contracts/Ownable.sol\":{\"keccak256\":\"0x1df3a9629c0fe0cf72b9a895c9be262b4022f7fb1ed812cc473ec3c667811e8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c5c01c25956c017c6620bd8b4abf05f98977df111337070de3a088e1a26650e\",\"dweb:/ipfs/QmPBQ8Jru422FteWbgQUdJwhKpK6WfUjNuTZo7ZDtuA5wW\"]},\"contracts/contracts/interfaces/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]},\"contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1791,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 252,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 256,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 258,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 262,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 266,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 271,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)184_storage)"
							},
							{
								"astId": 277,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 20,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "mintPaused",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 22,
								"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
								"label": "_baseTokenURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)184_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)184_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)184_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 183,
										"contract": "contracts/contracts/BatchNFTs.sol:BatchNFTs",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/ERC721A.sol\":941:42448  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/ERC721A.sol\":5096:5254  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/contracts/ERC721A.sol\":5163:5168  _name */\n  0x02\n    /* \"contracts/contracts/ERC721A.sol\":5163:5176  _name = name_ */\n  tag_6\n    /* \"contracts/contracts/ERC721A.sol\":5171:5176  name_ */\n  dup4\n    /* \"contracts/contracts/ERC721A.sol\":5163:5168  _name */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5163:5176  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":5187:5194  _symbol */\n  0x03\n    /* \"contracts/contracts/ERC721A.sol\":5187:5204  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/contracts/ERC721A.sol\":5197:5204  symbol_ */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5187:5194  _symbol */\n  dup3\n    /* \"contracts/contracts/ERC721A.sol\":5187:5204  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":5646:5653  uint256 */\n  0x00\n    /* \"contracts/contracts/ERC721A.sol\":5215:5246  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"contracts/contracts/ERC721A.sol\":941:42448  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_27:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_28:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_32:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_33:\n    /* \"#utility.yul\":1313:1374   */\n  tag_34\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_35:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_36\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_15:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_38:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_17:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_43:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_44:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_42:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2971:3068   */\n  tag_51\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_52\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_53)\n    /* \"#utility.yul\":3192:3855   */\ntag_54:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_58:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_61:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_19:\n    /* \"contracts/contracts/ERC721A.sol\":941:42448  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/ERC721A.sol\":941:42448  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":6348:6360  _burnCounter */\n      sload(0x01)\n        /* \"contracts/contracts/ERC721A.sol\":6135:6142  uint256 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":6332:6345  _currentIndex */\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":6332:6360  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":6074:6397  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":11716:11868  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":10499:10603  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":17860:17864  bool */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17884:17902  _operatorApprovals */\n      0x07\n        /* \"contracts/contracts/ERC721A.sol\":17884:17909  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":17884:17919  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/contracts/ERC721A.sol\":9506:9510  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9830:9855  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":9830:9932  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9907:9932  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":9830:9932  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"contracts/contracts/ERC721A.sol\":9830:10009  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":9984:10009  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":9830:10009  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"contracts/contracts/ERC721A.sol\":9810:10009  return... */\n      swap3\n        /* \"contracts/contracts/ERC721A.sol\":9421:10060  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/contracts/ERC721A.sol\":10377:10390  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10410:10415  _name */\n      0x02\n        /* \"contracts/contracts/ERC721A.sol\":10403:10415  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":10323:10423  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"contracts/contracts/ERC721A.sol\":16890:16897  address */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":16915:16931  _exists(tokenId) */\n      tag_100\n        /* \"contracts/contracts/ERC721A.sol\":16923:16930  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":16915:16922  _exists */\n      tag_101\n        /* \"contracts/contracts/ERC721A.sol\":16915:16931  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/contracts/ERC721A.sol\":16910:16974  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16940:16974  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":16910:16974  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":16994:17018  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":16994:17009  _tokenApprovals */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":16994:17018  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":16994:17024  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":16814:17032  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"contracts/contracts/ERC721A.sol\":16336:16349  address owner */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":16352:16368  ownerOf(tokenId) */\n      tag_104\n        /* \"contracts/contracts/ERC721A.sol\":16360:16367  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":16352:16359  ownerOf */\n      tag_57\n        /* \"contracts/contracts/ERC721A.sol\":16352:16368  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/contracts/ERC721A.sol\":16336:16368  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":16385:16413  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":16381:16556  if (_msgSenderERC721A() != owner)... */\n      tag_110\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16433:16477  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"contracts/contracts/ERC721A.sol\":16450:16455  owner */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":16433:16477  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_108:\n        /* \"contracts/contracts/ERC721A.sol\":16428:16556  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":16505:16540  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":16428:16556  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":16568:16583  _tokenApprovals */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":16568:16603  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":16619:16647  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":16568:16592  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/contracts/ERC721A.sol\":16619:16647  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":16325:16655  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":16247:16655  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n    tag_50:\n        /* \"contracts/contracts/ERC721A.sol\":20595:20622  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":20625:20652  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"contracts/contracts/ERC721A.sol\":20644:20651  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":20625:20643  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/contracts/ERC721A.sol\":20625:20652  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/contracts/ERC721A.sol\":20595:20652  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":20710:20714  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":20669:20714  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":20685:20704  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":20669:20714  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":20665:20751  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":20723:20751  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":20665:20751  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"contracts/contracts/ERC721A.sol\":20765:20792  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":19561:19585  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":19561:19576  _tokenApprovals */\n      0x06\n        /* \"contracts/contracts/ERC721A.sol\":19561:19585  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":19789:19815  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":19186:19216  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":18879:18907  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/contracts/ERC721A.sol\":19164:19184  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":19161:19217  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/contracts/ERC721A.sol\":20951:21131  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_126\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21044:21087  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"contracts/contracts/ERC721A.sol\":21061:21065  from */\n      dup7\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17763:17927  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":21044:21087  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_124:\n        /* \"contracts/contracts/ERC721A.sol\":21039:21131  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21096:21131  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":21039:21131  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":21148:21164  to == address(0) */\n      dup6\n      and\n        /* \"contracts/contracts/ERC721A.sol\":21144:21196  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_127\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21173:21196  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":21144:21196  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"contracts/contracts/ERC721A.sol\":21345:21360  approvedAddress */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":21342:21502  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":21485:21486  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":21464:21483  approvedAddressSlot */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":21457:21487  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":21342:21502  if approvedAddress {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":21882:21906  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":21882:21900  _packedAddressData */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":21882:21906  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":21880:21906  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":21951:21973  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":21949:21973  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":15105:15116  timestamp() */\n      timestamp\n        /* \"contracts/contracts/ERC721A.sol\":15080:15103  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/contracts/ERC721A.sol\":15076:15117  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/contracts/ERC721A.sol\":15063:15126  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/contracts/ERC721A.sol\":22244:22270  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":22244:22261  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":22244:22270  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":22244:22419  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":22539:22586  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"contracts/contracts/ERC721A.sol\":22539:22591  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":22535:23162  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_135\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":22644:22645  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":22634:22645  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/contracts/ERC721A.sol\":22612:22631  uint256 nextTokenId */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":22767:22797  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":22767:22784  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":22767:22797  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":22767:22802  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":22763:23147  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_137\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":22905:22918  _currentIndex */\n      sload(0x00)\n        /* \"contracts/contracts/ERC721A.sol\":22890:22901  nextTokenId */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":22890:22918  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/contracts/ERC721A.sol\":22886:23128  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":23052:23082  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":23052:23069  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":23052:23082  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":23052:23104  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":22886:23128  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"contracts/contracts/ERC721A.sol\":22593:23162  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":22535:23162  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"contracts/contracts/ERC721A.sol\":23209:23216  tokenId */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23205:23207  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":23190:23217  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":23199:23203  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":23190:23217  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/ERC721A.sol\":20584:23278  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":20453:23278  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n    tag_53:\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"contracts/contracts/ERC721A.sol\":23537:23541  from */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23543:23545  to */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23547:23554  tokenId */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":23520:23536  safeTransferFrom */\n      tag_77\n        /* \"contracts/contracts/ERC721A.sol\":23520:23559  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"contracts/contracts/ERC721A.sol\":23374:23567  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":11716:11868  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"contracts/contracts/ERC721A.sol\":11788:11795  address */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":11831:11858  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"contracts/contracts/ERC721A.sol\":11850:11857  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":11831:11849  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/contracts/ERC721A.sol\":11831:11858  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/contracts/ERC721A.sol\":7330:7337  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":7354:7373  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":7350:7410  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_145\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":7382:7410  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":7350:7410  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":7428:7453  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":7428:7446  _packedAddressData */\n      0x05\n        /* \"contracts/contracts/ERC721A.sol\":7428:7453  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":1417:1430  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/contracts/ERC721A.sol\":7428:7483  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":7258:7491  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10499:10603  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/contracts/ERC721A.sol\":10555:10568  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10588:10595  _symbol */\n      0x03\n        /* \"contracts/contracts/ERC721A.sol\":10581:10595  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n        /* \"contracts/contracts/ERC721A.sol\":17467:17506  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17467:17485  _operatorApprovals */\n      0x07\n        /* \"contracts/contracts/ERC721A.sol\":17467:17506  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":17467:17516  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/contracts/ERC721A.sol\":17467:17527  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":17467:17516  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      swap2\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":17543:17598  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/ERC721A.sol\":17372:17606  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n    tag_77:\n        /* \"contracts/contracts/ERC721A.sol\":24340:24371  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"contracts/contracts/ERC721A.sol\":24353:24357  from */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24359:24361  to */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24363:24370  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24340:24352  transferFrom */\n      tag_50\n        /* \"contracts/contracts/ERC721A.sol\":24340:24371  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":24386:24400  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/contracts/ERC721A.sol\":24386:24405  to.code.length != 0 */\n      iszero\n        /* \"contracts/contracts/ERC721A.sol\":24382:24565  if (to.code.length != 0)... */\n      tag_161\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":24425:24481  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"contracts/contracts/ERC721A.sol\":24456:24460  from */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24462:24464  to */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24466:24473  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24475:24480  _data */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":24425:24455  _checkContractOnERC721Received */\n      tag_160\n        /* \"contracts/contracts/ERC721A.sol\":24425:24481  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/contracts/ERC721A.sol\":24420:24565  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":24509:24549  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":24420:24565  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"contracts/contracts/ERC721A.sol\":24165:24572  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"contracts/contracts/ERC721A.sol\":10782:10795  string memory */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":10813:10829  _exists(tokenId) */\n      tag_163\n        /* \"contracts/contracts/ERC721A.sol\":10821:10828  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":10813:10820  _exists */\n      tag_101\n        /* \"contracts/contracts/ERC721A.sol\":10813:10829  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/contracts/ERC721A.sol\":10808:10867  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":10838:10867  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":10808:10867  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"contracts/contracts/ERC721A.sol\":10880:10901  string memory baseURI */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":10904:10914  _baseURI() */\n      tag_165\n        /* \"contracts/contracts/ERC721A.sol\":11356:11365  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":11279:11373  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/contracts/ERC721A.sol\":10904:10914  _baseURI() */\n    tag_165:\n        /* \"contracts/contracts/ERC721A.sol\":10880:10914  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":10938:10945  baseURI */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":10932:10953  bytes(baseURI).length */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":10957:10958  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":10932:10958  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":10932:11019  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/contracts/ERC721A.sol\":10985:10992  baseURI */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":10994:11012  _toString(tokenId) */\n      tag_169\n        /* \"contracts/contracts/ERC721A.sol\":11004:11011  tokenId */\n      dup5\n        /* \"contracts/contracts/ERC721A.sol\":10994:11003  _toString */\n      tag_170\n        /* \"contracts/contracts/ERC721A.sol\":10994:11012  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/contracts/ERC721A.sol\":10968:11013  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":10932:11019  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"contracts/contracts/ERC721A.sol\":10925:11019  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/contracts/ERC721A.sol\":10709:11027  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":18185:18467  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"contracts/contracts/ERC721A.sol\":18250:18254  bool */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":18340:18353  _currentIndex */\n      dup1\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":18330:18337  tokenId */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":18330:18353  tokenId < _currentIndex */\n      lt\n        /* \"contracts/contracts/ERC721A.sol\":18287:18440  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":18391:18417  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":18391:18408  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":18391:18417  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":18391:18435  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/contracts/ERC721A.sol\":18391:18440  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":18185:18467  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":12871:14146  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"contracts/contracts/ERC721A.sol\":12938:12945  uint256 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":12973:12980  tokenId */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":13075:13088  _currentIndex */\n      sload(0x00)\n        /* \"contracts/contracts/ERC721A.sol\":13068:13072  curr */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":13068:13088  curr < _currentIndex */\n      lt\n        /* \"contracts/contracts/ERC721A.sol\":13064:14079  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":13113:13127  uint256 packed */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":13130:13153  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":13130:13147  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":13130:13153  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":13219:13243  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"contracts/contracts/ERC721A.sol\":13219:13248  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":13215:14060  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_184\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n    tag_185:\n        /* \"contracts/contracts/ERC721A.sol\":13891:13897  packed */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":13901:13902  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":13891:13902  packed == 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n      tag_168\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/contracts/ERC721A.sol\":13962:13968  --curr */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":13944:13969  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":13944:13961  _packedOwnerships */\n      0x04\n        /* \"contracts/contracts/ERC721A.sol\":13944:13969  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/ERC721A.sol\":13884:13997  while (packed == 0) {... */\n      jump(tag_185)\n        /* \"contracts/contracts/ERC721A.sol\":13215:14060  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"contracts/contracts/ERC721A.sol\":13090:14079  {... */\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":13064:14079  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"contracts/contracts/ERC721A.sol\":14107:14138  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":26656:27372  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":26819:26823  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/ERC721A.sol\":26840:26885  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_197\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":40580:40590  msg.sender */\n      caller\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26907:26911  from */\n      dup10\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26913:26920  tokenId */\n      dup9\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26922:26927  _data */\n      dup9\n      swap1\n        /* \"contracts/contracts/ERC721A.sol\":26840:26928  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_200\n      swap2\n      dup2\n      add\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"contracts/contracts/ERC721A.sol\":26836:27365  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":27123:27129  reason */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":27123:27136  reason.length */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":27140:27141  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":27123:27141  reason.length == 0 */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":27119:27354  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/contracts/ERC721A.sol\":27169:27209  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":27119:27354  if (reason.length == 0) {... */\n    tag_208:\n        /* \"contracts/contracts/ERC721A.sol\":27312:27318  reason */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":27306:27319  mload(reason) */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":27297:27303  reason */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":27293:27295  32 */\n      0x20\n        /* \"contracts/contracts/ERC721A.sol\":27289:27304  add(32, reason) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":27282:27320  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/contracts/ERC721A.sol\":26836:27365  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_202:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/ERC721A.sol\":26999:27063  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":26656:27372  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/ERC721A.sol\":40700:42445  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"contracts/contracts/ERC721A.sol\":40765:40782  string memory str */\n      0x60\n        /* \"contracts/contracts/ERC721A.sol\":41199:41203  0xa0 */\n      0xa0\n        /* \"contracts/contracts/ERC721A.sol\":41192:41196  0x40 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":41186:41197  mload(0x40) */\n      mload\n        /* \"contracts/contracts/ERC721A.sol\":41182:41204  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":41291:41292  m */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41285:41289  0x40 */\n      0x40\n        /* \"contracts/contracts/ERC721A.sol\":41278:41293  mstore(0x40, m) */\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":41366:41370  0x20 */\n      0x20\n        /* \"contracts/contracts/ERC721A.sol\":41363:41364  m */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":41359:41371  sub(m, 0x20) */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":41352:41371  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":41448:41449  0 */\n      0x00\n        /* \"contracts/contracts/ERC721A.sol\":41443:41446  str */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":41436:41450  mstore(str, 0) */\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":41552:41555  str */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41791:41796  value */\n      dup3\n        /* \"contracts/contracts/ERC721A.sol\":41773:42201  for { let temp := value } 1 {} {... */\n    tag_213:\n        /* \"contracts/contracts/ERC721A.sol\":41839:41840  1 */\n      0x01\n        /* \"contracts/contracts/ERC721A.sol\":41834:41837  str */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":41830:41841  sub(str, 1) */\n      sub\n        /* \"contracts/contracts/ERC721A.sol\":41823:41841  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":42010:42012  10 */\n      0x0a\n        /* \"contracts/contracts/ERC721A.sol\":42004:42008  temp */\n      dup2\n        /* \"contracts/contracts/ERC721A.sol\":42000:42013  mod(temp, 10) */\n      mod\n        /* \"contracts/contracts/ERC721A.sol\":41996:41998  48 */\n      0x30\n        /* \"contracts/contracts/ERC721A.sol\":41992:42014  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/contracts/ERC721A.sol\":41987:41990  str */\n      dup4\n        /* \"contracts/contracts/ERC721A.sol\":41979:42015  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/contracts/ERC721A.sol\":42104:42106  10 */\n      0x0a\n        /* \"contracts/contracts/ERC721A.sol\":42094:42107  div(temp, 10) */\n      swap1\n      div\n        /* \"contracts/contracts/ERC721A.sol\":42161:42186  if iszero(temp) { break } */\n      dup1\n        /* \"contracts/contracts/ERC721A.sol\":41773:42201  for { let temp := value } 1 {} {... */\n      tag_213\n        /* \"contracts/contracts/ERC721A.sol\":42161:42186  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"contracts/contracts/ERC721A.sol\":42231:42244  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"contracts/contracts/ERC721A.sol\":42346:42360  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/ERC721A.sol\":42408:42427  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/ERC721A.sol\":42346:42360  sub(str, 0x20) */\n      swap2\n        /* \"contracts/contracts/ERC721A.sol\":40700:42445  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_225:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_227:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_168\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_219:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_231:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_231)\n    tag_233:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_220:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_235\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_219\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_30:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_168\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_34:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_239:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_221:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_242:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_40:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_244:\n        /* \"#utility.yul\":2087:2116   */\n      tag_245\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_221\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_49:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_248:\n        /* \"#utility.yul\":2545:2574   */\n      tag_249\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_221\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_250\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_221\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_62:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_252:\n        /* \"#utility.yul\":2844:2873   */\n      tag_168\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_72:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_255:\n        /* \"#utility.yul\":3049:3078   */\n      tag_256\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_257:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_222:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_76:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_260:\n        /* \"#utility.yul\":3580:3609   */\n      tag_261\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_221\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_262\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_263:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_264:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_266\n      tag_222\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_268\n      tag_222\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_269:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_86:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_271:\n        /* \"#utility.yul\":4679:4708   */\n      tag_272\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_221\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_273\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_221\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_94:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_275:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_276:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5161:5657   */\n    tag_172:\n        /* \"#utility.yul\":5340:5343   */\n      0x00\n        /* \"#utility.yul\":5378:5384   */\n      dup4\n        /* \"#utility.yul\":5372:5385   */\n      mload\n        /* \"#utility.yul\":5394:5460   */\n      tag_278\n        /* \"#utility.yul\":5453:5459   */\n      dup2\n        /* \"#utility.yul\":5448:5451   */\n      dup5\n        /* \"#utility.yul\":5441:5445   */\n      0x20\n        /* \"#utility.yul\":5433:5439   */\n      dup9\n        /* \"#utility.yul\":5429:5446   */\n      add\n        /* \"#utility.yul\":5394:5460   */\n      tag_219\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5523:5536   */\n      dup4\n      mload\n        /* \"#utility.yul\":5482:5498   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5545:5615   */\n      tag_279\n        /* \"#utility.yul\":5523:5536   */\n      dup2\n        /* \"#utility.yul\":5482:5498   */\n      dup4\n        /* \"#utility.yul\":5592:5596   */\n      0x20\n        /* \"#utility.yul\":5580:5597   */\n      dup9\n      add\n        /* \"#utility.yul\":5545:5615   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5631:5651   */\n      add\n      swap5\n        /* \"#utility.yul\":5161:5657   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5662:6151   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5931:5946   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5913:5947   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5983:5998   */\n      dup5\n      and\n        /* \"#utility.yul\":5978:5980   */\n      0x20\n        /* \"#utility.yul\":5963:5981   */\n      dup3\n      add\n        /* \"#utility.yul\":5956:5999   */\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x40\n        /* \"#utility.yul\":6015:6033   */\n      dup2\n      add\n        /* \"#utility.yul\":6008:6042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6078:6081   */\n      0x80\n        /* \"#utility.yul\":6073:6075   */\n      0x60\n        /* \"#utility.yul\":6058:6076   */\n      dup3\n      add\n        /* \"#utility.yul\":6051:6082   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5856:5860   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6099:6145   */\n      tag_281\n      swap1\n        /* \"#utility.yul\":6125:6144   */\n      dup4\n      add\n        /* \"#utility.yul\":6117:6123   */\n      dup5\n        /* \"#utility.yul\":6099:6145   */\n      tag_220\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6091:6145   */\n      swap7\n        /* \"#utility.yul\":5662:6151   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6156:6405   */\n    tag_201:\n        /* \"#utility.yul\":6225:6231   */\n      0x00\n        /* \"#utility.yul\":6278:6280   */\n      0x20\n        /* \"#utility.yul\":6266:6275   */\n      dup3\n        /* \"#utility.yul\":6257:6264   */\n      dup5\n        /* \"#utility.yul\":6253:6276   */\n      sub\n        /* \"#utility.yul\":6249:6281   */\n      slt\n        /* \"#utility.yul\":6246:6298   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":6294:6295   */\n      0x00\n        /* \"#utility.yul\":6291:6292   */\n      dup1\n        /* \"#utility.yul\":6284:6296   */\n      revert\n        /* \"#utility.yul\":6246:6298   */\n    tag_283:\n        /* \"#utility.yul\":6326:6335   */\n      dup2\n        /* \"#utility.yul\":6320:6336   */\n      mload\n        /* \"#utility.yul\":6345:6375   */\n      tag_168\n        /* \"#utility.yul\":6369:6374   */\n      dup2\n        /* \"#utility.yul\":6345:6375   */\n      tag_218\n      jump\t// in\n\n    auxdata: 0xa264697066735822122034bfa0ad76c54fc9d0cd15467f79b1c046339b5ef6210f08b98787193cce626964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:5",
										"nodeType": "YulBlock",
										"src": "0:4114:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:780:5",
													"nodeType": "YulBlock",
													"src": "210:780:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nativeSrc": "294:13:5",
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:5",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:5",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:5",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nativeSrc": "330:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:5",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nativeSrc": "326:18:5",
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:5",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:5",
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nativeSrc": "369:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nativeSrc": "356:10:5",
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nativeSrc": "353:36:5",
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nativeSrc": "398:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nativeSrc": "408:7:5",
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:5",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nativeSrc": "438:9:5",
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:5",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:5",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nativeSrc": "498:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nativeSrc": "494:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:5",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nativeSrc": "490:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nativeSrc": "486:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nativeSrc": "474:53:5",
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:5",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:5",
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nativeSrc": "588:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nativeSrc": "588:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nativeSrc": "542:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nativeSrc": "562:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nativeSrc": "539:46:5",
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nativeSrc": "536:72:5",
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:5",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nativeSrc": "617:22:5",
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nativeSrc": "617:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nativeSrc": "648:18:5",
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nativeSrc": "648:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nativeSrc": "675:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:5",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:5",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:5",
																"nodeType": "YulBlock",
																"src": "737:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:5",
																					"nodeType": "YulLiteral",
																					"src": "746:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:5",
																					"nodeType": "YulLiteral",
																					"src": "749:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:5"
																			},
																			"nativeSrc": "739:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:5"
																		},
																		"nativeSrc": "739:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nativeSrc": "708:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:5",
																				"nodeType": "YulLiteral",
																				"src": "725:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nativeSrc": "704:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nativeSrc": "701:35:5",
																"nodeType": "YulFunctionCall",
																"src": "701:35:5"
															},
															"nativeSrc": "698:55:5",
															"nodeType": "YulIf",
															"src": "698:55:5"
														},
														{
															"nativeSrc": "762:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:5",
																"nodeType": "YulLiteral",
																"src": "771:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:5",
																	"nodeType": "YulTypedName",
																	"src": "766:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:5",
																"nodeType": "YulBlock",
																"src": "827:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:5"
																							},
																							"nativeSrc": "852:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:5"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:5"
																					},
																					"nativeSrc": "848:23:5",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:5"
																									},
																									"nativeSrc": "883:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:5"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:5"
																							},
																							"nativeSrc": "879:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:5"
																					},
																					"nativeSrc": "873:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:5"
																			},
																			"nativeSrc": "841:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:5"
																		},
																		"nativeSrc": "841:63:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:5"
																},
																"nativeSrc": "789:9:5",
																"nodeType": "YulFunctionCall",
																"src": "789:9:5"
															},
															"nativeSrc": "781:133:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:5",
																"nodeType": "YulBlock",
																"src": "799:19:5",
																"statements": [
																	{
																		"nativeSrc": "801:15:5",
																		"nodeType": "YulAssignment",
																		"src": "801:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:5"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:5"
																			},
																			"nativeSrc": "806:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:5",
																"nodeType": "YulBlock",
																"src": "785:3:5",
																"statements": []
															},
															"src": "781:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:5"
																				},
																				"nativeSrc": "934:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:5",
																				"nodeType": "YulLiteral",
																				"src": "951:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:5"
																		},
																		"nativeSrc": "930:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:5",
																		"nodeType": "YulLiteral",
																		"src": "958:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:5"
																},
																"nativeSrc": "923:37:5",
																"nodeType": "YulFunctionCall",
																"src": "923:37:5"
															},
															"nativeSrc": "923:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:5"
														},
														{
															"nativeSrc": "969:15:5",
															"nodeType": "YulAssignment",
															"src": "969:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:5",
																"nodeType": "YulIdentifier",
																"src": "978:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:844:5"
											},
											{
												"body": {
													"nativeSrc": "1113:444:5",
													"nodeType": "YulBlock",
													"src": "1113:444:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:5",
																"nodeType": "YulBlock",
																"src": "1159:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:5"
																			},
																			"nativeSrc": "1161:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:5"
																		},
																		"nativeSrc": "1161:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:5"
																		},
																		"nativeSrc": "1130:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:5"
																},
																"nativeSrc": "1126:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:5"
															},
															"nativeSrc": "1123:52:5",
															"nodeType": "YulIf",
															"src": "1123:52:5"
														},
														{
															"nativeSrc": "1184:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:5"
																},
																"nativeSrc": "1198:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:5"
																		},
																		"nativeSrc": "1237:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:5"
																},
																"nativeSrc": "1233:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:5",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:5",
																"nodeType": "YulBlock",
																"src": "1278:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:5"
																			},
																			"nativeSrc": "1280:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:5"
																		},
																		"nativeSrc": "1280:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:5"
																},
																"nativeSrc": "1263:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:5"
															},
															"nativeSrc": "1260:34:5",
															"nodeType": "YulIf",
															"src": "1260:34:5"
														},
														{
															"nativeSrc": "1303:71:5",
															"nodeType": "YulAssignment",
															"src": "1303:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:5"
																		},
																		"nativeSrc": "1342:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:5"
																},
																"nativeSrc": "1313:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:5"
																}
															]
														},
														{
															"nativeSrc": "1383:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:5"
																		},
																		"nativeSrc": "1405:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:5"
																},
																"nativeSrc": "1399:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:5",
																"nodeType": "YulBlock",
																"src": "1453:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:5"
																			},
																			"nativeSrc": "1455:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:5"
																		},
																		"nativeSrc": "1455:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:5"
																},
																"nativeSrc": "1436:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:5"
															},
															"nativeSrc": "1433:36:5",
															"nodeType": "YulIf",
															"src": "1433:36:5"
														},
														{
															"nativeSrc": "1478:73:5",
															"nodeType": "YulAssignment",
															"src": "1478:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:5"
																		},
																		"nativeSrc": "1517:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:5"
																},
																"nativeSrc": "1488:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:5",
														"nodeType": "YulTypedName",
														"src": "1071:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:5",
														"nodeType": "YulTypedName",
														"src": "1082:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:5",
														"nodeType": "YulTypedName",
														"src": "1094:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:5",
														"nodeType": "YulTypedName",
														"src": "1102:6:5",
														"type": ""
													}
												],
												"src": "995:562:5"
											},
											{
												"body": {
													"nativeSrc": "1617:325:5",
													"nodeType": "YulBlock",
													"src": "1617:325:5",
													"statements": [
														{
															"nativeSrc": "1627:22:5",
															"nodeType": "YulAssignment",
															"src": "1627:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:5"
																},
																"nativeSrc": "1637:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:5"
																},
																"nativeSrc": "1684:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:5",
																"nodeType": "YulBlock",
																"src": "1735:31:5",
																"statements": [
																	{
																		"nativeSrc": "1737:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:5"
																			},
																			"nativeSrc": "1747:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:5"
																},
																"nativeSrc": "1708:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:5"
															},
															"nativeSrc": "1705:61:5",
															"nodeType": "YulIf",
															"src": "1705:61:5"
														},
														{
															"body": {
																"nativeSrc": "1825:111:5",
																"nodeType": "YulBlock",
																"src": "1825:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:5"
																					},
																					"nativeSrc": "1849:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:5"
																			},
																			"nativeSrc": "1839:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:5"
																		},
																		"nativeSrc": "1839:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:5"
																			},
																			"nativeSrc": "1883:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:5"
																		},
																		"nativeSrc": "1883:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:5"
																			},
																			"nativeSrc": "1911:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:5"
																		},
																		"nativeSrc": "1911:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:5"
																		},
																		"nativeSrc": "1801:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:5"
																},
																"nativeSrc": "1778:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:5"
															},
															"nativeSrc": "1775:161:5",
															"nodeType": "YulIf",
															"src": "1775:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:5",
														"nodeType": "YulTypedName",
														"src": "1597:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:5",
														"nodeType": "YulTypedName",
														"src": "1606:6:5",
														"type": ""
													}
												],
												"src": "1562:380:5"
											},
											{
												"body": {
													"nativeSrc": "2003:65:5",
													"nodeType": "YulBlock",
													"src": "2003:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:5"
																},
																"nativeSrc": "2013:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:5"
															},
															"nativeSrc": "2013:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:5"
														},
														{
															"nativeSrc": "2036:26:5",
															"nodeType": "YulAssignment",
															"src": "2036:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:5"
																},
																"nativeSrc": "2044:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:5",
														"nodeType": "YulTypedName",
														"src": "1986:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:5",
														"nodeType": "YulTypedName",
														"src": "1994:4:5",
														"type": ""
													}
												],
												"src": "1947:121:5"
											},
											{
												"body": {
													"nativeSrc": "2154:437:5",
													"nodeType": "YulBlock",
													"src": "2154:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:5",
																"nodeType": "YulBlock",
																"src": "2187:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:5"
																			},
																			"nativeSrc": "2201:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:5"
																		},
																		"nativeSrc": "2201:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:5"
																	},
																	{
																		"nativeSrc": "2230:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:5"
																			},
																			"nativeSrc": "2242:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:5"
																							},
																							"nativeSrc": "2309:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:5"
																					},
																					"nativeSrc": "2302:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:5"
																			},
																			"nativeSrc": "2292:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:5",
																			"nodeType": "YulBlock",
																			"src": "2367:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:5"
																			},
																			"nativeSrc": "2346:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:5"
																		},
																		"nativeSrc": "2343:47:5",
																		"nodeType": "YulIf",
																		"src": "2343:47:5"
																	},
																	{
																		"nativeSrc": "2403:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:5"
																							},
																							"nativeSrc": "2430:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:5"
																					},
																					"nativeSrc": "2423:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:5"
																			},
																			"nativeSrc": "2413:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:5",
																			"nodeType": "YulBlock",
																			"src": "2555:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:5"
																						},
																						"nativeSrc": "2557:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:5"
																					},
																					"nativeSrc": "2557:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:5"
																			},
																			"nativeSrc": "2502:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:5"
																		},
																		"nativeSrc": "2494:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:5",
																			"nodeType": "YulBlock",
																			"src": "2516:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:5"
																						},
																						"nativeSrc": "2527:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:5",
																			"nodeType": "YulBlock",
																			"src": "2498:3:5",
																			"statements": []
																		},
																		"src": "2494:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:5"
																},
																"nativeSrc": "2167:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:5"
															},
															"nativeSrc": "2164:421:5",
															"nodeType": "YulIf",
															"src": "2164:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:5",
														"nodeType": "YulTypedName",
														"src": "2126:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:5",
														"nodeType": "YulTypedName",
														"src": "2133:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:5",
														"nodeType": "YulTypedName",
														"src": "2138:10:5",
														"type": ""
													}
												],
												"src": "2073:518:5"
											},
											{
												"body": {
													"nativeSrc": "2681:81:5",
													"nodeType": "YulBlock",
													"src": "2681:81:5",
													"statements": [
														{
															"nativeSrc": "2691:65:5",
															"nodeType": "YulAssignment",
															"src": "2691:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:5"
																								},
																								"nativeSrc": "2720:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:5"
																								},
																								"nativeSrc": "2733:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:5"
																						},
																						"nativeSrc": "2716:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:5"
																				},
																				"nativeSrc": "2712:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:5"
																		},
																		"nativeSrc": "2702:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:5"
																		},
																		"nativeSrc": "2744:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:5"
																},
																"nativeSrc": "2699:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:5",
														"nodeType": "YulTypedName",
														"src": "2658:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:5",
														"nodeType": "YulTypedName",
														"src": "2664:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:5",
														"nodeType": "YulTypedName",
														"src": "2672:4:5",
														"type": ""
													}
												],
												"src": "2596:166:5"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:5",
													"nodeType": "YulBlock",
													"src": "2863:1249:5",
													"statements": [
														{
															"nativeSrc": "2873:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:5"
																},
																"nativeSrc": "2887:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:5",
																"nodeType": "YulBlock",
																"src": "2940:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:5"
																			},
																			"nativeSrc": "2942:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:5"
																		},
																		"nativeSrc": "2942:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:5"
																				},
																				"nativeSrc": "2924:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:5"
																		},
																		"nativeSrc": "2920:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:5"
																},
																"nativeSrc": "2909:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:5"
															},
															"nativeSrc": "2906:56:5",
															"nodeType": "YulIf",
															"src": "2906:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:5"
																				},
																				"nativeSrc": "3047:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:5"
																		},
																		"nativeSrc": "3021:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:5"
																},
																"nativeSrc": "2971:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:5"
															},
															"nativeSrc": "2971:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:5"
														},
														{
															"nativeSrc": "3077:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:5",
																"nodeType": "YulLiteral",
																"src": "3094:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:5",
																"nodeType": "YulLiteral",
																"src": "3123:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:5",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:5",
															"nodeType": "YulAssignment",
															"src": "3136:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:5",
																"nodeType": "YulLiteral",
																"src": "3149:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:5",
																		"nodeType": "YulBlock",
																		"src": "3199:656:5",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:5"
																							},
																							"nativeSrc": "3240:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:5"
																					},
																					"nativeSrc": "3228:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:5"
																					},
																					"nativeSrc": "3275:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:5",
																					"nodeType": "YulBlock",
																					"src": "3410:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:5"
																												},
																												"nativeSrc": "3449:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:5"
																										},
																										"nativeSrc": "3443:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:5"
																								},
																								"nativeSrc": "3428:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:5"
																							},
																							"nativeSrc": "3428:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:5"
																						},
																						{
																							"nativeSrc": "3487:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:5"
																								},
																								"nativeSrc": "3497:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:5",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:5"
																								},
																								"nativeSrc": "3541:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:5"
																					},
																					"nativeSrc": "3354:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:5"
																				},
																				"nativeSrc": "3346:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:5",
																					"nodeType": "YulBlock",
																					"src": "3369:28:5",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:5"
																								},
																								"nativeSrc": "3376:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:5",
																					"nodeType": "YulBlock",
																					"src": "3350:3:5",
																					"statements": []
																				},
																				"src": "3346:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:5",
																					"nodeType": "YulBlock",
																					"src": "3630:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:5"
																										},
																										"nativeSrc": "3671:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:5"
																								},
																								"nativeSrc": "3665:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:5"
																																		},
																																		"nativeSrc": "3750:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:5"
																																},
																																"nativeSrc": "3746:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:5"
																																},
																																"nativeSrc": "3772:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:5"
																														},
																														"nativeSrc": "3742:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:5"
																												},
																												"nativeSrc": "3738:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:5"
																										},
																										"nativeSrc": "3723:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:5"
																								},
																								"nativeSrc": "3708:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:5"
																							},
																							"nativeSrc": "3708:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:5"
																					},
																					"nativeSrc": "3598:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:5"
																				},
																				"nativeSrc": "3595:201:5",
																				"nodeType": "YulIf",
																				"src": "3595:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:5"
																									},
																									"nativeSrc": "3826:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:5"
																							},
																							"nativeSrc": "3822:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:5"
																					},
																					"nativeSrc": "3809:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:5"
																				},
																				"nativeSrc": "3809:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:5",
																	"nodeType": "YulCase",
																	"src": "3192:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:5",
																		"nodeType": "YulBlock",
																		"src": "3872:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:5",
																					"nodeType": "YulBlock",
																					"src": "3935:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:5"
																										},
																										"nativeSrc": "3968:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:5"
																								},
																								"nativeSrc": "3962:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:5"
																				},
																				"nativeSrc": "3913:89:5",
																				"nodeType": "YulIf",
																				"src": "3913:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:5"
																							},
																							"nativeSrc": "4028:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:5"
																					},
																					"nativeSrc": "4015:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:5"
																				},
																				"nativeSrc": "4015:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:5",
																	"nodeType": "YulCase",
																	"src": "3864:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:5"
																},
																"nativeSrc": "3169:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:5"
															},
															"nativeSrc": "3162:944:5",
															"nodeType": "YulSwitch",
															"src": "3162:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:5",
														"nodeType": "YulTypedName",
														"src": "2848:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:5",
														"nodeType": "YulTypedName",
														"src": "2854:3:5",
														"type": ""
													}
												],
												"src": "2767:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFE1 CODESIZE SUB DUP1 PUSH3 0xFE1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11D JUMP JUMPDEST PUSH1 0x2 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20D JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20D JUMP JUMPDEST POP POP PUSH0 DUP1 SSTORE POP PUSH3 0x2D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9D JUMPI PUSH3 0x9D PUSH3 0x5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC8 JUMPI PUSH3 0xC8 PUSH3 0x5C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x108 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x146 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x154 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x16A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x179 DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x198 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x208 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x205 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x229 JUMPI PUSH3 0x229 PUSH3 0x5C JUMP JUMPDEST PUSH3 0x241 DUP2 PUSH3 0x23A DUP5 SLOAD PUSH3 0x183 JUMP JUMPDEST DUP5 PUSH3 0x1BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x277 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D1 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x286 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C5 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCFA DUP1 PUSH3 0x2E7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x98E JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x675 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2DF JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x2FA JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0xC07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0xC07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x39A DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3DC DUP3 PUSH2 0x61E JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x415 JUMPI PUSH2 0x3F8 DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47A DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4F9 JUMPI PUSH2 0x4DC DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x52A JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x5B6 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x5B4 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x5B4 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FA DUP3 PUSH2 0x7EB JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0xC07 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6FA DUP5 DUP5 DUP5 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x733 JUMPI PUSH2 0x716 DUP5 DUP5 DUP5 DUP5 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x744 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x776 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BF JUMP JUMPDEST DUP1 PUSH2 0x79E DUP5 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AF SWAP3 SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x2FA JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x833 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x831 JUMPI JUMPDEST DUP1 PUSH0 SUB PUSH2 0x7BF JUMPI POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x813 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x880 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8BA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8B7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x916 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x94C JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x98B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BF DUP2 PUSH2 0x976 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9AB JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA35 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA54 DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA74 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7D DUP5 PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP PUSH2 0xA8B PUSH1 0x20 DUP6 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BF DUP3 PUSH2 0xA1F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xACE DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP6 PUSH2 0xA1F JUMP JUMPDEST SWAP4 POP PUSH2 0xB2B PUSH1 0x20 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB4E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB61 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB73 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0xAED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBF0 DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE PUSH1 0x20 DUP5 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC1B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xC50 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC64 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xC9F SWAP1 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BF DUP2 PUSH2 0x976 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xBF LOG0 0xAD PUSH23 0xC54FC9D0CD15467F79B1C046339B5EF6210F08B9878719 EXTCODECOPY 0xCE PUSH3 0x696473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "941:41507:1:-:0;;;5096:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5163:5;:13;5171:5;5163;:13;:::i;:::-;-1:-1:-1;5187:7:1;:17;5197:7;5187;:17;:::i;:::-;-1:-1:-1;;5646:7:1;5215:31;;-1:-1:-1;941:41507:1;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:5;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:5;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:5;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:5;;;3962:26;3913:89;-1:-1:-1;;2724:1:5;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:5;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:5;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;941:41507:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1168": {
									"entryPoint": null,
									"id": 1168,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_565": {
									"entryPoint": null,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1155": {
									"entryPoint": null,
									"id": 1155,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1223": {
									"entryPoint": 2124,
									"id": 1223,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_907": {
									"entryPoint": 1990,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_940": {
									"entryPoint": null,
									"id": 940,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_921": {
									"entryPoint": null,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1772": {
									"entryPoint": null,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1762": {
									"entryPoint": null,
									"id": 1762,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_693": {
									"entryPoint": 2027,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1782": {
									"entryPoint": 2355,
									"id": 1782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_814": {
									"entryPoint": 978,
									"id": 814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_380": {
									"entryPoint": 1576,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_837": {
									"entryPoint": 912,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_503": {
									"entryPoint": 768,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_585": {
									"entryPoint": 1566,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1104": {
									"entryPoint": 1535,
									"id": 1104,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1142": {
									"entryPoint": 1775,
									"id": 1142,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_863": {
									"entryPoint": 1668,
									"id": 863,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_493": {
									"entryPoint": 687,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_513": {
									"entryPoint": 1653,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_556": {
									"entryPoint": 1849,
									"id": 556,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1085": {
									"entryPoint": 1136,
									"id": 1085,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6407:5",
										"nodeType": "YulBlock",
										"src": "0:6407:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:5",
													"nodeType": "YulBlock",
													"src": "58:87:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:5",
																"nodeType": "YulBlock",
																"src": "123:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:5",
																					"nodeType": "YulLiteral",
																					"src": "132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:5",
																					"nodeType": "YulLiteral",
																					"src": "135:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:5"
																			},
																			"nativeSrc": "125:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:5"
																		},
																		"nativeSrc": "125:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:5",
																								"nodeType": "YulLiteral",
																								"src": "103:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:5",
																								"nodeType": "YulLiteral",
																								"src": "108:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:5"
																						},
																						"nativeSrc": "99:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:5"
																				},
																				"nativeSrc": "88:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:5"
																		},
																		"nativeSrc": "78:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:5"
																},
																"nativeSrc": "71:51:5",
																"nodeType": "YulFunctionCall",
																"src": "71:51:5"
															},
															"nativeSrc": "68:71:5",
															"nodeType": "YulIf",
															"src": "68:71:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:5",
														"nodeType": "YulTypedName",
														"src": "47:5:5",
														"type": ""
													}
												],
												"src": "14:131:5"
											},
											{
												"body": {
													"nativeSrc": "219:176:5",
													"nodeType": "YulBlock",
													"src": "219:176:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:5",
																"nodeType": "YulBlock",
																"src": "265:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:5",
																					"nodeType": "YulLiteral",
																					"src": "274:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:5",
																					"nodeType": "YulLiteral",
																					"src": "277:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:5"
																			},
																			"nativeSrc": "267:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:5"
																		},
																		"nativeSrc": "267:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:5"
																		},
																		"nativeSrc": "236:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:5",
																		"nodeType": "YulLiteral",
																		"src": "261:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:5"
																},
																"nativeSrc": "232:32:5",
																"nodeType": "YulFunctionCall",
																"src": "232:32:5"
															},
															"nativeSrc": "229:52:5",
															"nodeType": "YulIf",
															"src": "229:52:5"
														},
														{
															"nativeSrc": "290:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:5"
																},
																"nativeSrc": "303:23:5",
																"nodeType": "YulFunctionCall",
																"src": "303:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulTypedName",
																	"src": "294:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:5"
																},
																"nativeSrc": "335:30:5",
																"nodeType": "YulFunctionCall",
																"src": "335:30:5"
															},
															"nativeSrc": "335:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:5"
														},
														{
															"nativeSrc": "374:15:5",
															"nodeType": "YulAssignment",
															"src": "374:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:5",
																"nodeType": "YulIdentifier",
																"src": "384:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:5",
														"nodeType": "YulTypedName",
														"src": "185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:5",
														"nodeType": "YulTypedName",
														"src": "196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:5",
														"nodeType": "YulTypedName",
														"src": "208:6:5",
														"type": ""
													}
												],
												"src": "150:245:5"
											},
											{
												"body": {
													"nativeSrc": "495:92:5",
													"nodeType": "YulBlock",
													"src": "495:92:5",
													"statements": [
														{
															"nativeSrc": "505:26:5",
															"nodeType": "YulAssignment",
															"src": "505:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:5",
																		"nodeType": "YulLiteral",
																		"src": "528:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:5"
																},
																"nativeSrc": "513:18:5",
																"nodeType": "YulFunctionCall",
																"src": "513:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:5"
																				},
																				"nativeSrc": "565:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:5"
																		},
																		"nativeSrc": "558:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:5"
																},
																"nativeSrc": "540:41:5",
																"nodeType": "YulFunctionCall",
																"src": "540:41:5"
															},
															"nativeSrc": "540:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:5",
														"nodeType": "YulTypedName",
														"src": "464:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:5",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:5",
														"nodeType": "YulTypedName",
														"src": "486:4:5",
														"type": ""
													}
												],
												"src": "400:187:5"
											},
											{
												"body": {
													"nativeSrc": "658:184:5",
													"nodeType": "YulBlock",
													"src": "658:184:5",
													"statements": [
														{
															"nativeSrc": "668:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:5",
																"nodeType": "YulLiteral",
																"src": "677:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:5",
																	"nodeType": "YulTypedName",
																	"src": "672:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:5",
																"nodeType": "YulBlock",
																"src": "737:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:5"
																					},
																					"nativeSrc": "758:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:5"
																							},
																							"nativeSrc": "777:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:5"
																					},
																					"nativeSrc": "771:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:5"
																			},
																			"nativeSrc": "751:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:5"
																		},
																		"nativeSrc": "751:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:5"
																},
																"nativeSrc": "695:13:5",
																"nodeType": "YulFunctionCall",
																"src": "695:13:5"
															},
															"nativeSrc": "687:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:5",
																"nodeType": "YulBlock",
																"src": "709:19:5",
																"statements": [
																	{
																		"nativeSrc": "711:15:5",
																		"nodeType": "YulAssignment",
																		"src": "711:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:5",
																					"nodeType": "YulLiteral",
																					"src": "723:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:5"
																			},
																			"nativeSrc": "716:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:5",
																"nodeType": "YulBlock",
																"src": "691:3:5",
																"statements": []
															},
															"src": "687:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:5"
																		},
																		"nativeSrc": "816:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:5",
																		"nodeType": "YulLiteral",
																		"src": "834:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:5"
																},
																"nativeSrc": "809:27:5",
																"nodeType": "YulFunctionCall",
																"src": "809:27:5"
															},
															"nativeSrc": "809:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:5",
														"nodeType": "YulTypedName",
														"src": "636:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:5",
														"nodeType": "YulTypedName",
														"src": "641:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:5",
														"nodeType": "YulTypedName",
														"src": "646:6:5",
														"type": ""
													}
												],
												"src": "592:250:5"
											},
											{
												"body": {
													"nativeSrc": "897:221:5",
													"nodeType": "YulBlock",
													"src": "897:221:5",
													"statements": [
														{
															"nativeSrc": "907:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:5"
																},
																"nativeSrc": "921:12:5",
																"nodeType": "YulFunctionCall",
																"src": "921:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:5",
																	"nodeType": "YulTypedName",
																	"src": "911:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:5"
																},
																"nativeSrc": "942:19:5",
																"nodeType": "YulFunctionCall",
																"src": "942:19:5"
															},
															"nativeSrc": "942:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:5"
																		},
																		"nativeSrc": "1005:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nativeSrc": "1023:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:5"
																},
																"nativeSrc": "970:76:5",
																"nodeType": "YulFunctionCall",
																"src": "970:76:5"
															},
															"nativeSrc": "970:76:5",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:5"
														},
														{
															"nativeSrc": "1055:57:5",
															"nodeType": "YulAssignment",
															"src": "1055:57:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:5"
																						},
																						"nativeSrc": "1079:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:5"
																						},
																						"nativeSrc": "1096:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:5"
																				},
																				"nativeSrc": "1075:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:5"
																		},
																		"nativeSrc": "1066:39:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:5"
																},
																"nativeSrc": "1062:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:5",
														"nodeType": "YulTypedName",
														"src": "874:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:5",
														"nodeType": "YulTypedName",
														"src": "881:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:5",
														"nodeType": "YulTypedName",
														"src": "889:3:5",
														"type": ""
													}
												],
												"src": "847:271:5"
											},
											{
												"body": {
													"nativeSrc": "1244:99:5",
													"nodeType": "YulBlock",
													"src": "1244:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:5"
																},
																"nativeSrc": "1254:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:5"
															},
															"nativeSrc": "1254:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:5"
														},
														{
															"nativeSrc": "1284:53:5",
															"nodeType": "YulAssignment",
															"src": "1284:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:5"
																		},
																		"nativeSrc": "1318:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:5"
																},
																"nativeSrc": "1292:45:5",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:5",
														"nodeType": "YulTypedName",
														"src": "1213:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:5",
														"nodeType": "YulTypedName",
														"src": "1224:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:5",
														"nodeType": "YulTypedName",
														"src": "1235:4:5",
														"type": ""
													}
												],
												"src": "1123:220:5"
											},
											{
												"body": {
													"nativeSrc": "1418:110:5",
													"nodeType": "YulBlock",
													"src": "1418:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:5",
																"nodeType": "YulBlock",
																"src": "1464:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:5"
																			},
																			"nativeSrc": "1466:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:5"
																		},
																		"nativeSrc": "1466:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:5"
																		},
																		"nativeSrc": "1435:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:5"
																},
																"nativeSrc": "1431:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:5"
															},
															"nativeSrc": "1428:52:5",
															"nodeType": "YulIf",
															"src": "1428:52:5"
														},
														{
															"nativeSrc": "1489:33:5",
															"nodeType": "YulAssignment",
															"src": "1489:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:5"
																},
																"nativeSrc": "1499:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:5",
														"nodeType": "YulTypedName",
														"src": "1384:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:5",
														"nodeType": "YulTypedName",
														"src": "1395:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:5",
														"nodeType": "YulTypedName",
														"src": "1407:6:5",
														"type": ""
													}
												],
												"src": "1348:180:5"
											},
											{
												"body": {
													"nativeSrc": "1634:102:5",
													"nodeType": "YulBlock",
													"src": "1634:102:5",
													"statements": [
														{
															"nativeSrc": "1644:26:5",
															"nodeType": "YulAssignment",
															"src": "1644:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:5"
																},
																"nativeSrc": "1652:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:5"
																						},
																						"nativeSrc": "1713:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:5"
																				},
																				"nativeSrc": "1709:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:5"
																		},
																		"nativeSrc": "1697:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:5"
																},
																"nativeSrc": "1679:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:5"
															},
															"nativeSrc": "1679:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:5",
														"nodeType": "YulTypedName",
														"src": "1603:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:5",
														"nodeType": "YulTypedName",
														"src": "1614:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:5",
														"nodeType": "YulTypedName",
														"src": "1625:4:5",
														"type": ""
													}
												],
												"src": "1533:203:5"
											},
											{
												"body": {
													"nativeSrc": "1790:124:5",
													"nodeType": "YulBlock",
													"src": "1790:124:5",
													"statements": [
														{
															"nativeSrc": "1800:29:5",
															"nodeType": "YulAssignment",
															"src": "1800:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:5"
																},
																"nativeSrc": "1809:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:5",
																"nodeType": "YulBlock",
																"src": "1892:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:5"
																			},
																			"nativeSrc": "1894:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:5"
																		},
																		"nativeSrc": "1894:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:5"
																								},
																								"nativeSrc": "1873:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:5"
																						},
																						"nativeSrc": "1869:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:5"
																				},
																				"nativeSrc": "1858:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:5"
																		},
																		"nativeSrc": "1848:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:5"
																},
																"nativeSrc": "1841:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:5"
															},
															"nativeSrc": "1838:70:5",
															"nodeType": "YulIf",
															"src": "1838:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:5",
														"nodeType": "YulTypedName",
														"src": "1780:5:5",
														"type": ""
													}
												],
												"src": "1741:173:5"
											},
											{
												"body": {
													"nativeSrc": "2006:167:5",
													"nodeType": "YulBlock",
													"src": "2006:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:5",
																"nodeType": "YulBlock",
																"src": "2052:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:5"
																			},
																			"nativeSrc": "2054:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:5"
																		},
																		"nativeSrc": "2054:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:5"
																		},
																		"nativeSrc": "2023:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:5"
																},
																"nativeSrc": "2019:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:5"
															},
															"nativeSrc": "2016:52:5",
															"nodeType": "YulIf",
															"src": "2016:52:5"
														},
														{
															"nativeSrc": "2077:39:5",
															"nodeType": "YulAssignment",
															"src": "2077:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:5"
																},
																"nativeSrc": "2087:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:5"
																}
															]
														},
														{
															"nativeSrc": "2125:42:5",
															"nodeType": "YulAssignment",
															"src": "2125:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:5"
																		},
																		"nativeSrc": "2148:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:5"
																},
																"nativeSrc": "2135:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:5",
														"nodeType": "YulTypedName",
														"src": "1964:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:5",
														"nodeType": "YulTypedName",
														"src": "1975:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:5",
														"nodeType": "YulTypedName",
														"src": "1987:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:5",
														"nodeType": "YulTypedName",
														"src": "1995:6:5",
														"type": ""
													}
												],
												"src": "1919:254:5"
											},
											{
												"body": {
													"nativeSrc": "2279:76:5",
													"nodeType": "YulBlock",
													"src": "2279:76:5",
													"statements": [
														{
															"nativeSrc": "2289:26:5",
															"nodeType": "YulAssignment",
															"src": "2289:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2301:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2312:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2297:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:5"
																},
																"nativeSrc": "2297:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2297:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2289:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2331:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2342:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2324:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:5"
																},
																"nativeSrc": "2324:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2324:25:5"
															},
															"nativeSrc": "2324:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2178:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2248:9:5",
														"nodeType": "YulTypedName",
														"src": "2248:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2259:6:5",
														"nodeType": "YulTypedName",
														"src": "2259:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2270:4:5",
														"nodeType": "YulTypedName",
														"src": "2270:4:5",
														"type": ""
													}
												],
												"src": "2178:177:5"
											},
											{
												"body": {
													"nativeSrc": "2464:224:5",
													"nodeType": "YulBlock",
													"src": "2464:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:16:5",
																"nodeType": "YulBlock",
																"src": "2510:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2519:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2522:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2512:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:5"
																			},
																			"nativeSrc": "2512:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:5"
																		},
																		"nativeSrc": "2512:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:5"
																		},
																		"nativeSrc": "2481:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:5"
																},
																"nativeSrc": "2477:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:5"
															},
															"nativeSrc": "2474:52:5",
															"nodeType": "YulIf",
															"src": "2474:52:5"
														},
														{
															"nativeSrc": "2535:39:5",
															"nodeType": "YulAssignment",
															"src": "2535:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2545:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:5"
																},
																"nativeSrc": "2545:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2545:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2535:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:5"
																}
															]
														},
														{
															"nativeSrc": "2583:48:5",
															"nodeType": "YulAssignment",
															"src": "2583:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2616:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2627:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2612:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:5"
																		},
																		"nativeSrc": "2612:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2593:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:5"
																},
																"nativeSrc": "2593:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2593:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2583:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:5"
																}
															]
														},
														{
															"nativeSrc": "2640:42:5",
															"nodeType": "YulAssignment",
															"src": "2640:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2667:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2678:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:5"
																		},
																		"nativeSrc": "2663:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2650:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:5"
																},
																"nativeSrc": "2650:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2650:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2640:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2360:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:5",
														"nodeType": "YulTypedName",
														"src": "2414:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2425:7:5",
														"nodeType": "YulTypedName",
														"src": "2425:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2437:6:5",
														"nodeType": "YulTypedName",
														"src": "2437:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2445:6:5",
														"nodeType": "YulTypedName",
														"src": "2445:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2453:6:5",
														"nodeType": "YulTypedName",
														"src": "2453:6:5",
														"type": ""
													}
												],
												"src": "2360:328:5"
											},
											{
												"body": {
													"nativeSrc": "2763:116:5",
													"nodeType": "YulBlock",
													"src": "2763:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2809:16:5",
																"nodeType": "YulBlock",
																"src": "2809:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2818:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2811:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:5"
																			},
																			"nativeSrc": "2811:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:5"
																		},
																		"nativeSrc": "2811:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2784:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2780:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:5"
																		},
																		"nativeSrc": "2780:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2776:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:5"
																},
																"nativeSrc": "2776:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2776:32:5"
															},
															"nativeSrc": "2773:52:5",
															"nodeType": "YulIf",
															"src": "2773:52:5"
														},
														{
															"nativeSrc": "2834:39:5",
															"nodeType": "YulAssignment",
															"src": "2834:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2863:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2844:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:5"
																},
																"nativeSrc": "2844:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2844:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2834:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2693:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2729:9:5",
														"nodeType": "YulTypedName",
														"src": "2729:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2740:7:5",
														"nodeType": "YulTypedName",
														"src": "2740:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2752:6:5",
														"nodeType": "YulTypedName",
														"src": "2752:6:5",
														"type": ""
													}
												],
												"src": "2693:186:5"
											},
											{
												"body": {
													"nativeSrc": "2968:263:5",
													"nodeType": "YulBlock",
													"src": "2968:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3014:16:5",
																"nodeType": "YulBlock",
																"src": "3014:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3016:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:5"
																			},
																			"nativeSrc": "3016:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:5"
																		},
																		"nativeSrc": "3016:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2989:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2998:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2985:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:5"
																		},
																		"nativeSrc": "2985:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2981:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:5"
																},
																"nativeSrc": "2981:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2981:32:5"
															},
															"nativeSrc": "2978:52:5",
															"nodeType": "YulIf",
															"src": "2978:52:5"
														},
														{
															"nativeSrc": "3039:39:5",
															"nodeType": "YulAssignment",
															"src": "3039:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3049:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:5"
																},
																"nativeSrc": "3049:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3049:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3039:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:5"
																}
															]
														},
														{
															"nativeSrc": "3087:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:5"
																		},
																		"nativeSrc": "3113:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3100:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:5"
																},
																"nativeSrc": "3100:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3100:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3091:5:5",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3185:16:5",
																"nodeType": "YulBlock",
																"src": "3185:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3194:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3187:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:5"
																			},
																			"nativeSrc": "3187:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:5"
																		},
																		"nativeSrc": "3187:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3175:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3168:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:5"
																						},
																						"nativeSrc": "3168:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3161:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:5"
																				},
																				"nativeSrc": "3161:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3151:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:5"
																		},
																		"nativeSrc": "3151:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:5"
																},
																"nativeSrc": "3144:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3144:40:5"
															},
															"nativeSrc": "3141:60:5",
															"nodeType": "YulIf",
															"src": "3141:60:5"
														},
														{
															"nativeSrc": "3210:15:5",
															"nodeType": "YulAssignment",
															"src": "3210:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3220:5:5",
																"nodeType": "YulIdentifier",
																"src": "3220:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3210:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2884:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2926:9:5",
														"nodeType": "YulTypedName",
														"src": "2926:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2937:7:5",
														"nodeType": "YulTypedName",
														"src": "2937:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2949:6:5",
														"nodeType": "YulTypedName",
														"src": "2949:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2957:6:5",
														"nodeType": "YulTypedName",
														"src": "2957:6:5",
														"type": ""
													}
												],
												"src": "2884:347:5"
											},
											{
												"body": {
													"nativeSrc": "3268:95:5",
													"nodeType": "YulBlock",
													"src": "3268:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3292:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3288:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:5"
																		},
																		"nativeSrc": "3288:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:5"
																},
																"nativeSrc": "3278:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3278:31:5"
															},
															"nativeSrc": "3278:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3325:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:5"
																},
																"nativeSrc": "3318:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3318:15:5"
															},
															"nativeSrc": "3318:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3349:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:5"
																},
																"nativeSrc": "3342:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3342:15:5"
															},
															"nativeSrc": "3342:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3236:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:5"
											},
											{
												"body": {
													"nativeSrc": "3498:1008:5",
													"nodeType": "YulBlock",
													"src": "3498:1008:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:16:5",
																"nodeType": "YulBlock",
																"src": "3545:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3547:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:5"
																			},
																			"nativeSrc": "3547:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:5"
																		},
																		"nativeSrc": "3547:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3519:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3528:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3515:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:5"
																		},
																		"nativeSrc": "3515:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3511:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:5"
																},
																"nativeSrc": "3511:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3511:33:5"
															},
															"nativeSrc": "3508:53:5",
															"nodeType": "YulIf",
															"src": "3508:53:5"
														},
														{
															"nativeSrc": "3570:39:5",
															"nodeType": "YulAssignment",
															"src": "3570:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3580:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:5"
																},
																"nativeSrc": "3580:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3580:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3570:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:5"
																}
															]
														},
														{
															"nativeSrc": "3618:48:5",
															"nodeType": "YulAssignment",
															"src": "3618:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3651:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3662:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3647:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:5"
																		},
																		"nativeSrc": "3647:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3628:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:5"
																},
																"nativeSrc": "3628:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3628:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3618:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:5"
																}
															]
														},
														{
															"nativeSrc": "3675:42:5",
															"nodeType": "YulAssignment",
															"src": "3675:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3702:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3713:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3698:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:5"
																		},
																		"nativeSrc": "3698:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:5"
																},
																"nativeSrc": "3685:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3685:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3675:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:5"
																}
															]
														},
														{
															"nativeSrc": "3726:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3757:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3753:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:5"
																		},
																		"nativeSrc": "3753:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3740:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:5"
																},
																"nativeSrc": "3740:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3740:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3730:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3781:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3791:18:5",
																"nodeType": "YulLiteral",
																"src": "3791:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3785:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3836:16:5",
																"nodeType": "YulBlock",
																"src": "3836:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3845:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3848:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3838:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:5"
																			},
																			"nativeSrc": "3838:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:5"
																		},
																		"nativeSrc": "3838:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3824:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3832:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3821:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:5"
																},
																"nativeSrc": "3821:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3821:14:5"
															},
															"nativeSrc": "3818:34:5",
															"nodeType": "YulIf",
															"src": "3818:34:5"
														},
														{
															"nativeSrc": "3861:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3886:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:5"
																},
																"nativeSrc": "3871:22:5",
																"nodeType": "YulFunctionCall",
																"src": "3871:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3865:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3941:16:5",
																"nodeType": "YulBlock",
																"src": "3941:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3953:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3943:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:5"
																			},
																			"nativeSrc": "3943:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:5"
																		},
																		"nativeSrc": "3943:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3920:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3924:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3916:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:5"
																				},
																				"nativeSrc": "3916:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3931:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3912:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:5"
																		},
																		"nativeSrc": "3912:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3905:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:5"
																},
																"nativeSrc": "3905:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3905:35:5"
															},
															"nativeSrc": "3902:55:5",
															"nodeType": "YulIf",
															"src": "3902:55:5"
														},
														{
															"nativeSrc": "3966:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3989:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3976:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:5"
																},
																"nativeSrc": "3976:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3976:16:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3970:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4015:22:5",
																"nodeType": "YulBlock",
																"src": "4015:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4017:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:5"
																			},
																			"nativeSrc": "4017:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:5"
																		},
																		"nativeSrc": "4017:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4007:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4011:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4004:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:5"
																},
																"nativeSrc": "4004:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4004:10:5"
															},
															"nativeSrc": "4001:36:5",
															"nodeType": "YulIf",
															"src": "4001:36:5"
														},
														{
															"nativeSrc": "4046:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4060:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4056:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:5"
																},
																"nativeSrc": "4056:7:5",
																"nodeType": "YulFunctionCall",
																"src": "4056:7:5"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4050:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4072:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4086:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:5"
																},
																"nativeSrc": "4086:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4086:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4076:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4104:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4126:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4150:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4154:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4146:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:5"
																								},
																								"nativeSrc": "4146:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:5"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4161:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4142:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:5"
																						},
																						"nativeSrc": "4142:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4166:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4138:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:5"
																				},
																				"nativeSrc": "4138:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:5"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4171:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4134:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:5"
																		},
																		"nativeSrc": "4134:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4122:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:5"
																},
																"nativeSrc": "4122:53:5",
																"nodeType": "YulFunctionCall",
																"src": "4122:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4108:10:5",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4234:22:5",
																"nodeType": "YulBlock",
																"src": "4234:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4236:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:5"
																			},
																			"nativeSrc": "4236:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:5"
																		},
																		"nativeSrc": "4236:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4193:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4205:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4190:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:5"
																		},
																		"nativeSrc": "4190:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4213:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4225:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4210:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:5"
																		},
																		"nativeSrc": "4210:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4187:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:5"
																},
																"nativeSrc": "4187:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4187:46:5"
															},
															"nativeSrc": "4184:72:5",
															"nodeType": "YulIf",
															"src": "4184:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4272:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4276:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:5"
																},
																"nativeSrc": "4265:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4265:22:5"
															},
															"nativeSrc": "4265:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4303:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4311:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4296:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:5"
																},
																"nativeSrc": "4296:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:5"
															},
															"nativeSrc": "4296:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:5"
														},
														{
															"body": {
																"nativeSrc": "4360:16:5",
																"nodeType": "YulBlock",
																"src": "4360:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4369:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4372:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4362:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:5"
																			},
																			"nativeSrc": "4362:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:5"
																		},
																		"nativeSrc": "4362:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4337:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4341:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4333:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:5"
																				},
																				"nativeSrc": "4333:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4329:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:5"
																		},
																		"nativeSrc": "4329:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4351:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4326:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:5"
																},
																"nativeSrc": "4326:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4326:33:5"
															},
															"nativeSrc": "4323:53:5",
															"nodeType": "YulIf",
															"src": "4323:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4402:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4398:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:5"
																		},
																		"nativeSrc": "4398:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4419:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:5"
																		},
																		"nativeSrc": "4415:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4428:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4385:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:5"
																},
																"nativeSrc": "4385:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4385:46:5"
															},
															"nativeSrc": "4385:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4455:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4463:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:5"
																				},
																				"nativeSrc": "4451:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4468:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:5"
																		},
																		"nativeSrc": "4447:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4473:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4440:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:5"
																},
																"nativeSrc": "4440:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4440:35:5"
															},
															"nativeSrc": "4440:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:5"
														},
														{
															"nativeSrc": "4484:16:5",
															"nodeType": "YulAssignment",
															"src": "4484:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4494:6:5",
																"nodeType": "YulIdentifier",
																"src": "4494:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4484:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3368:1138:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3440:9:5",
														"nodeType": "YulTypedName",
														"src": "3440:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3451:7:5",
														"nodeType": "YulTypedName",
														"src": "3451:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3463:6:5",
														"nodeType": "YulTypedName",
														"src": "3463:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3471:6:5",
														"nodeType": "YulTypedName",
														"src": "3471:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3479:6:5",
														"nodeType": "YulTypedName",
														"src": "3479:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3487:6:5",
														"nodeType": "YulTypedName",
														"src": "3487:6:5",
														"type": ""
													}
												],
												"src": "3368:1138:5"
											},
											{
												"body": {
													"nativeSrc": "4598:173:5",
													"nodeType": "YulBlock",
													"src": "4598:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4644:16:5",
																"nodeType": "YulBlock",
																"src": "4644:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4656:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4646:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:5"
																			},
																			"nativeSrc": "4646:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:5"
																		},
																		"nativeSrc": "4646:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4619:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4628:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4615:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:5"
																		},
																		"nativeSrc": "4615:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4611:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:5"
																},
																"nativeSrc": "4611:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4611:32:5"
															},
															"nativeSrc": "4608:52:5",
															"nodeType": "YulIf",
															"src": "4608:52:5"
														},
														{
															"nativeSrc": "4669:39:5",
															"nodeType": "YulAssignment",
															"src": "4669:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4698:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4679:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:5"
																},
																"nativeSrc": "4679:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4679:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4669:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:5"
																}
															]
														},
														{
															"nativeSrc": "4717:48:5",
															"nodeType": "YulAssignment",
															"src": "4717:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4750:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:5"
																		},
																		"nativeSrc": "4746:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4727:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:5"
																},
																"nativeSrc": "4727:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4511:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:5",
														"nodeType": "YulTypedName",
														"src": "4556:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4567:7:5",
														"nodeType": "YulTypedName",
														"src": "4567:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4579:6:5",
														"nodeType": "YulTypedName",
														"src": "4579:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4587:6:5",
														"nodeType": "YulTypedName",
														"src": "4587:6:5",
														"type": ""
													}
												],
												"src": "4511:260:5"
											},
											{
												"body": {
													"nativeSrc": "4831:325:5",
													"nodeType": "YulBlock",
													"src": "4831:325:5",
													"statements": [
														{
															"nativeSrc": "4841:22:5",
															"nodeType": "YulAssignment",
															"src": "4841:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4858:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4851:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:5"
																},
																"nativeSrc": "4851:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4851:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4841:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:5"
																}
															]
														},
														{
															"nativeSrc": "4872:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4902:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4898:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:5"
																},
																"nativeSrc": "4898:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4898:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4876:18:5",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4949:31:5",
																"nodeType": "YulBlock",
																"src": "4949:31:5",
																"statements": [
																	{
																		"nativeSrc": "4951:27:5",
																		"nodeType": "YulAssignment",
																		"src": "4951:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4965:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4973:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4961:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:5"
																			},
																			"nativeSrc": "4961:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4951:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4922:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:5"
																},
																"nativeSrc": "4922:26:5",
																"nodeType": "YulFunctionCall",
																"src": "4922:26:5"
															},
															"nativeSrc": "4919:61:5",
															"nodeType": "YulIf",
															"src": "4919:61:5"
														},
														{
															"body": {
																"nativeSrc": "5039:111:5",
																"nodeType": "YulBlock",
																"src": "5039:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5060:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5067:3:5",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5072:10:5",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5063:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:5"
																					},
																					"nativeSrc": "5063:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5053:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:5"
																			},
																			"nativeSrc": "5053:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:5"
																		},
																		"nativeSrc": "5053:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5104:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5107:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5097:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:5"
																			},
																			"nativeSrc": "5097:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:5"
																		},
																		"nativeSrc": "5097:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5135:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5125:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:5"
																			},
																			"nativeSrc": "5125:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:5"
																		},
																		"nativeSrc": "5125:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4995:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5026:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5015:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:5"
																		},
																		"nativeSrc": "5015:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4992:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:5"
																},
																"nativeSrc": "4992:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4992:38:5"
															},
															"nativeSrc": "4989:161:5",
															"nodeType": "YulIf",
															"src": "4989:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4776:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4811:4:5",
														"nodeType": "YulTypedName",
														"src": "4811:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4820:6:5",
														"nodeType": "YulTypedName",
														"src": "4820:6:5",
														"type": ""
													}
												],
												"src": "4776:380:5"
											},
											{
												"body": {
													"nativeSrc": "5348:309:5",
													"nodeType": "YulBlock",
													"src": "5348:309:5",
													"statements": [
														{
															"nativeSrc": "5358:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5358:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5378:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5378:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5372:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5372:5:5"
																},
																"nativeSrc": "5372:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5372:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5362:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5362:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5433:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5433:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5441:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5441:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:5"
																		},
																		"nativeSrc": "5429:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5429:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5448:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5448:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5453:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5453:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5394:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "5394:34:5"
																},
																"nativeSrc": "5394:66:5",
																"nodeType": "YulFunctionCall",
																"src": "5394:66:5"
															},
															"nativeSrc": "5394:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "5394:66:5"
														},
														{
															"nativeSrc": "5469:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5469:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5486:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5486:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5491:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5491:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5482:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:5"
																},
																"nativeSrc": "5482:16:5",
																"nodeType": "YulFunctionCall",
																"src": "5482:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "5473:5:5",
																	"nodeType": "YulTypedName",
																	"src": "5473:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5507:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5507:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5529:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5529:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5523:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5523:5:5"
																},
																"nativeSrc": "5523:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5523:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "5511:8:5",
																	"nodeType": "YulTypedName",
																	"src": "5511:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5584:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5584:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5592:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5592:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:5"
																		},
																		"nativeSrc": "5580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5580:17:5"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "5599:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5599:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "5606:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "5606:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5545:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "5545:34:5"
																},
																"nativeSrc": "5545:70:5",
																"nodeType": "YulFunctionCall",
																"src": "5545:70:5"
															},
															"nativeSrc": "5545:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "5545:70:5"
														},
														{
															"nativeSrc": "5624:27:5",
															"nodeType": "YulAssignment",
															"src": "5624:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "5635:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5635:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "5642:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "5642:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5631:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:5"
																},
																"nativeSrc": "5631:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5631:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5624:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5624:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5161:496:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5316:3:5",
														"nodeType": "YulTypedName",
														"src": "5316:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5321:6:5",
														"nodeType": "YulTypedName",
														"src": "5321:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5329:6:5",
														"nodeType": "YulTypedName",
														"src": "5329:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5340:3:5",
														"nodeType": "YulTypedName",
														"src": "5340:3:5",
														"type": ""
													}
												],
												"src": "5161:496:5"
											},
											{
												"body": {
													"nativeSrc": "5865:286:5",
													"nodeType": "YulBlock",
													"src": "5865:286:5",
													"statements": [
														{
															"nativeSrc": "5875:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5875:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5893:3:5",
																				"nodeType": "YulLiteral",
																				"src": "5893:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5898:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5898:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5889:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:5"
																		},
																		"nativeSrc": "5889:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5902:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5902:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5885:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5885:3:5"
																},
																"nativeSrc": "5885:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5885:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5879:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5879:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5935:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5935:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5943:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "5943:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5931:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:5"
																		},
																		"nativeSrc": "5931:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5913:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:5"
																},
																"nativeSrc": "5913:34:5",
																"nodeType": "YulFunctionCall",
																"src": "5913:34:5"
															},
															"nativeSrc": "5913:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "5913:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5967:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5978:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5978:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5963:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:5"
																		},
																		"nativeSrc": "5963:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5963:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5987:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5987:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5995:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "5995:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5983:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5983:3:5"
																		},
																		"nativeSrc": "5983:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5983:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:5"
																},
																"nativeSrc": "5956:43:5",
																"nodeType": "YulFunctionCall",
																"src": "5956:43:5"
															},
															"nativeSrc": "5956:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "5956:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:5"
																		},
																		"nativeSrc": "6015:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6035:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6035:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6008:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:5"
																},
																"nativeSrc": "6008:34:5",
																"nodeType": "YulFunctionCall",
																"src": "6008:34:5"
															},
															"nativeSrc": "6008:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "6008:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6062:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6073:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6058:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:5"
																		},
																		"nativeSrc": "6058:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6078:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6078:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6051:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:5"
																},
																"nativeSrc": "6051:31:5",
																"nodeType": "YulFunctionCall",
																"src": "6051:31:5"
															},
															"nativeSrc": "6051:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "6051:31:5"
														},
														{
															"nativeSrc": "6091:54:5",
															"nodeType": "YulAssignment",
															"src": "6091:54:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6117:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6117:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6129:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6129:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6140:3:5",
																				"nodeType": "YulLiteral",
																				"src": "6140:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6125:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6125:3:5"
																		},
																		"nativeSrc": "6125:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6125:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6099:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:5"
																},
																"nativeSrc": "6099:46:5",
																"nodeType": "YulFunctionCall",
																"src": "6099:46:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6091:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6091:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5662:489:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5810:9:5",
														"nodeType": "YulTypedName",
														"src": "5810:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5821:6:5",
														"nodeType": "YulTypedName",
														"src": "5821:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5829:6:5",
														"nodeType": "YulTypedName",
														"src": "5829:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5837:6:5",
														"nodeType": "YulTypedName",
														"src": "5837:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5845:6:5",
														"nodeType": "YulTypedName",
														"src": "5845:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5856:4:5",
														"nodeType": "YulTypedName",
														"src": "5856:4:5",
														"type": ""
													}
												],
												"src": "5662:489:5"
											},
											{
												"body": {
													"nativeSrc": "6236:169:5",
													"nodeType": "YulBlock",
													"src": "6236:169:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6282:16:5",
																"nodeType": "YulBlock",
																"src": "6282:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6291:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6291:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6294:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6284:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6284:6:5"
																			},
																			"nativeSrc": "6284:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6284:12:5"
																		},
																		"nativeSrc": "6284:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6284:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6257:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6257:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6266:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6253:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:5"
																		},
																		"nativeSrc": "6253:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6278:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6278:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6249:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:5"
																},
																"nativeSrc": "6249:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6249:32:5"
															},
															"nativeSrc": "6246:52:5",
															"nodeType": "YulIf",
															"src": "6246:52:5"
														},
														{
															"nativeSrc": "6307:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6307:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6326:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6326:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6320:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6320:5:5"
																},
																"nativeSrc": "6320:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6320:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6311:5:5",
																	"nodeType": "YulTypedName",
																	"src": "6311:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6369:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6369:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "6345:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6345:23:5"
																},
																"nativeSrc": "6345:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6345:30:5"
															},
															"nativeSrc": "6345:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6345:30:5"
														},
														{
															"nativeSrc": "6384:15:5",
															"nodeType": "YulAssignment",
															"src": "6384:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "6394:5:5",
																"nodeType": "YulIdentifier",
																"src": "6394:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6384:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6384:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "6156:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6202:9:5",
														"nodeType": "YulTypedName",
														"src": "6202:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6213:7:5",
														"nodeType": "YulTypedName",
														"src": "6213:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6225:6:5",
														"nodeType": "YulTypedName",
														"src": "6225:6:5",
														"type": ""
													}
												],
												"src": "6156:249:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c80636352211e1161007c578063a22cb46511610057578063a22cb46514610217578063b88d4fde14610236578063c87b56dd14610249578063e985e9c514610268575f80fd5b80636352211e146101c557806370a08231146101e457806395d89b4114610203575f80fd5b8063095ea7b3116100b7578063095ea7b31461016957806318160ddd1461017e57806323b872dd1461019f57806342842e0e146101b2575f80fd5b806301ffc9a7146100dd57806306fdde0314610111578063081812fc14610132575b5f80fd5b3480156100e8575f80fd5b506100fc6100f736600461098e565b6102af565b60405190151581526020015b60405180910390f35b34801561011c575f80fd5b50610125610300565b60405161010891906109f6565b34801561013d575f80fd5b5061015161014c366004610a08565b610390565b6040516001600160a01b039091168152602001610108565b61017c610177366004610a3a565b6103d2565b005b348015610189575f80fd5b506001545f54035b604051908152602001610108565b61017c6101ad366004610a62565b610470565b61017c6101c0366004610a62565b6105ff565b3480156101d0575f80fd5b506101516101df366004610a08565b61061e565b3480156101ef575f80fd5b506101916101fe366004610a9b565b610628565b34801561020e575f80fd5b50610125610675565b348015610222575f80fd5b5061017c610231366004610ab4565b610684565b61017c610244366004610b01565b6106ef565b348015610254575f80fd5b50610125610263366004610a08565b610739565b348015610273575f80fd5b506100fc610282366004610bd6565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b5f6301ffc9a760e01b6001600160e01b0319831614806102df57506380ac58cd60e01b6001600160e01b03198316145b806102fa5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461030f90610c07565b80601f016020809104026020016040519081016040528092919081815260200182805461033b90610c07565b80156103865780601f1061035d57610100808354040283529160200191610386565b820191905f5260205f20905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b5f61039a826107c6565b6103b7576040516333d1c03960e21b815260040160405180910390fd5b505f908152600660205260409020546001600160a01b031690565b5f6103dc8261061e565b9050336001600160a01b03821614610415576103f88133610282565b610415576040516367d9dca160e11b815260040160405180910390fd5b5f8281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b5f61047a826107eb565b9050836001600160a01b0316816001600160a01b0316146104ad5760405162a1148160e81b815260040160405180910390fd5b5f8281526006602052604090208054338082146001600160a01b038816909114176104f9576104dc8633610282565b6104f957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661052057604051633a954ecd60e21b815260040160405180910390fd5b801561052a575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b841690036105b657600184015f8181526004602052604081205490036105b4575f5481146105b4575f8181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61061983838360405180602001604052805f8152506106ef565b505050565b5f6102fa826107eb565b5f6001600160a01b038216610650576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b60606003805461030f90610c07565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106fa848484610470565b6001600160a01b0383163b15610733576107168484848461084c565b610733576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610744826107c6565b61076157604051630a14c4b560e41b815260040160405180910390fd5b5f61077660408051602081019091525f815290565b905080515f036107945760405180602001604052805f8152506107bf565b8061079e84610933565b6040516020016107af929190610c3f565b6040516020818303038152906040525b9392505050565b5f8054821080156102fa5750505f90815260046020526040902054600160e01b161590565b5f815f54811015610833575f8181526004602052604081205490600160e01b82169003610831575b805f036107bf57505f19015f81815260046020526040902054610813565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290610880903390899088908890600401610c6d565b6020604051808303815f875af19250505080156108ba575060408051601f3d908101601f191682019092526108b791810190610ca9565b60015b610916573d8080156108e7576040519150601f19603f3d011682016040523d82523d5f602084013e6108ec565b606091505b5080515f0361090e576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a90048061094c5750819003601f19909101908152919050565b6001600160e01b03198116811461098b575f80fd5b50565b5f6020828403121561099e575f80fd5b81356107bf81610976565b5f5b838110156109c35781810151838201526020016109ab565b50505f910152565b5f81518084526109e28160208601602086016109a9565b601f01601f19169290920160200192915050565b602081525f6107bf60208301846109cb565b5f60208284031215610a18575f80fd5b5035919050565b80356001600160a01b0381168114610a35575f80fd5b919050565b5f8060408385031215610a4b575f80fd5b610a5483610a1f565b946020939093013593505050565b5f805f60608486031215610a74575f80fd5b610a7d84610a1f565b9250610a8b60208501610a1f565b9150604084013590509250925092565b5f60208284031215610aab575f80fd5b6107bf82610a1f565b5f8060408385031215610ac5575f80fd5b610ace83610a1f565b915060208301358015158114610ae2575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610b14575f80fd5b610b1d85610a1f565b9350610b2b60208601610a1f565b925060408501359150606085013567ffffffffffffffff80821115610b4e575f80fd5b818701915087601f830112610b61575f80fd5b813581811115610b7357610b73610aed565b604051601f8201601f19908116603f01168101908382118183101715610b9b57610b9b610aed565b816040528281528a6020848701011115610bb3575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215610be7575f80fd5b610bf083610a1f565b9150610bfe60208401610a1f565b90509250929050565b600181811c90821680610c1b57607f821691505b602082108103610c3957634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8351610c508184602088016109a9565b835190830190610c648183602088016109a9565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90610c9f908301846109cb565b9695505050505050565b5f60208284031215610cb9575f80fd5b81516107bf8161097656fea264697066735822122034bfa0ad76c54fc9d0cd15467f79b1c046339b5ef6210f08b98787193cce626964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x98E JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x675 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2DF JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x2FA JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0xC07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0xC07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x39A DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3DC DUP3 PUSH2 0x61E JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x415 JUMPI PUSH2 0x3F8 DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47A DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4F9 JUMPI PUSH2 0x4DC DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x52A JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x5B6 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x5B4 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x5B4 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FA DUP3 PUSH2 0x7EB JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0xC07 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6FA DUP5 DUP5 DUP5 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x733 JUMPI PUSH2 0x716 DUP5 DUP5 DUP5 DUP5 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x744 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x776 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BF JUMP JUMPDEST DUP1 PUSH2 0x79E DUP5 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AF SWAP3 SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x2FA JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x833 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x831 JUMPI JUMPDEST DUP1 PUSH0 SUB PUSH2 0x7BF JUMPI POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x813 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x880 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8BA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8B7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x916 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x94C JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x98B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BF DUP2 PUSH2 0x976 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9AB JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA35 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA54 DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA74 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7D DUP5 PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP PUSH2 0xA8B PUSH1 0x20 DUP6 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BF DUP3 PUSH2 0xA1F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xACE DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP6 PUSH2 0xA1F JUMP JUMPDEST SWAP4 POP PUSH2 0xB2B PUSH1 0x20 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB4E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB61 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB73 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0xAED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBF0 DUP4 PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE PUSH1 0x20 DUP5 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC1B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xC50 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC64 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xC9F SWAP1 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BF DUP2 PUSH2 0x976 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xBF LOG0 0xAD PUSH23 0xC54FC9D0CD15467F79B1C046339B5EF6210F08B9878719 EXTCODECOPY 0xCE PUSH3 0x696473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "941:41507:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9421:639;;;;;;;;;;-1:-1:-1;9421:639:1;;;;;:::i;:::-;;:::i;:::-;;;565:14:5;;558:22;540:41;;528:2;513:18;9421:639:1;;;;;;;;10323:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16814:218::-;;;;;;;;;;-1:-1:-1;16814:218:1;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:5;;;1679:51;;1667:2;1652:18;16814:218:1;1533:203:5;16247:408:1;;;;;;:::i;:::-;;:::i;:::-;;6074:323;;;;;;;;;;-1:-1:-1;6348:12:1;;6135:7;6332:13;:28;6074:323;;;2324:25:5;;;2312:2;2297:18;6074:323:1;2178:177:5;20453:2825:1;;;;;;:::i;:::-;;:::i;23374:193::-;;;;;;:::i;:::-;;:::i;11716:152::-;;;;;;;;;;-1:-1:-1;11716:152:1;;;;;:::i;:::-;;:::i;7258:233::-;;;;;;;;;;-1:-1:-1;7258:233:1;;;;;:::i;:::-;;:::i;10499:104::-;;;;;;;;;;;;;:::i;17372:234::-;;;;;;;;;;-1:-1:-1;17372:234:1;;;;;:::i;:::-;;:::i;24165:407::-;;;;;;:::i;:::-;;:::i;10709:318::-;;;;;;;;;;-1:-1:-1;10709:318:1;;;;;:::i;:::-;;:::i;17763:164::-;;;;;;;;;;-1:-1:-1;17763:164:1;;;;;:::i;:::-;-1:-1:-1;;;;;17884:25:1;;;17860:4;17884:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17763:164;9421:639;9506:4;-1:-1:-1;;;;;;;;;9830:25:1;;;;:102;;-1:-1:-1;;;;;;;;;;9907:25:1;;;9830:102;:179;;;-1:-1:-1;;;;;;;;;;9984:25:1;;;9830:179;9810:199;9421:639;-1:-1:-1;;9421:639:1:o;10323:100::-;10377:13;10410:5;10403:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10323:100;:::o;16814:218::-;16890:7;16915:16;16923:7;16915;:16::i;:::-;16910:64;;16940:34;;-1:-1:-1;;;16940:34:1;;;;;;;;;;;16910:64;-1:-1:-1;16994:24:1;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16994:30:1;;16814:218::o;16247:408::-;16336:13;16352:16;16360:7;16352;:16::i;:::-;16336:32;-1:-1:-1;40580:10:1;-1:-1:-1;;;;;16385:28:1;;;16381:175;;16433:44;16450:5;40580:10;17763:164;:::i;16433:44::-;16428:128;;16505:35;;-1:-1:-1;;;16505:35:1;;;;;;;;;;;16428:128;16568:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16568:35:1;-1:-1:-1;;;;;16568:35:1;;;;;;;;;16619:28;;16568:24;;16619:28;;;;;;;16325:330;16247:408;;:::o;20453:2825::-;20595:27;20625;20644:7;20625:18;:27::i;:::-;20595:57;;20710:4;-1:-1:-1;;;;;20669:45:1;20685:19;-1:-1:-1;;;;;20669:45:1;;20665:86;;20723:28;;-1:-1:-1;;;20723:28:1;;;;;;;;;;;20665:86;20765:27;19561:24;;;:15;:24;;;;;19789:26;;40580:10;19186:30;;;-1:-1:-1;;;;;18879:28:1;;19164:20;;;19161:56;20951:180;;21044:43;21061:4;40580:10;17763:164;:::i;21044:43::-;21039:92;;21096:35;;-1:-1:-1;;;21096:35:1;;;;;;;;;;;21039:92;-1:-1:-1;;;;;21148:16:1;;21144:52;;21173:23;;-1:-1:-1;;;21173:23:1;;;;;;;;;;;21144:52;21345:15;21342:160;;;21485:1;21464:19;21457:30;21342:160;-1:-1:-1;;;;;21882:24:1;;;;;;;:18;:24;;;;;;21880:26;;-1:-1:-1;;21880:26:1;;;21951:22;;;;;;;;;21949:24;;-1:-1:-1;21949:24:1;;;15105:11;15080:23;15076:41;15063:63;-1:-1:-1;;;15063:63:1;22244:26;;;;:17;:26;;;;;:175;;;;-1:-1:-1;;;22539:47:1;;:52;;22535:627;;22644:1;22634:11;;22612:19;22767:30;;;:17;:30;;;;;;:35;;22763:384;;22905:13;;22890:11;:28;22886:242;;23052:30;;;;:17;:30;;;;;:52;;;22886:242;22593:569;22535:627;23209:7;23205:2;-1:-1:-1;;;;;23190:27:1;23199:4;-1:-1:-1;;;;;23190:27:1;;;;;;;;;;;20584:2694;;;20453:2825;;;:::o;23374:193::-;23520:39;23537:4;23543:2;23547:7;23520:39;;;;;;;;;;;;:16;:39::i;:::-;23374:193;;;:::o;11716:152::-;11788:7;11831:27;11850:7;11831:18;:27::i;7258:233::-;7330:7;-1:-1:-1;;;;;7354:19:1;;7350:60;;7382:28;;-1:-1:-1;;;7382:28:1;;;;;;;;;;;7350:60;-1:-1:-1;;;;;;7428:25:1;;;;;:18;:25;;;;;;1417:13;7428:55;;7258:233::o;10499:104::-;10555:13;10588:7;10581:14;;;;;:::i;17372:234::-;40580:10;17467:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17467:49:1;;;;;;;;;;;;:60;;-1:-1:-1;;17467:60:1;;;;;;;;;;17543:55;;540:41:5;;;17467:49:1;;40580:10;17543:55;;513:18:5;17543:55:1;;;;;;;17372:234;;:::o;24165:407::-;24340:31;24353:4;24359:2;24363:7;24340:12;:31::i;:::-;-1:-1:-1;;;;;24386:14:1;;;:19;24382:183;;24425:56;24456:4;24462:2;24466:7;24475:5;24425:30;:56::i;:::-;24420:145;;24509:40;;-1:-1:-1;;;24509:40:1;;;;;;;;;;;24420:145;24165:407;;;;:::o;10709:318::-;10782:13;10813:16;10821:7;10813;:16::i;:::-;10808:59;;10838:29;;-1:-1:-1;;;10838:29:1;;;;;;;;;;;10808:59;10880:21;10904:10;11356:9;;;;;;;;;-1:-1:-1;11356:9:1;;;11279:94;10904:10;10880:34;;10938:7;10932:21;10957:1;10932:26;:87;;;;;;;;;;;;;;;;;10985:7;10994:18;11004:7;10994:9;:18::i;:::-;10968:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10932:87;10925:94;10709:318;-1:-1:-1;;;10709:318:1:o;18185:282::-;18250:4;18340:13;;18330:7;:23;18287:153;;;;-1:-1:-1;;18391:26:1;;;;:17;:26;;;;;;-1:-1:-1;;;18391:44:1;:49;;18185:282::o;12871:1275::-;12938:7;12973;13075:13;;13068:4;:20;13064:1015;;;13113:14;13130:23;;;:17;:23;;;;;;;-1:-1:-1;;;13219:24:1;;:29;;13215:845;;13884:113;13891:6;13901:1;13891:11;13884:113;;-1:-1:-1;;;13962:6:1;13944:25;;;;:17;:25;;;;;;13884:113;;13215:845;13090:989;13064:1015;14107:31;;-1:-1:-1;;;14107:31:1;;;;;;;;;;;26656:716;26840:88;;-1:-1:-1;;;26840:88:1;;26819:4;;-1:-1:-1;;;;;26840:45:1;;;;;:88;;40580:10;;26907:4;;26913:7;;26922:5;;26840:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26840:88:1;;;;;;;;-1:-1:-1;;26840:88:1;;;;;;;;;;;;:::i;:::-;;;26836:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27123:6;:13;27140:1;27123:18;27119:235;;27169:40;;-1:-1:-1;;;27169:40:1;;;;;;;;;;;27119:235;27312:6;27306:13;27297:6;27293:2;27289:15;27282:38;26836:529;-1:-1:-1;;;;;;26999:64:1;-1:-1:-1;;;26999:64:1;;-1:-1:-1;26656:716:1;;;;;;:::o;40700:1745::-;40765:17;41199:4;41192;41186:11;41182:22;41291:1;41285:4;41278:15;41366:4;41363:1;41359:12;41352:19;;;41448:1;41443:3;41436:14;41552:3;41791:5;41773:428;41839:1;41834:3;41830:11;41823:18;;42010:2;42004:4;42000:13;41996:2;41992:22;41987:3;41979:36;42104:2;42094:13;;42161:25;41773:428;42161:25;-1:-1:-1;42231:13:1;;;-1:-1:-1;;42346:14:1;;;42408:19;;;42346:14;40700:1745;-1:-1:-1;40700:1745:1:o;14:131:5:-;-1:-1:-1;;;;;;88:32:5;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:5;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:5;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:5:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:5;;1348:180;-1:-1:-1;1348:180:5:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:5;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:5:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:5;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5161:496::-;5340:3;5378:6;5372:13;5394:66;5453:6;5448:3;5441:4;5433:6;5429:17;5394:66;:::i;:::-;5523:13;;5482:16;;;;5545:70;5523:13;5482:16;5592:4;5580:17;;5545:70;:::i;:::-;5631:20;;5161:496;-1:-1:-1;;;;5161:496:5:o;5662:489::-;-1:-1:-1;;;;;5931:15:5;;;5913:34;;5983:15;;5978:2;5963:18;;5956:43;6030:2;6015:18;;6008:34;;;6078:3;6073:2;6058:18;;6051:31;;;5856:4;;6099:46;;6125:19;;6117:6;6099:46;:::i;:::-;6091:54;5662:489;-1:-1:-1;;;;;;5662:489:5:o;6156:249::-;6225:6;6278:2;6266:9;6257:7;6253:23;6249:32;6246:52;;;6294:1;6291;6284:12;6246:52;6326:9;6320:16;6345:30;6369:5;6345:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "664400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2636",
								"getApproved(uint256)": "6919",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26604",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4430",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4335",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5096,
									"end": 5254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5096,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5168,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5171,
									"end": 5176,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5163,
									"end": 5176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5163,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5187,
									"end": 5194,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5197,
									"end": 5204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5194,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5187,
									"end": 5204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5187,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5646,
									"end": 5653,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5215,
									"end": 5246,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5215,
									"end": 5246,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 42448,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034bfa0ad76c54fc9d0cd15467f79b1c046339b5ef6210f08b98787193cce626964736f6c63430008160033",
									".code": [
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 42448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6360,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6348,
											"end": 6360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11716,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11716,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10499,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17860,
											"end": 17864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17902,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17909,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9830,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9984,
											"end": 10009,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9830,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 10009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 10060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 10060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10390,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10403,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10403,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16814,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16890,
											"end": 16897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16923,
											"end": 16930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 16915,
											"end": 16931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16915,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16910,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17009,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17018,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 17032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16360,
											"end": 16367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 16352,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16352,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16381,
											"end": 16556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 16450,
											"end": 16455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 16433,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16583,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16603,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16647,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20644,
											"end": 20651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20625,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 20625,
											"end": 20652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20625,
											"end": 20652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20710,
											"end": 20714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20685,
											"end": 20704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20669,
											"end": 20714,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20665,
											"end": 20751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19216,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18879,
											"end": 18907,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18879,
											"end": 18907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19161,
											"end": 19217,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 21061,
											"end": 21065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17763,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 21044,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21131,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 21039,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21148,
											"end": 21164,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 21144,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21345,
											"end": 21360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21485,
											"end": 21486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21464,
											"end": 21483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21457,
											"end": 21487,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21342,
											"end": 21502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21900,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21906,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 21906,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21951,
											"end": 21973,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21949,
											"end": 21973,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15105,
											"end": 15116,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15076,
											"end": 15117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15063,
											"end": 15126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22261,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22419,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22539,
											"end": 22586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22591,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22644,
											"end": 22645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22634,
											"end": 22645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22634,
											"end": 22645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22784,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22767,
											"end": 22802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22763,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22763,
											"end": 23147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22905,
											"end": 22918,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22890,
											"end": 22901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22890,
											"end": 22918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23069,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23104,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22886,
											"end": 23128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22593,
											"end": 23162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22535,
											"end": 23162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23209,
											"end": 23216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23205,
											"end": 23207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23199,
											"end": 23203,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23190,
											"end": 23217,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 23278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23537,
											"end": 23541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23543,
											"end": 23545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23547,
											"end": 23554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 23520,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23520,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23374,
											"end": 23567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11716,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11831,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11850,
											"end": 11857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11831,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7258,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10499,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10581,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17485,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17598,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24353,
											"end": 24357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24359,
											"end": 24361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24363,
											"end": 24370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 24340,
											"end": 24371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24340,
											"end": 24371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 24386,
											"end": 24405,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24382,
											"end": 24565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24456,
											"end": 24460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24462,
											"end": 24464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24466,
											"end": 24473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24475,
											"end": 24480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24425,
											"end": 24481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24425,
											"end": 24481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24420,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10821,
											"end": 10828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10813,
											"end": 10829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10808,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10904,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10953,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 10992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 11004,
											"end": 11011,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10994,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10968,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10932,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 11019,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 11027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10709,
											"end": 11027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18467,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 18185,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18340,
											"end": 18353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18340,
											"end": 18353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18353,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 18287,
											"end": 18440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18408,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12871,
											"end": 14146,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12871,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12973,
											"end": 12980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13088,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13113,
											"end": 13127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13219,
											"end": 13243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13962,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13961,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13884,
											"end": 13997,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13215,
											"end": 14060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13090,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13064,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26840,
											"end": 26885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 40580,
											"end": 40590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26911,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26913,
											"end": 26920,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26913,
											"end": 26920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 26840,
											"end": 26928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 26840,
											"end": 26928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26840,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27140,
											"end": 27141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27123,
											"end": 27141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27209,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 27119,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27312,
											"end": 27318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27306,
											"end": 27319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27297,
											"end": 27303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27293,
											"end": 27295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27289,
											"end": 27304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27320,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 26836,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26999,
											"end": 27063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26656,
											"end": 27372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40765,
											"end": 40782,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 41199,
											"end": 41203,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 41192,
											"end": 41196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41186,
											"end": 41197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 41182,
											"end": 41204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41291,
											"end": 41292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41285,
											"end": 41289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41278,
											"end": 41293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41366,
											"end": 41370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41363,
											"end": 41364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41359,
											"end": 41371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41448,
											"end": 41449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 41443,
											"end": 41446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41436,
											"end": 41450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41552,
											"end": 41555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41791,
											"end": 41796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41839,
											"end": 41840,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 41834,
											"end": 41837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41830,
											"end": 41841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41823,
											"end": 41841,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 41823,
											"end": 41841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 42010,
											"end": 42012,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 42004,
											"end": 42008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42000,
											"end": 42013,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 41996,
											"end": 41998,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 41992,
											"end": 42014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41987,
											"end": 41990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41979,
											"end": 42015,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 42104,
											"end": 42106,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 42094,
											"end": 42107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42094,
											"end": 42107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 42161,
											"end": 42186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41773,
											"end": 42201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 42161,
											"end": 42186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42231,
											"end": 42244,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42408,
											"end": 42427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 42346,
											"end": 42360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40700,
											"end": 42445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40700,
											"end": 42445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5394,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5545,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5631,
											"end": 5651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5631,
											"end": 5651,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5161,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5913,
											"end": 5947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5913,
											"end": 5947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5956,
											"end": 5999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6099,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6405,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6156,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6276,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6296,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6336,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6369,
											"end": 6374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6345,
											"end": 6375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/BatchNFTs.sol",
								"contracts/contracts/ERC721A.sol",
								"contracts/contracts/Ownable.sol",
								"contracts/contracts/interfaces/IERC721A.sol",
								"contracts/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/ERC721A.sol\":{\"keccak256\":\"0x0f3f87afe72ba7d10710ec25f0c7de3d5ebc9ec28d42593e2515d7e46693a8e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f25df3eafe804bfbcbdb8e1004c977cb071cf2f563b1d56a0829b1a163e878\",\"dweb:/ipfs/QmWNETMmMeqHznZmaRTWhkD4yqZQoTfegZCQuZGP8Q6SpH\"]},\"contracts/contracts/interfaces/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 252,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 256,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 258,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 262,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 266,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 271,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)184_storage)"
							},
							{
								"astId": 277,
								"contract": "contracts/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)184_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)184_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)184_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 183,
										"contract": "contracts/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/ERC721A.sol\":{\"keccak256\":\"0x0f3f87afe72ba7d10710ec25f0c7de3d5ebc9ec28d42593e2515d7e46693a8e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f25df3eafe804bfbcbdb8e1004c977cb071cf2f563b1d56a0829b1a163e878\",\"dweb:/ipfs/QmWNETMmMeqHznZmaRTWhkD4yqZQoTfegZCQuZGP8Q6SpH\"]},\"contracts/contracts/interfaces/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Ownable.sol\":{\"keccak256\":\"0x1df3a9629c0fe0cf72b9a895c9be262b4022f7fb1ed812cc473ec3c667811e8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c5c01c25956c017c6620bd8b4abf05f98977df111337070de3a088e1a26650e\",\"dweb:/ipfs/QmPBQ8Jru422FteWbgQUdJwhKpK6WfUjNuTZo7ZDtuA5wW\"]},\"contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1791,
								"contract": "contracts/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/interfaces/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/BatchNFTs.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/BatchNFTs.sol",
					"exportedSymbols": {
						"BatchNFTs": [
							160
						],
						"Context": [
							2124
						],
						"ERC721A": [
							1783
						],
						"ERC721A__IERC721Receiver": [
							178
						],
						"IERC721A": [
							2102
						],
						"Ownable": [
							1896
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/contracts/ERC721A.sol",
							"file": "./ERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 1784,
							"src": "61:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 1897,
							"src": "86:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Ownable",
										"nameLocations": [
											"135:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1896,
										"src": "135:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "135:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "ERC721A",
										"nameLocations": [
											"144:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1783,
										"src": "144:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "144:7:0"
								}
							],
							"canonicalName": "BatchNFTs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								1783,
								2102,
								1896,
								2124
							],
							"name": "BatchNFTs",
							"nameLocation": "122:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 10,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "185:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "161:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "198:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "60f1f878",
									"id": 13,
									"mutability": "constant",
									"name": "MAX_SUPPLY_PER_USER",
									"nameLocation": "232:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "208:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "208:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "254:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "833b9499",
									"id": 16,
									"mutability": "constant",
									"name": "PRICE_PER_TOKEN",
									"nameLocation": "286:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "262:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "262:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "304:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ddaa26ad",
									"id": 18,
									"mutability": "immutable",
									"name": "START_TIME",
									"nameLocation": "343:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "318:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e4831d3",
									"id": 20,
									"mutability": "mutable",
									"name": "mintPaused",
									"nameLocation": "372:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "360:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 19,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "360:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_baseTokenURI",
									"nameLocation": "405:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "390:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "390:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "475:77:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "START_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "486:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 30,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "499:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "499:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "486:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "486:28:0"
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "mintPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "525:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "539:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "525:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "525:19:0"
											}
										]
									},
									"id": 39,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4552433732314120546f6b656e",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "449:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9d4c9d1a64a6393b28fb45720be4b145c378daf2870d4970716054c432e11458",
														"typeString": "literal_string \"ERC721A Token\""
													},
													"value": "ERC721A Token"
												},
												{
													"hexValue": "3732314154",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1c8686a67cfa3d28f0823912e5b67b7872cb3e90b1c5cd3f38c070736ec323d2",
														"typeString": "literal_string \"721AT\""
													},
													"value": "721AT"
												}
											],
											"id": 27,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 24,
												"name": "ERC721A",
												"nameLocations": [
													"441:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1783,
												"src": "441:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "441:33:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:0"
									},
									"scope": 160,
									"src": "427:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "609:434:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "628:11:0",
															"subExpression": {
																"id": 45,
																"name": "mintPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "629:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e7420697320706175736564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5399184c2076f566882f1fc75b9dfe0bde0db13e3df52a00fb810ba4306e75c",
																"typeString": "literal_string \"Mint is paused\""
															},
															"value": "Mint is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5399184c2076f566882f1fc75b9dfe0bde0db13e3df52a00fb810ba4306e75c",
																"typeString": "literal_string \"Mint is paused\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "620:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "620:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 51,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "677:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "683:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "677:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 53,
																"name": "START_TIME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "696:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "677:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206e6f742073746172746564",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "708:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a36ce2fe11e7a22ec094f53a6a94ebaa3066bd42273542ea31d71f057a6ad24",
																"typeString": "literal_string \"Sale not started\""
															},
															"value": "Sale not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a36ce2fe11e7a22ec094f53a6a94ebaa3066bd42273542ea31d71f057a6ad24",
																"typeString": "literal_string \"Sale not started\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "669:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "669:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 59,
																		"name": "_totalMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "746:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "746:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 61,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "763:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "746:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 63,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820537570706c7920486974",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "787:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f733e8a31024a32c5aeba2a6e8f3847e85b35d131aafeebef04e5956fc9af21",
																"typeString": "literal_string \"Max Supply Hit\""
															},
															"value": "Max Supply Hit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f733e8a31024a32c5aeba2a6e8f3847e85b35d131aafeebef04e5956fc9af21",
																"typeString": "literal_string \"Max Supply Hit\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "738:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 70,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "837:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 71,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "841:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "837:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 69,
																		"name": "_numberMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "823:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "823:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 73,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "851:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "823:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 75,
																"name": "MAX_SUPPLY_PER_USER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "863:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "823:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e742070657220757365722052656163686564",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "884:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e271d0129e8e12cda0aaa8784505b29d15f9f3d3e0740882335d922c3502e98",
																"typeString": "literal_string \"Max Mint per user Reached\""
															},
															"value": "Max Mint per user Reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e271d0129e8e12cda0aaa8784505b29d15f9f3d3e0740882335d922c3502e98",
																"typeString": "literal_string \"Max Mint per user Reached\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "815:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "815:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 81,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "931:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "935:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "931:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 83,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "944:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 84,
																	"name": "PRICE_PER_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "955:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "944:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "931:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742046756e6473",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															},
															"value": "Insufficient Funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "923:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "923:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 91,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1014:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1018:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1014:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 93,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1026:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1493,
															1508
														],
														"referencedDeclaration": 1508,
														"src": "1004:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1004:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1004:31:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "569:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "574:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:18:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:0"
									},
									"scope": 160,
									"src": "560:483:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1090:301:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1109:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1101:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 106,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1127:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BatchNFTs_$160",
																	"typeString": "contract BatchNFTs"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BatchNFTs_$160",
																	"typeString": "contract BatchNFTs"
																}
															],
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 104,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1119:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1119:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1133:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1119:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1101:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 112,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1221:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1225:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1221:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1213:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1213:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1213:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1213:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1213:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1213:37:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 99,
												"name": "onlyOwner",
												"nameLocations": [
													"1080:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1815,
												"src": "1080:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1080:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "1060:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:0:0"
									},
									"scope": 160,
									"src": "1051:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1463:42:0",
										"statements": [
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1474:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 128,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "1474:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1474:23:0"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 124,
												"name": "onlyOwner",
												"nameLocations": [
													"1453:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1815,
												"src": "1453:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1453:9:0"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1408:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1419:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 121,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:25:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:0:0"
									},
									"scope": 160,
									"src": "1399:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										565
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1580:96:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f697066732e696f2f697066732f516d50713538465456615a756b694236713853587a31634d694d4545506142737775796b544e6b66685775444e7a2f",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1598:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7eb0451a604c4dc108fec9b71a0e76d6307ea82c680c4246676e81f6657eff4",
														"typeString": "literal_string \"https://ipfs.io/ipfs/QmPq58FTVaZukiB6q8SXz1cMiMEEPaBswuykTNkfhWuDNz/\""
													},
													"value": "https://ipfs.io/ipfs/QmPq58FTVaZukiB6q8SXz1cMiMEEPaBswuykTNkfhWuDNz/"
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "1591:77:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1522:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1547:8:0"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1565:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:15:0"
									},
									"scope": 160,
									"src": "1513:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1736:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1755:11:0",
															"subExpression": {
																"id": 149,
																"name": "mintPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1756:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374207061757365642e",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1768:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52fc37eea2c0d3c3f0ae18dbe0c776a45a7fea05024a6d448bf5c234ad2119f6",
																"typeString": "literal_string \"Contract paused.\""
															},
															"value": "Contract paused."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52fc37eea2c0d3c3f0ae18dbe0c776a45a7fea05024a6d448bf5c234ad2119f6",
																"typeString": "literal_string \"Contract paused.\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1747:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1747:40:0"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "mintPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1798:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1798:20:0"
											}
										]
									},
									"functionSelector": "f30e6e77",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 145,
												"name": "onlyOwner",
												"nameLocations": [
													"1726:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1815,
												"src": "1726:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1726:9:0"
										}
									],
									"name": "pauseMint",
									"nameLocation": "1693:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "1708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1703:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:14:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:0"
									},
									"scope": 160,
									"src": "1684:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "113:1716:0",
							"usedErrors": [
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926,
								1929,
								1932,
								1935,
								1938
							],
							"usedEvents": [
								1797,
								1970,
								1979,
								1988,
								2101
							]
						}
					],
					"src": "33:1796:0"
				},
				"id": 0
			},
			"contracts/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1783
						],
						"ERC721A__IERC721Receiver": [
							178
						],
						"IERC721A": [
							2102
						]
					},
					"id": 1784,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:1"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IERC721A.sol",
							"file": "./interfaces/IERC721A.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1784,
							"sourceUnit": 2103,
							"src": "115:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 164,
								"nodeType": "StructuredDocumentation",
								"src": "154:53:1",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "219:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "260:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "295:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "287:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "322:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "314:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "345:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "337:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "378:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "363:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "363:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:113:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "408:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 174,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:8:1"
									},
									"scope": 178,
									"src": "251:165:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1784,
							"src": "209:210:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 180,
										"name": "IERC721A",
										"nameLocations": [
											"961:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2102,
										"src": "961:8:1"
									},
									"id": 181,
									"nodeType": "InheritanceSpecifier",
									"src": "961:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 179,
								"nodeType": "StructuredDocumentation",
								"src": "423:516:1",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1783,
							"linearizedBaseContracts": [
								1783,
								2102
							],
							"name": "ERC721A",
							"nameLocation": "950:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 184,
									"members": [
										{
											"constant": false,
											"id": 183,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1106:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 184,
											"src": "1098:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1098:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1070:16:1",
									"nodeType": "StructDefinition",
									"scope": 1783,
									"src": "1063:56:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 192,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1387:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "1362:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1362:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1418:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1423:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1418:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 189,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1417:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 190,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1429:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1417:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 195,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1531:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "1506:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1506:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 194,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1555:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 198,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1658:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "1633:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1633:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1682:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 201,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1777:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "1752:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1791:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 209,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1910:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "1885:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1937:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1942:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1937:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 206,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1936:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 207,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1949:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1936:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 212,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2050:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2025:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2025:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2076:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 217,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2175:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2150:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2150:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 214,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2193:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 215,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2198:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2193:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 220,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2310:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2285:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2285:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2337:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 225,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2445:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2420:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2420:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 222,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2473:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 223,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2478:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2473:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 228,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2576:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2551:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2597:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 236,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2721:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2696:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 229,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2696:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2755:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2760:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2755:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 233,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2754:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 234,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2767:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2754:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 244,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2856:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "2831:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 237,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2831:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 243,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2876:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2881:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2876:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 241,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2875:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 242,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2888:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2875:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 247,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3203:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3178:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3178:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3238:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 250,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3393:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3368:128:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 248,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3368:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3430:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 252,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3746:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3730:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 251,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 254,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3821:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3805:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3805:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 256,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3876:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3861:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 255,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3861:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 258,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3926:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "3911:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 257,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3911:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 262,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4365:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "4329:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 261,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 259,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4337:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4329:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 260,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4348:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4633:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "4597:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 265,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 263,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4605:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4597:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 264,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4616:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4756:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "4711:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$184_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 270,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 267,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4719:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4711:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$184_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 269,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 268,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4730:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 184,
												"src": "4730:16:1"
											},
											"referencedDeclaration": 184,
											"src": "4730:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 277,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4882:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "4829:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 276,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4837:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4829:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 275,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4856:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4848:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 274,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4867:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "5152:102:1",
										"statements": [
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "5163:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "5171:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5163:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "5163:13:1"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5197:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5187:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "5187:17:1"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "5215:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 293,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5231:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5231:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5215:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "5215:31:1"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5122:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5108:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5143:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5129:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5129:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5107:44:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5152:0:1"
									},
									"scope": 1783,
									"src": "5096:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5655:27:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5673:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 303,
												"id": 305,
												"nodeType": "Return",
												"src": "5666:8:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5456:128:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5599:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5612:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5646:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5645:9:1"
									},
									"scope": 1783,
									"src": "5590:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "5825:39:1",
										"statements": [
											{
												"expression": {
													"id": 313,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "5843:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 314,
												"nodeType": "Return",
												"src": "5836:20:1"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "5690:65:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5770:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5782:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "5816:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:9:1"
									},
									"scope": 1783,
									"src": "5761:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1953
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "6144:253:1",
										"statements": [
											{
												"id": 330,
												"nodeType": "UncheckedBlock",
												"src": "6300:90:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 323,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "6332:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 324,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6348:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6332:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 326,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6363:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6363:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6332:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 322,
														"id": 329,
														"nodeType": "Return",
														"src": "6325:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "5872:196:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6083:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6117:8:1"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6094:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6135:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6134:9:1"
									},
									"scope": 1783,
									"src": "6074:323:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "6559:232:1",
										"statements": [
											{
												"id": 343,
												"nodeType": "UncheckedBlock",
												"src": "6709:75:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "6741:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 339,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6757:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6757:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6741:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 337,
														"id": 342,
														"nodeType": "Return",
														"src": "6734:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "6405:84:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6516:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "6550:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6549:9:1"
									},
									"scope": 1783,
									"src": "6495:296:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "6937:38:1",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 254,
													"src": "6955:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "6948:19:1"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "6799:68:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6882:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6894:2:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6928:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:9:1"
									},
									"scope": 1783,
									"src": "6873:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "7339:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 363,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "7354:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7371:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 364,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7363:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7363:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7354:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "7350:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 369,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "7382:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7382:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 371,
													"nodeType": "RevertStatement",
													"src": "7375:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 373,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "7428:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 375,
														"indexExpression": {
															"id": 374,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7447:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7428:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 376,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7456:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7428:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 378,
												"nodeType": "Return",
												"src": "7421:62:1"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "7176:76:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7267:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7312:8:1"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7285:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "7277:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7277:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7276:15:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "7330:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7329:9:1"
									},
									"scope": 1783,
									"src": "7258:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "7643:108:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 388,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7662:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 390,
																	"indexExpression": {
																		"id": 389,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "7681:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7662:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 391,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "7691:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7662:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 393,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7661:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 394,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7716:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7661:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 396,
												"nodeType": "Return",
												"src": "7654:89:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "7499:68:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7582:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7604:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "7596:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7595:15:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "7634:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7633:9:1"
									},
									"scope": 1783,
									"src": "7573:178:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7919:108:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 406,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7938:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 408,
																	"indexExpression": {
																		"id": 407,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7957:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7938:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 409,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "7967:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7938:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7937:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 412,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7992:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7937:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 414,
												"nodeType": "Return",
												"src": "7930:89:1"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "7759:84:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7858:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7880:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "7872:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:15:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "7910:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:9:1"
									},
									"scope": 1783,
									"src": "7849:178:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "8208:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 426,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "8233:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 428,
																"indexExpression": {
																	"id": 427,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "8252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8233:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 429,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "8262:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8233:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8226:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 424,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8226:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8226:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 423,
												"id": 432,
												"nodeType": "Return",
												"src": "8219:55:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8035:104:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8154:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8170:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "8162:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8161:15:1"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "8200:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 421,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8200:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8199:8:1"
									},
									"scope": 1783,
									"src": "8145:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "8531:343:1",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8550:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "8542:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"baseExpression": {
														"id": 444,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "8559:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 446,
													"indexExpression": {
														"id": 445,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "8578:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8559:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8542:42:1"
											},
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8603:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "8595:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 448,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"nodeType": "VariableDeclarationStatement",
												"src": "8595:17:1"
											},
											{
												"AST": {
													"nativeSrc": "8697:42:1",
													"nodeType": "YulBlock",
													"src": "8697:42:1",
													"statements": [
														{
															"nativeSrc": "8712:16:1",
															"nodeType": "YulAssignment",
															"src": "8712:16:1",
															"value": {
																"name": "aux",
																"nativeSrc": "8725:3:1",
																"nodeType": "YulIdentifier",
																"src": "8725:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "8712:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "8712:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 439,
														"isOffset": false,
														"isSlot": false,
														"src": "8725:3:1",
														"valueSize": 1
													},
													{
														"declaration": 449,
														"isOffset": false,
														"isSlot": false,
														"src": "8712:9:1",
														"valueSize": 1
													}
												],
												"id": 451,
												"nodeType": "InlineAssembly",
												"src": "8688:51:1"
											},
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "8749:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 453,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "8759:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 454,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "8768:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8759:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 456,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8758:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 457,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "8796:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 458,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "8809:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8796:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 460,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8795:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8758:63:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8749:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "8749:72:1"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 464,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8832:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 466,
														"indexExpression": {
															"id": 465,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "8851:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8832:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 467,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "8860:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8832:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "8832:34:1"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "8290:174:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8479:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8495:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "8487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8509:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "8502:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 438,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8502:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8486:27:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8531:0:1"
									},
									"scope": 1783,
									"src": "8470:404:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1961
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "9512:548:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "9830:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9845:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9830:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "9907:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9922:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9907:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9830:102:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 487,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "9984:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9999:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9984:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9830:179:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 479,
												"id": 491,
												"nodeType": "Return",
												"src": "9810:199:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "9067:348:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9430:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 476,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9488:8:1"
									},
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9455:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9448:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 473,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9448:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9447:20:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9506:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9506:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9505:6:1"
									},
									"scope": 1783,
									"src": "9421:639:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2076
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "10392:31:1",
										"statements": [
											{
												"expression": {
													"id": 500,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 256,
													"src": "10410:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 499,
												"id": 501,
												"nodeType": "Return",
												"src": "10403:12:1"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "10257:60:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10332:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10359:8:1"
									},
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10336:2:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "10377:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10377:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10376:15:1"
									},
									"scope": 1783,
									"src": "10323:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2082
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10570:33:1",
										"statements": [
											{
												"expression": {
													"id": 510,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 258,
													"src": "10588:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 509,
												"id": 511,
												"nodeType": "Return",
												"src": "10581:14:1"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "10431:62:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10508:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 506,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10537:8:1"
									},
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10514:2:1"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10555:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10555:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10554:15:1"
									},
									"scope": 1783,
									"src": "10499:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2090
									],
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "10797:230:1",
										"statements": [
											{
												"condition": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10812:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 523,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "10821:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 522,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10813:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "10808:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 526,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "10838:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10838:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 528,
													"nodeType": "RevertStatement",
													"src": "10831:36:1"
												}
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10894:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "10880:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 530,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10880:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 532,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "10904:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10904:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10880:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 537,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "10938:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10932:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10932:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10932:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10947:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10932:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10957:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10932:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11017:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10932:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 546,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "10985:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 548,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "11004:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 547,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "10994:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10994:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 544,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10968:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10972:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10968:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10968:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 542,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10961:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10961:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 521,
												"id": 554,
												"nodeType": "Return",
												"src": "10925:94:1"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "10611:92:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10718:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10764:8:1"
									},
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10735:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "10727:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10726:17:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "10782:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10782:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10781:15:1"
									},
									"scope": 1783,
									"src": "10709:318:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "11345:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11363:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "11356:9:1"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "11035:238:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11288:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11296:2:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "11330:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11330:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11329:15:1"
									},
									"scope": 1783,
									"src": "11279:94:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2004
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "11797:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 579,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "11850:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 578,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "11831:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11831:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11823:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 576,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11823:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11823:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 574,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11815:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11815:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 573,
												"id": 583,
												"nodeType": "Return",
												"src": "11808:52:1"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "11573:137:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11725:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11770:8:1"
									},
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11741:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "11733:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11732:17:1"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "11788:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11787:9:1"
									},
									"scope": 1783,
									"src": "11716:152:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "12150:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "12206:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 595,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "12187:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12187:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "12168:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1947_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12168:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 593,
												"id": 599,
												"nodeType": "Return",
												"src": "12161:54:1"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "11876:175:1",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12066:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12087:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "12079:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12078:17:1"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "12127:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 591,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 590,
														"name": "TokenOwnership",
														"nameLocations": [
															"12127:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1947,
														"src": "12127:14:1"
													},
													"referencedDeclaration": 1947,
													"src": "12127:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1947_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12126:23:1"
									},
									"scope": 1783,
									"src": "12057:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "12410:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 611,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "12447:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 613,
															"indexExpression": {
																"id": 612,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "12465:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12447:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "12428:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1947_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12428:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 609,
												"id": 615,
												"nodeType": "Return",
												"src": "12421:51:1"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "12231:82:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12328:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12349:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "12341:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12341:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12340:15:1"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "12387:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 606,
														"name": "TokenOwnership",
														"nameLocations": [
															"12387:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1947,
														"src": "12387:14:1"
													},
													"referencedDeclaration": 1947,
													"src": "12387:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1947_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12386:23:1"
									},
									"scope": 1783,
									"src": "12319:161:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "12657:132:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 623,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "12672:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 625,
														"indexExpression": {
															"id": 624,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "12690:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12672:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12700:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12672:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"nodeType": "IfStatement",
												"src": "12668:114:1",
												"trueBody": {
													"id": 636,
													"nodeType": "Block",
													"src": "12703:79:1",
													"statements": [
														{
															"expression": {
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 628,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "12718:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 630,
																	"indexExpression": {
																		"id": 629,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "12736:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12718:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 632,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "12764:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 631,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "12745:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12745:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12718:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 635,
															"nodeType": "ExpressionStatement",
															"src": "12718:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "12488:99:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12602:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12633:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "12625:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12624:15:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12657:0:1"
									},
									"scope": 1783,
									"src": "12593:196:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "12947:1199:1",
										"statements": [
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12966:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "12958:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12958:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"id": 649,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 642,
													"src": "12973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12958:22:1"
											},
											{
												"id": 688,
												"nodeType": "UncheckedBlock",
												"src": "12993:1097:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 651,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "13022:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13022:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 653,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "13041:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13022:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 687,
														"nodeType": "IfStatement",
														"src": "13018:1061:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "13068:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 656,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "13075:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13068:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 686,
															"nodeType": "IfStatement",
															"src": "13064:1015:1",
															"trueBody": {
																"id": 685,
																"nodeType": "Block",
																"src": "13090:989:1",
																"statements": [
																	{
																		"assignments": [
																			659
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 659,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13121:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 685,
																				"src": "13113:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 658,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13113:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 663,
																		"initialValue": {
																			"baseExpression": {
																				"id": 660,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "13130:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 662,
																			"indexExpression": {
																				"id": 661,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "13148:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13130:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13113:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 664,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "13219:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 665,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 217,
																					"src": "13228:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13219:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13247:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13219:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 684,
																		"nodeType": "IfStatement",
																		"src": "13215:845:1",
																		"trueBody": {
																			"id": 683,
																			"nodeType": "Block",
																			"src": "13250:810:1",
																			"statements": [
																				{
																					"body": {
																						"id": 679,
																						"nodeType": "Block",
																						"src": "13904:93:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 677,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 672,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 659,
																										"src": "13935:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 673,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 262,
																											"src": "13944:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 676,
																										"indexExpression": {
																											"id": 675,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13962:6:1",
																											"subExpression": {
																												"id": 674,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 648,
																												"src": "13964:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13944:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13935:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 678,
																								"nodeType": "ExpressionStatement",
																								"src": "13935:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 671,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 669,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 659,
																							"src": "13891:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 670,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13901:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13891:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 680,
																					"nodeType": "WhileStatement",
																					"src": "13884:113:1"
																				},
																				{
																					"expression": {
																						"id": 681,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 659,
																						"src": "14030:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 646,
																					"id": 682,
																					"nodeType": "Return",
																					"src": "14023:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 689,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "14107:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14107:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "RevertStatement",
												"src": "14100:38:1"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "12797:68:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12880:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12907:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "12899:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:17:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "12938:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12937:9:1"
									},
									"scope": 1783,
									"src": "12871:1275:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "14344:267:1",
										"statements": [
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 702,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "14355:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14365:4:1",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1940,
														"src": "14355:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 709,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "14388:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14380:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 707,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14380:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14380:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14372:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14372:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14372:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14355:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "14355:41:1"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 714,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "14407:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14417:14:1",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1942,
														"src": "14407:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 719,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "14441:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 720,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "14451:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14441:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14434:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 717,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14434:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14434:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14407:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "14407:68:1"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 725,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "14486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14496:6:1",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1944,
														"src": "14486:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "14505:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 729,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "14514:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14505:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14533:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14505:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14486:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "14486:48:1"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 735,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "14545:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14555:9:1",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1946,
														"src": "14545:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 740,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "14574:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 741,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "14584:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14574:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14567:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 738,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14567:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14567:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14545:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "14545:58:1"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "14154:85:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14254:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14281:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "14273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14272:16:1"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14333:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "14311:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1947_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "TokenOwnership",
														"nameLocations": [
															"14311:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1947,
														"src": "14311:14:1"
													},
													"referencedDeclaration": 1947,
													"src": "14311:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1947_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14310:33:1"
									},
									"scope": 1783,
									"src": "14245:366:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "14790:354:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14810:327:1",
													"nodeType": "YulBlock",
													"src": "14810:327:1",
													"statements": [
														{
															"nativeSrc": "14922:37:1",
															"nodeType": "YulAssignment",
															"src": "14922:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "14935:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "14935:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "14942:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "14942:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14931:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14931:3:1"
																},
																"nativeSrc": "14931:28:1",
																"nodeType": "YulFunctionCall",
																"src": "14931:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "14922:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "14922:5:1"
																}
															]
														},
														{
															"nativeSrc": "15053:73:1",
															"nodeType": "YulAssignment",
															"src": "15053:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "15066:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15066:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "15080:23:1",
																						"nodeType": "YulIdentifier",
																						"src": "15080:23:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "15105:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "15105:9:1"
																						},
																						"nativeSrc": "15105:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "15105:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "15076:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "15076:3:1"
																				},
																				"nativeSrc": "15076:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15076:41:1"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "15119:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15119:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15073:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15073:2:1"
																		},
																		"nativeSrc": "15073:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15073:52:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15063:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15063:2:1"
																},
																"nativeSrc": "15063:63:1",
																"nodeType": "YulFunctionCall",
																"src": "15063:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15053:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15053:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 244,
														"isOffset": false,
														"isSlot": false,
														"src": "14942:16:1",
														"valueSize": 1
													},
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "15080:23:1",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "15119:5:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "14922:5:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "14935:5:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "15066:5:1",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "15053:6:1",
														"valueSize": 1
													}
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "14801:336:1"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "14619:69:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14703:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14730:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "14722:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "14737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14721:30:1"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14782:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "14774:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14773:16:1"
									},
									"scope": 1783,
									"src": "14694:450:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "15332:238:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "15418:145:1",
													"nodeType": "YulBlock",
													"src": "15418:145:1",
													"statements": [
														{
															"nativeSrc": "15496:56:1",
															"nodeType": "YulAssignment",
															"src": "15496:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "15510:24:1",
																		"nodeType": "YulIdentifier",
																		"src": "15510:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "15539:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "15539:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15549:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15549:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15536:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15536:2:1"
																		},
																		"nativeSrc": "15536:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15536:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15506:3:1"
																},
																"nativeSrc": "15506:46:1",
																"nodeType": "YulFunctionCall",
																"src": "15506:46:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15496:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 220,
														"isOffset": false,
														"isSlot": false,
														"src": "15510:24:1",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "15539:8:1",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "15496:6:1",
														"valueSize": 1
													}
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "15409:154:1"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "15152:88:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15255:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15284:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "15276:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15275:18:1"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15324:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "15316:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15315:16:1"
									},
									"scope": 1783,
									"src": "15246:324:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2044
									],
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "16325:330:1",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16344:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "16336:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16336:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [
														{
															"id": 781,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "16360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "16352:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16352:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16336:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 784,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "16385:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16385:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 786,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "16408:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16385:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "16381:175:1",
												"trueBody": {
													"condition": {
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16432:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "16450:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 790,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "16457:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16457:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 788,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "16433:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16433:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 798,
													"nodeType": "IfStatement",
													"src": "16428:128:1",
													"trueBody": {
														"id": 797,
														"nodeType": "Block",
														"src": "16479:77:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 794,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "16505:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16505:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 796,
																"nodeType": "RevertStatement",
																"src": "16498:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 800,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "16568:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$184_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 802,
															"indexExpression": {
																"id": 801,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "16584:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16568:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16593:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 183,
														"src": "16568:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 804,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "16601:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16568:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "16568:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 808,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "16628:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "16635:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "16639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "16619:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16619:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "16614:33:1"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "15769:472:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16256:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16316:8:1"
									},
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16272:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "16264:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16264:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16284:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "16276:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16263:29:1"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16325:0:1"
									},
									"scope": 1783,
									"src": "16247:408:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2060
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "16899:133:1",
										"statements": [
											{
												"condition": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16914:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 824,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "16923:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 823,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "16915:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16915:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "16910:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 827,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "16940:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16940:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 829,
													"nodeType": "RevertStatement",
													"src": "16933:41:1"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 831,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "16994:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$184_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 833,
														"indexExpression": {
															"id": 832,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "17010:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16994:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17019:5:1",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 183,
													"src": "16994:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 822,
												"id": 835,
												"nodeType": "Return",
												"src": "16987:37:1"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "16663:145:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16823:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16872:8:1"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "16835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16835:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16834:17:1"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "16890:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16889:9:1"
									},
									"scope": 1783,
									"src": "16814:218:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2052
									],
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "17456:150:1",
										"statements": [
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 846,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "17467:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 850,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 847,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "17486:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17486:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17467:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 851,
														"indexExpression": {
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "17507:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17467:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "17519:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17467:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "17467:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 856,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "17558:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17558:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "17579:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "17589:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "17543:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17543:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "EmitStatement",
												"src": "17538:60:1"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "17040:326:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17381:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 844,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17447:8:1"
									},
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17407:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "17399:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17422:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "17417:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17417:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17398:33:1"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17456:0:1"
									},
									"scope": 1783,
									"src": "17372:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2070
									],
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "17866:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 874,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "17884:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 876,
														"indexExpression": {
															"id": 875,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "17903:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17884:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 878,
													"indexExpression": {
														"id": 877,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "17910:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17884:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 873,
												"id": 879,
												"nodeType": "Return",
												"src": "17877:42:1"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "17614:143:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17772:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17842:8:1"
									},
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17797:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "17789:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17812:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "17804:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17788:33:1"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "17860:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17860:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17859:6:1"
									},
									"scope": 1783,
									"src": "17763:164:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "18256:211:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 889,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "18287:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18287:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 891,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "18306:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18287:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "18330:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 894,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "18340:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18330:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18287:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 897,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "18391:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 899,
																"indexExpression": {
																	"id": 898,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "18409:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18391:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 900,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "18420:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18391:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18439:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18391:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18287:153:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 888,
												"id": 905,
												"nodeType": "Return",
												"src": "18267:173:1"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "17935:244:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "18202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18201:17:1"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "18250:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18250:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18249:6:1"
									},
									"scope": 1783,
									"src": "18185:282:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "18738:497:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "18758:470:1",
													"nodeType": "YulBlock",
													"src": "18758:470:1",
													"statements": [
														{
															"nativeSrc": "18870:37:1",
															"nodeType": "YulAssignment",
															"src": "18870:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "18883:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "18883:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "18890:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "18890:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18879:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18879:3:1"
																},
																"nativeSrc": "18879:28:1",
																"nodeType": "YulFunctionCall",
																"src": "18879:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "18870:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "18870:5:1"
																}
															]
														},
														{
															"nativeSrc": "19022:45:1",
															"nodeType": "YulAssignment",
															"src": "19022:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "19039:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "19039:9:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "19050:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "19050:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19035:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19035:3:1"
																},
																"nativeSrc": "19035:32:1",
																"nodeType": "YulFunctionCall",
																"src": "19035:32:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "19022:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "19022:9:1"
																}
															]
														},
														{
															"nativeSrc": "19151:66:1",
															"nodeType": "YulAssignment",
															"src": "19151:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "19167:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19167:9:1"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "19178:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "19178:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19164:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "19164:2:1"
																		},
																		"nativeSrc": "19164:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19164:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "19189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19189:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "19200:15:1",
																				"nodeType": "YulIdentifier",
																				"src": "19200:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19186:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "19186:2:1"
																		},
																		"nativeSrc": "19186:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19186:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19161:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19161:2:1"
																},
																"nativeSrc": "19161:56:1",
																"nodeType": "YulFunctionCall",
																"src": "19161:56:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19151:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19151:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 244,
														"isOffset": false,
														"isSlot": false,
														"src": "18890:16:1",
														"valueSize": 1
													},
													{
														"declaration": 244,
														"isOffset": false,
														"isSlot": false,
														"src": "19050:16:1",
														"valueSize": 1
													},
													{
														"declaration": 910,
														"isOffset": false,
														"isSlot": false,
														"src": "19200:15:1",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "19022:9:1",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "19039:9:1",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "19167:9:1",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "19189:9:1",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "18870:5:1",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "18883:5:1",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "19178:5:1",
														"valueSize": 1
													},
													{
														"declaration": 917,
														"isOffset": false,
														"isSlot": false,
														"src": "19151:6:1",
														"valueSize": 1
													}
												],
												"id": 919,
												"nodeType": "InlineAssembly",
												"src": "18749:479:1"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "18475:95:1",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18585:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18628:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "18620:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18662:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "18654:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18686:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "18678:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18678:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18609:93:1"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18730:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "18725:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18725:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18724:13:1"
									},
									"scope": 1783,
									"src": "18576:659:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "19509:324:1",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19545:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "19520:38:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 932,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 931,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"19520:16:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 184,
																"src": "19520:16:1"
															},
															"referencedDeclaration": 184,
															"src": "19520:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"baseExpression": {
														"id": 934,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "19561:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$184_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 936,
													"indexExpression": {
														"id": 935,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "19577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19561:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$184_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19520:65:1"
											},
											{
												"AST": {
													"nativeSrc": "19700:126:1",
													"nodeType": "YulBlock",
													"src": "19700:126:1",
													"statements": [
														{
															"nativeSrc": "19715:41:1",
															"nodeType": "YulAssignment",
															"src": "19715:41:1",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "19738:18:1",
																"nodeType": "YulIdentifier",
																"src": "19738:18:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "19715:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "19715:19:1"
																}
															]
														},
														{
															"nativeSrc": "19770:45:1",
															"nodeType": "YulAssignment",
															"src": "19770:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "19795:19:1",
																		"nodeType": "YulIdentifier",
																		"src": "19795:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "19789:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "19789:5:1"
																},
																"nativeSrc": "19789:26:1",
																"nodeType": "YulFunctionCall",
																"src": "19789:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "19770:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "19770:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 929,
														"isOffset": false,
														"isSlot": false,
														"src": "19770:15:1",
														"valueSize": 1
													},
													{
														"declaration": 927,
														"isOffset": false,
														"isSlot": false,
														"src": "19715:19:1",
														"valueSize": 1
													},
													{
														"declaration": 927,
														"isOffset": false,
														"isSlot": false,
														"src": "19795:19:1",
														"valueSize": 1
													},
													{
														"declaration": 933,
														"isOffset": false,
														"isSlot": true,
														"src": "19738:18:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 938,
												"nodeType": "InlineAssembly",
												"src": "19691:135:1"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "19243:99:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19357:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19392:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "19384:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19384:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19383:17:1"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19458:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "19450:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19450:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19487:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "19479:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19449:54:1"
									},
									"scope": 1783,
									"src": "19348:485:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2036
									],
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "20584:2694:1",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20603:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "20595:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "20644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "20625:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20625:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20595:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 961,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "20685:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20677:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 959,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20677:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20677:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 957,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20669:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20669:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 964,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "20710:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20669:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "20665:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 966,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "20723:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20723:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 968,
													"nodeType": "RevertStatement",
													"src": "20716:35:1"
												}
											},
											{
												"assignments": [
													971,
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20773:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "20765:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20802:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "20794:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 972,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20794:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"id": 975,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "20848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "20821:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20764:92:1"
											},
											{
												"condition": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20955:69:1",
													"subExpression": {
														"arguments": [
															{
																"id": 979,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "20981:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 980,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "20998:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 981,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "21004:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21004:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 978,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "20956:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20956:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "20951:180:1",
												"trueBody": {
													"condition": {
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21043:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 986,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "21061:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 987,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "21067:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21067:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 985,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "21044:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21044:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 994,
													"nodeType": "IfStatement",
													"src": "21039:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 991,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "21096:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21096:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 993,
														"nodeType": "RevertStatement",
														"src": "21089:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "21148:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21162:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 997,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21154:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21154:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21148:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "21144:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1002,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "21173:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21173:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1004,
													"nodeType": "RevertStatement",
													"src": "21166:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "21231:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "21237:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "21241:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21250:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1006,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "21209:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21209:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "21209:43:1"
											},
											{
												"AST": {
													"nativeSrc": "21327:186:1",
													"nodeType": "YulBlock",
													"src": "21327:186:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "21361:141:1",
																"nodeType": "YulBlock",
																"src": "21361:141:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "21464:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "21464:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21485:1:1",
																					"nodeType": "YulLiteral",
																					"src": "21485:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "21457:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "21457:6:1"
																			},
																			"nativeSrc": "21457:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "21457:30:1"
																		},
																		"nativeSrc": "21457:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "21457:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "21345:15:1",
																"nodeType": "YulIdentifier",
																"src": "21345:15:1"
															},
															"nativeSrc": "21342:160:1",
															"nodeType": "YulIf",
															"src": "21342:160:1"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "21345:15:1",
														"valueSize": 1
													},
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "21464:19:1",
														"valueSize": 1
													}
												],
												"id": 1013,
												"nodeType": "InlineAssembly",
												"src": "21318:195:1"
											},
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "21785:1388:1",
												"statements": [
													{
														"expression": {
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21880:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1014,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "21882:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1016,
																"indexExpression": {
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "21901:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21882:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "21880:26:1"
													},
													{
														"expression": {
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21949:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1019,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "21951:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1021,
																"indexExpression": {
																	"id": 1020,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "21970:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21951:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1023,
														"nodeType": "ExpressionStatement",
														"src": "21949:24:1"
													},
													{
														"expression": {
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1024,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "22244:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1026,
																"indexExpression": {
																	"id": 1025,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "22262:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22244:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1028,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "22310:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1029,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "22331:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1031,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "22374:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 945,
																					"src": "22380:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1033,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "22384:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1030,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "22359:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22359:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22331:73:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1027,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "22273:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22273:146:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22244:175:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1038,
														"nodeType": "ExpressionStatement",
														"src": "22244:175:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1039,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "22539:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1040,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "22561:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22539:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22590:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22539:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1069,
														"nodeType": "IfStatement",
														"src": "22535:627:1",
														"trueBody": {
															"id": 1068,
															"nodeType": "Block",
															"src": "22593:569:1",
															"statements": [
																{
																	"assignments": [
																		1045
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1045,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22620:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1068,
																			"src": "22612:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1044,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22612:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1049,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1046,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "22634:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22644:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22634:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22612:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1050,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "22767:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1052,
																			"indexExpression": {
																				"id": 1051,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "22785:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22767:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22801:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22767:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1067,
																	"nodeType": "IfStatement",
																	"src": "22763:384:1",
																	"trueBody": {
																		"id": 1066,
																		"nodeType": "Block",
																		"src": "22804:343:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1055,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1045,
																						"src": "22890:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1056,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 252,
																						"src": "22905:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22890:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1065,
																				"nodeType": "IfStatement",
																				"src": "22886:242:1",
																				"trueBody": {
																					"id": 1064,
																					"nodeType": "Block",
																					"src": "22920:208:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1062,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1058,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 262,
																										"src": "23052:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1060,
																									"indexExpression": {
																										"id": 1059,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1045,
																										"src": "23070:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23052:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1061,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 952,
																									"src": "23085:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23052:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1063,
																							"nodeType": "ExpressionStatement",
																							"src": "23052:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "23199:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "23205:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "23209:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "23190:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23190:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "EmitStatement",
												"src": "23185:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "23249:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "23255:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "23259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23268:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1077,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "23228:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23228:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "23228:42:1"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "20032:415:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20462:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 949,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20575:8:1"
									},
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20493:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "20485:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20485:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20516:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "20508:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20537:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "20529:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20474:77:1"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20584:0:1"
									},
									"scope": 1783,
									"src": "20453:2825:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2026
									],
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "23509:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "23537:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "23543:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "23547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23556:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1096,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1104,
															1142
														],
														"referencedDeclaration": 1142,
														"src": "23520:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23520:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "23520:39:1"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "23286:82:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23383:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1094,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23500:8:1"
									},
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23418:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "23410:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "23433:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23433:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "23454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23399:77:1"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23509:0:1"
									},
									"scope": 1783,
									"src": "23374:193:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2016
									],
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "24329:243:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "24353:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "24359:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "24363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "24340:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24340:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "24340:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1123,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "24386:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24389:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24386:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24394:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24386:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24404:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24386:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "24382:183:1",
												"trueBody": {
													"condition": {
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24424:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1129,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "24456:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "24462:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1131,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "24466:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1132,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "24475:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1128,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "24425:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24425:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1139,
													"nodeType": "IfStatement",
													"src": "24420:145:1",
													"trueBody": {
														"id": 1138,
														"nodeType": "Block",
														"src": "24483:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1135,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "24509:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24509:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1137,
																"nodeType": "RevertStatement",
																"src": "24502:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "23575:584:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24174:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1115,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24320:8:1"
									},
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24209:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "24201:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24232:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "24224:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24253:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "24245:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24284:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "24271:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24271:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24190:106:1"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24329:0:1"
									},
									"scope": 1783,
									"src": "24165:407:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "25391:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "24580:648:1",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25243:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25283:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "25275:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25275:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25306:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "25298:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25327:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "25319:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25358:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "25350:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25264:109:1"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25391:0:1"
									},
									"scope": 1783,
									"src": "25234:159:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "26214:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "25401:651:1",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26067:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26106:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "26098:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26129:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "26121:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26150:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "26142:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26142:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "26173:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26173:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26087:109:1"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26214:0:1"
									},
									"scope": 1783,
									"src": "26058:158:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "26825:547:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1203,
															"nodeType": "Block",
															"src": "26977:98:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1195,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "26999:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1197,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1173,
																							"src": "27034:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1196,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "27009:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$178_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27009:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$178",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "27038:16:1",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "27009:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27055:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27009:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26999:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1181,
																	"id": 1202,
																	"nodeType": "Return",
																	"src": "26992:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1204,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1194,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1193,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26959:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1204,
																	"src": "26952:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1192,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26952:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26937:39:1"
														},
														"src": "26929:146:1"
													},
													{
														"block": {
															"id": 1219,
															"nodeType": "Block",
															"src": "27104:261:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1208,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1206,
																				"src": "27123:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27130:6:1",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27123:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27140:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27123:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1217,
																		"nodeType": "Block",
																		"src": "27231:123:1",
																		"statements": [
																			{
																				"AST": {
																					"nativeSrc": "27259:80:1",
																					"nodeType": "YulBlock",
																					"src": "27259:80:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nativeSrc": "27293:2:1",
																												"nodeType": "YulLiteral",
																												"src": "27293:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nativeSrc": "27297:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "27297:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27289:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "27289:3:1"
																										},
																										"nativeSrc": "27289:15:1",
																										"nodeType": "YulFunctionCall",
																										"src": "27289:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nativeSrc": "27312:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "27312:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "27306:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "27306:5:1"
																										},
																										"nativeSrc": "27306:13:1",
																										"nodeType": "YulFunctionCall",
																										"src": "27306:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nativeSrc": "27282:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "27282:6:1"
																								},
																								"nativeSrc": "27282:38:1",
																								"nodeType": "YulFunctionCall",
																								"src": "27282:38:1"
																							},
																							"nativeSrc": "27282:38:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "27282:38:1"
																						}
																					]
																				},
																				"evmVersion": "shanghai",
																				"externalReferences": [
																					{
																						"declaration": 1206,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27297:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1206,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27312:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1216,
																				"nodeType": "InlineAssembly",
																				"src": "27250:89:1"
																			}
																		]
																	},
																	"id": 1218,
																	"nodeType": "IfStatement",
																	"src": "27119:235:1",
																	"trueBody": {
																		"id": 1215,
																		"nodeType": "Block",
																		"src": "27143:82:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1212,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1926,
																						"src": "27169:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27169:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1214,
																				"nodeType": "RevertStatement",
																				"src": "27162:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1220,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1207,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1206,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27096:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1220,
																	"src": "27083:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1205,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27083:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27082:21:1"
														},
														"src": "27076:289:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1186,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "26886:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26886:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "26907:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "26913:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1190,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "26922:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1183,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "26865:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "26840:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$178_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26840:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$178",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26869:16:1",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "26840:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26840:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1221,
												"nodeType": "TryStatement",
												"src": "26836:529:1"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "26224:426:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26665:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26714:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "26706:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26706:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26737:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "26729:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "26750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26789:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "26776:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26776:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26695:106:1"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "26819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26818:6:1"
									},
									"scope": 1783,
									"src": "26656:716:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "27896:2904:1",
										"statements": [
											{
												"assignments": [
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27915:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "27907:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"id": 1233,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "27930:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27907:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "27958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27970:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27958:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "27954:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1238,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "27980:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27980:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1240,
													"nodeType": "RevertStatement",
													"src": "27973:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28041:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28033:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28033:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28033:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "28045:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "28049:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1249,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "28063:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "28011:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28011:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "28011:61:1"
											},
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "28260:2462:1",
												"statements": [
													{
														"expression": {
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1252,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "28486:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1254,
																"indexExpression": {
																	"id": 1253,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "28505:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28486:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "28512:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28525:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1257,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 195,
																							"src": "28530:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28525:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1259,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28524:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28555:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28524:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28523:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28512:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28486:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1265,
														"nodeType": "ExpressionStatement",
														"src": "28486:71:1"
													},
													{
														"expression": {
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1266,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "28800:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1268,
																"indexExpression": {
																	"id": 1267,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "28818:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28800:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1270,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "28871:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1272,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1228,
																					"src": "28913:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1271,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "28892:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28892:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1277,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28948:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28940:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1275,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28940:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28940:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1279,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "28952:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28956:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1274,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "28925:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28925:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28892:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1269,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "28834:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28834:139:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28800:173:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1285,
														"nodeType": "ExpressionStatement",
														"src": "28800:173:1"
													},
													{
														"assignments": [
															1287
														],
														"declarations": [
															{
																"constant": false,
																"id": 1287,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28998:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1307,
																"src": "28990:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28990:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1288,
														"nodeType": "VariableDeclarationStatement",
														"src": "28990:16:1"
													},
													{
														"assignments": [
															1290
														],
														"declarations": [
															{
																"constant": false,
																"id": 1290,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29029:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1307,
																"src": "29021:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29021:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1294,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "29035:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1292,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "29050:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29035:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29021:37:1"
													},
													{
														"AST": {
															"nativeSrc": "29434:1181:1",
															"nodeType": "YulBlock",
															"src": "29434:1181:1",
															"statements": [
																{
																	"nativeSrc": "29551:37:1",
																	"nodeType": "YulAssignment",
																	"src": "29551:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nativeSrc": "29567:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "29567:2:1"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nativeSrc": "29571:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "29571:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "29563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "29563:3:1"
																		},
																		"nativeSrc": "29563:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29563:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nativeSrc": "29551:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "29551:8:1"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29680:1:1",
																				"nodeType": "YulLiteral",
																				"src": "29680:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29741:1:1",
																				"nodeType": "YulLiteral",
																				"src": "29741:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nativeSrc": "29800:25:1",
																				"nodeType": "YulIdentifier",
																				"src": "29800:25:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29862:1:1",
																				"nodeType": "YulLiteral",
																				"src": "29862:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nativeSrc": "29903:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "29903:8:1"
																			},
																			{
																				"name": "startTokenId",
																				"nativeSrc": "29943:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "29943:12:1"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nativeSrc": "29653:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "29653:4:1"
																		},
																		"nativeSrc": "29653:335:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29653:335:1"
																	},
																	"nativeSrc": "29653:335:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "29653:335:1"
																},
																{
																	"body": {
																		"nativeSrc": "30430:170:1",
																		"nodeType": "YulBlock",
																		"src": "30430:170:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "30527:1:1",
																							"nodeType": "YulLiteral",
																							"src": "30527:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "30530:1:1",
																							"nodeType": "YulLiteral",
																							"src": "30530:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "30533:25:1",
																							"nodeType": "YulIdentifier",
																							"src": "30533:25:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "30560:1:1",
																							"nodeType": "YulLiteral",
																							"src": "30560:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "30563:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "30563:8:1"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "30573:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "30573:7:1"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "30522:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "30522:4:1"
																					},
																					"nativeSrc": "30522:59:1",
																					"nodeType": "YulFunctionCall",
																					"src": "30522:59:1"
																				},
																				"nativeSrc": "30522:59:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "30522:59:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nativeSrc": "30346:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "30346:7:1"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "30355:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "30355:3:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "30343:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "30343:2:1"
																				},
																				"nativeSrc": "30343:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "30343:16:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "30336:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "30336:6:1"
																		},
																		"nativeSrc": "30336:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30336:24:1"
																	},
																	"nativeSrc": "30254:346:1",
																	"nodeType": "YulForLoop",
																	"post": {
																		"nativeSrc": "30361:68:1",
																		"nodeType": "YulBlock",
																		"src": "30361:68:1",
																		"statements": [
																			{
																				"nativeSrc": "30384:26:1",
																				"nodeType": "YulAssignment",
																				"src": "30384:26:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nativeSrc": "30399:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "30399:7:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "30408:1:1",
																							"nodeType": "YulLiteral",
																							"src": "30408:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "30395:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "30395:3:1"
																					},
																					"nativeSrc": "30395:15:1",
																					"nodeType": "YulFunctionCall",
																					"src": "30395:15:1"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nativeSrc": "30384:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "30384:7:1"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nativeSrc": "30258:77:1",
																		"nodeType": "YulBlock",
																		"src": "30258:77:1",
																		"statements": [
																			{
																				"nativeSrc": "30281:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "30281:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nativeSrc": "30300:12:1",
																							"nodeType": "YulIdentifier",
																							"src": "30300:12:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "30314:1:1",
																							"nodeType": "YulLiteral",
																							"src": "30314:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "30296:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "30296:3:1"
																					},
																					"nativeSrc": "30296:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "30296:20:1"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nativeSrc": "30285:7:1",
																						"nodeType": "YulTypedName",
																						"src": "30285:7:1",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30254:346:1"
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 244,
																"isOffset": false,
																"isSlot": false,
																"src": "29571:16:1",
																"valueSize": 1
															},
															{
																"declaration": 250,
																"isOffset": false,
																"isSlot": false,
																"src": "29800:25:1",
																"valueSize": 1
															},
															{
																"declaration": 250,
																"isOffset": false,
																"isSlot": false,
																"src": "30533:25:1",
																"valueSize": 1
															},
															{
																"declaration": 1290,
																"isOffset": false,
																"isSlot": false,
																"src": "30355:3:1",
																"valueSize": 1
															},
															{
																"declaration": 1232,
																"isOffset": false,
																"isSlot": false,
																"src": "29943:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1232,
																"isOffset": false,
																"isSlot": false,
																"src": "30300:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "29567:2:1",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "29551:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "29903:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "30563:8:1",
																"valueSize": 1
															}
														],
														"id": 1295,
														"nodeType": "InlineAssembly",
														"src": "29425:1190:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "30633:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30645:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30633:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1302,
														"nodeType": "IfStatement",
														"src": "30629:45:1",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1299,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "30655:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30655:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1301,
															"nodeType": "RevertStatement",
															"src": "30648:26:1"
														}
													},
													{
														"expression": {
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1303,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "30691:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1304,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "30707:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30691:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1306,
														"nodeType": "ExpressionStatement",
														"src": "30691:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30761:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30753:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30753:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30753:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "30765:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "30769:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1315,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "30783:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "30732:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30732:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "30732:60:1"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "27569:259:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27843:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "27849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27869:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "27861:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27848:30:1"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27896:0:1"
									},
									"scope": 1783,
									"src": "27834:2966:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "31732:1406:1",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31751:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1430,
														"src": "31743:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31743:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"id": 1329,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "31766:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31743:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1331,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "31794:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31808:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31800:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1332,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31800:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31800:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31794:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1340,
												"nodeType": "IfStatement",
												"src": "31790:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1337,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "31819:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31819:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1339,
													"nodeType": "RevertStatement",
													"src": "31812:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "31853:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31865:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31853:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "31849:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1344,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "31875:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31875:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1346,
													"nodeType": "RevertStatement",
													"src": "31868:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1348,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "31908:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1349,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "31919:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31908:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "31904:89:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1351,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "31960:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31960:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1353,
													"nodeType": "RevertStatement",
													"src": "31953:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32036:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32028:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32028:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32028:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "32040:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "32044:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1362,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "32058:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1355,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "32006:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32006:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "32006:61:1"
											},
											{
												"id": 1419,
												"nodeType": "UncheckedBlock",
												"src": "32179:881:1",
												"statements": [
													{
														"expression": {
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1365,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "32405:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1367,
																"indexExpression": {
																	"id": 1366,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "32424:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32405:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1368,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "32431:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1369,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32444:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1370,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 195,
																							"src": "32449:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32444:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1372,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32443:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32474:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32443:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1375,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32442:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32431:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32405:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1378,
														"nodeType": "ExpressionStatement",
														"src": "32405:71:1"
													},
													{
														"expression": {
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1379,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "32719:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1381,
																"indexExpression": {
																	"id": 1380,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "32737:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32719:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1383,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "32790:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1385,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "32832:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1384,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "32811:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32811:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1390,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32867:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32859:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1388,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32859:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32859:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1392,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1322,
																					"src": "32871:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32875:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1387,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "32844:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32844:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32811:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1382,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "32753:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32753:139:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32719:173:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1398,
														"nodeType": "ExpressionStatement",
														"src": "32719:173:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1400,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "32934:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1401,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "32948:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1402,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "32963:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32948:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32974:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32948:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32985:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32977:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1406,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32977:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32977:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1410,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "32989:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1399,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "32914:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32914:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1412,
														"nodeType": "EmitStatement",
														"src": "32909:83:1"
													},
													{
														"expression": {
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1413,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "33009:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1414,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33025:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1415,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "33040:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33025:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33009:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1418,
														"nodeType": "ExpressionStatement",
														"src": "33009:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33099:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33091:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33091:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33091:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "33103:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "33107:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1427,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33121:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "33070:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33070:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "33070:60:1"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "30808:849:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31672:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31693:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "31685:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31685:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31705:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "31697:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31684:30:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31732:0:1"
									},
									"scope": 1783,
									"src": "31663:1475:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "33672:569:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "33689:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "33693:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1441,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "33683:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33683:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "33683:19:1"
											},
											{
												"id": 1491,
												"nodeType": "UncheckedBlock",
												"src": "33715:519:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1446,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "33744:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33747:4:1",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33744:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33752:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33744:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33744:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "33740:483:1",
														"trueBody": {
															"id": 1489,
															"nodeType": "Block",
															"src": "33765:458:1",
															"statements": [
																{
																	"assignments": [
																		1452
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1452,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33792:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1489,
																			"src": "33784:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1451,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33784:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1454,
																	"initialValue": {
																		"id": 1453,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "33798:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33784:27:1"
																},
																{
																	"assignments": [
																		1456
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1456,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33838:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1489,
																			"src": "33830:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1455,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33830:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1460,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1457,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "33846:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1458,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "33852:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33846:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33830:30:1"
																},
																{
																	"body": {
																		"id": 1477,
																		"nodeType": "Block",
																		"src": "33882:209:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 1471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33909:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1464,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33949:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1463,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33941:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1462,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33941:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1465,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33941:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1466,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1434,
																								"src": "33953:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1468,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33957:7:1",
																								"subExpression": {
																									"id": 1467,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1456,
																									"src": "33957:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1469,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1438,
																								"src": "33966:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1461,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1223,
																							"src": "33910:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1470,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33910:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1476,
																				"nodeType": "IfStatement",
																				"src": "33905:167:1",
																				"trueBody": {
																					"id": 1475,
																					"nodeType": "Block",
																					"src": "33974:98:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1472,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1926,
																									"src": "34008:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1473,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "34008:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1474,
																							"nodeType": "RevertStatement",
																							"src": "34001:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1478,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "34099:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1479,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "34107:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34099:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1481,
																	"nodeType": "DoWhileStatement",
																	"src": "33879:233:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1482,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "34177:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1483,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "34194:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34177:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1488,
																	"nodeType": "IfStatement",
																	"src": "34173:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1485,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "34199:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34199:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1487,
																		"nodeType": "ExpressionStatement",
																		"src": "34199:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "33146:400:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33561:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33589:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "33581:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33610:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "33602:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33642:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "33629:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33629:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33570:84:1"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33672:0:1"
									},
									"scope": 1783,
									"src": "33552:689:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "34391:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1502,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "34412:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1503,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "34416:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34426:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1501,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1493,
															1508
														],
														"referencedDeclaration": 1493,
														"src": "34402:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34402:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "34402:27:1"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "34249:70:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34334:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34352:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "34344:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34364:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "34356:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34343:30:1"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34391:0:1"
									},
									"scope": 1783,
									"src": "34325:112:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "34753:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "34770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34779:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1514,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1520,
															1672
														],
														"referencedDeclaration": 1672,
														"src": "34764:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34764:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "34764:21:1"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "34634:64:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34713:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34727:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "34719:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34718:17:1"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34753:0:1"
									},
									"scope": 1783,
									"src": "34704:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "35091:3012:1",
										"statements": [
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "35110:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "35102:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35102:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"arguments": [
														{
															"id": 1531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "35151:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1530,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "35132:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35132:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35102:57:1"
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35180:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "35172:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35172:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1540,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "35203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35195:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1538,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35195:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35195:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1536,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35187:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35187:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35172:52:1"
											},
											{
												"assignments": [
													1545,
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35246:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "35238:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35238:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35275:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "35267:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35267:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"id": 1549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "35321:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1548,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "35294:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35294:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35237:92:1"
											},
											{
												"condition": {
													"id": 1552,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1525,
													"src": "35346:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "35342:316:1",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "35361:297:1",
													"statements": [
														{
															"condition": {
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35466:69:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1554,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "35492:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1555,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "35509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1556,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "35515:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35515:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1553,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "35467:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35467:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1570,
															"nodeType": "IfStatement",
															"src": "35462:184:1",
															"trueBody": {
																"condition": {
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35558:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1561,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "35576:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1562,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1772,
																					"src": "35582:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35582:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1560,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "35559:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35559:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1569,
																"nodeType": "IfStatement",
																"src": "35554:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1566,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "35611:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35611:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1568,
																	"nodeType": "RevertStatement",
																	"src": "35604:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1574,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "35692:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35706:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35698:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35698:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35698:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1579,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "35710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35719:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1573,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "35670:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35670:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "35670:51:1"
											},
											{
												"AST": {
													"nativeSrc": "35796:186:1",
													"nodeType": "YulBlock",
													"src": "35796:186:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "35830:141:1",
																"nodeType": "YulBlock",
																"src": "35830:141:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "35933:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "35933:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "35954:1:1",
																					"nodeType": "YulLiteral",
																					"src": "35954:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "35926:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "35926:6:1"
																			},
																			"nativeSrc": "35926:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "35926:30:1"
																		},
																		"nativeSrc": "35926:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "35926:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "35814:15:1",
																"nodeType": "YulIdentifier",
																"src": "35814:15:1"
															},
															"nativeSrc": "35811:160:1",
															"nodeType": "YulIf",
															"src": "35811:160:1"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1547,
														"isOffset": false,
														"isSlot": false,
														"src": "35814:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": false,
														"src": "35933:19:1",
														"valueSize": 1
													}
												],
												"id": 1583,
												"nodeType": "InlineAssembly",
												"src": "35787:195:1"
											},
											{
												"id": 1647,
												"nodeType": "UncheckedBlock",
												"src": "36254:1576:1",
												"statements": [
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1584,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "36573:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1586,
																"indexExpression": {
																	"id": 1585,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "36592:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36573:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36602:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1588,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "36607:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36602:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1590,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36601:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36632:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36601:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36573:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "36573:60:1"
													},
													{
														"expression": {
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1595,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "36871:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1597,
																"indexExpression": {
																	"id": 1596,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "36889:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36871:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1599,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "36937:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1602,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1600,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 217,
																						"src": "36961:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1601,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 225,
																						"src": "36979:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36961:43:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1603,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36960:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1605,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1535,
																					"src": "37023:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1608,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37037:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1607,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "37029:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1606,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "37029:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37029:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1610,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1529,
																					"src": "37041:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1604,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "37008:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37008:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36960:101:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1598,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "36900:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36900:176:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36871:205:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1615,
														"nodeType": "ExpressionStatement",
														"src": "36871:205:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1616,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "37196:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1617,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "37218:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37196:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37196:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "IfStatement",
														"src": "37192:627:1",
														"trueBody": {
															"id": 1645,
															"nodeType": "Block",
															"src": "37250:569:1",
															"statements": [
																{
																	"assignments": [
																		1622
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1622,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37277:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1645,
																			"src": "37269:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1621,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37269:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1626,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1523,
																			"src": "37291:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37301:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37291:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37269:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1627,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "37424:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1629,
																			"indexExpression": {
																				"id": 1628,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "37442:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37424:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37458:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37424:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1644,
																	"nodeType": "IfStatement",
																	"src": "37420:384:1",
																	"trueBody": {
																		"id": 1643,
																		"nodeType": "Block",
																		"src": "37461:343:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1632,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1622,
																						"src": "37547:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1633,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 252,
																						"src": "37562:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37547:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1642,
																				"nodeType": "IfStatement",
																				"src": "37543:242:1",
																				"trueBody": {
																					"id": 1641,
																					"nodeType": "Block",
																					"src": "37577:208:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1639,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1635,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 262,
																										"src": "37709:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1637,
																									"indexExpression": {
																										"id": 1636,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1622,
																										"src": "37727:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37709:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1638,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1529,
																									"src": "37742:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37709:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1640,
																							"nodeType": "ExpressionStatement",
																							"src": "37709:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1649,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "37856:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37870:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37862:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37862:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37862:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1654,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "37874:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1648,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "37847:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37847:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "EmitStatement",
												"src": "37842:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "37914:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37928:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37920:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37920:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37920:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "37932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1657,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "37893:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37893:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "37893:50:1"
											},
											{
												"id": 1670,
												"nodeType": "UncheckedBlock",
												"src": "38045:51:1",
												"statements": [
													{
														"expression": {
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "38070:14:1",
															"subExpression": {
																"id": 1667,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "38070:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1669,
														"nodeType": "ExpressionStatement",
														"src": "38070:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "34801:215:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35031:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "35037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35059:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "35054:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35054:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35036:37:1"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35091:0:1"
									},
									"scope": 1783,
									"src": "35022:3081:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "38470:457:1",
										"statements": [
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38489:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "38481:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"baseExpression": {
														"id": 1682,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "38498:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1684,
													"indexExpression": {
														"id": 1683,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "38516:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38498:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38481:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1686,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "38537:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38547:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38537:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1692,
												"nodeType": "IfStatement",
												"src": "38533:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1689,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "38557:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38557:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1691,
													"nodeType": "RevertStatement",
													"src": "38550:44:1"
												}
											},
											{
												"assignments": [
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38613:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "38605:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1693,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38605:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"nodeType": "VariableDeclarationStatement",
												"src": "38605:23:1"
											},
											{
												"AST": {
													"nativeSrc": "38719:54:1",
													"nodeType": "YulBlock",
													"src": "38719:54:1",
													"statements": [
														{
															"nativeSrc": "38734:28:1",
															"nodeType": "YulAssignment",
															"src": "38734:28:1",
															"value": {
																"name": "extraData",
																"nativeSrc": "38753:9:1",
																"nodeType": "YulIdentifier",
																"src": "38753:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "38734:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "38734:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "38753:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "38734:15:1",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "38710:63:1"
											},
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "38783:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1698,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "38793:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1699,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "38802:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38793:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1701,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38792:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1702,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "38837:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1703,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "38856:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38837:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1705,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38836:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38792:83:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38783:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "38783:92:1"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1709,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "38886:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1711,
														"indexExpression": {
															"id": 1710,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "38904:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38886:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1712,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "38913:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38886:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "38886:33:1"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "38303:86:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38404:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38428:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "38420:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38442:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "38435:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1676,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38419:33:1"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38470:0:1"
									},
									"scope": 1783,
									"src": "38395:532:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "39648:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "38935:562:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39512:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39541:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "39533:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39564:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "39556:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39584:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "39577:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1722,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39577:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39522:86:1"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "39640:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1725,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39640:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39639:8:1"
									},
									"scope": 1783,
									"src": "39503:147:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "39946:167:1",
										"statements": [
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39964:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "39957:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1741,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39957:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1749,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1745,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "39983:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1746,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "40006:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39983:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39976:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1743,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39976:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39976:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39957:68:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1753,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "40062:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1754,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "40068:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1755,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "40072:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1752,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "40051:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40051:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1750,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40043:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1758,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "40087:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40043:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1760,
												"nodeType": "Return",
												"src": "40036:69:1"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "39658:138:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39811:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39867:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39859:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39888:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39880:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39825:89:1"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39937:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39937:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39936:9:1"
									},
									"scope": 1783,
									"src": "39802:311:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "40562:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1768,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40580:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "40584:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40580:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1770,
												"nodeType": "Return",
												"src": "40573:17:1"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "40310:177:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40502:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40519:2:1"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "40553:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40553:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40552:9:1"
									},
									"scope": 1783,
									"src": "40493:105:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "40784:1661:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "40804:1634:1",
													"nodeType": "YulBlock",
													"src": "40804:1634:1",
													"statements": [
														{
															"nativeSrc": "41173:31:1",
															"nodeType": "YulVariableDeclaration",
															"src": "41173:31:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "41192:4:1",
																				"nodeType": "YulLiteral",
																				"src": "41192:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "41186:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "41186:5:1"
																		},
																		"nativeSrc": "41186:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "41186:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "41199:4:1",
																		"nodeType": "YulLiteral",
																		"src": "41199:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "41182:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "41182:3:1"
																},
																"nativeSrc": "41182:22:1",
																"nodeType": "YulFunctionCall",
																"src": "41182:22:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "41177:1:1",
																	"nodeType": "YulTypedName",
																	"src": "41177:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "41285:4:1",
																		"nodeType": "YulLiteral",
																		"src": "41285:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "41291:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "41291:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "41278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "41278:6:1"
																},
																"nativeSrc": "41278:15:1",
																"nodeType": "YulFunctionCall",
																"src": "41278:15:1"
															},
															"nativeSrc": "41278:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "41278:15:1"
														},
														{
															"nativeSrc": "41352:19:1",
															"nodeType": "YulAssignment",
															"src": "41352:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "41363:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "41363:1:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "41366:4:1",
																		"nodeType": "YulLiteral",
																		"src": "41366:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "41359:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "41359:3:1"
																},
																"nativeSrc": "41359:12:1",
																"nodeType": "YulFunctionCall",
																"src": "41359:12:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "41352:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "41352:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "41443:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "41443:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "41448:1:1",
																		"nodeType": "YulLiteral",
																		"src": "41448:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "41436:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "41436:6:1"
																},
																"nativeSrc": "41436:14:1",
																"nodeType": "YulFunctionCall",
																"src": "41436:14:1"
															},
															"nativeSrc": "41436:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "41436:14:1"
														},
														{
															"nativeSrc": "41541:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "41541:14:1",
															"value": {
																"name": "str",
																"nativeSrc": "41552:3:1",
																"nodeType": "YulIdentifier",
																"src": "41552:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "41545:3:1",
																	"nodeType": "YulTypedName",
																	"src": "41545:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "41804:397:1",
																"nodeType": "YulBlock",
																"src": "41804:397:1",
																"statements": [
																	{
																		"nativeSrc": "41823:18:1",
																		"nodeType": "YulAssignment",
																		"src": "41823:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "41834:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "41834:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "41839:1:1",
																					"nodeType": "YulLiteral",
																					"src": "41839:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "41830:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "41830:3:1"
																			},
																			"nativeSrc": "41830:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "41830:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "41823:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "41823:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "41987:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "41987:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "41996:2:1",
																							"nodeType": "YulLiteral",
																							"src": "41996:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "42004:4:1",
																									"nodeType": "YulIdentifier",
																									"src": "42004:4:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "42010:2:1",
																									"nodeType": "YulLiteral",
																									"src": "42010:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "42000:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "42000:3:1"
																							},
																							"nativeSrc": "42000:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "42000:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "41992:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "41992:3:1"
																					},
																					"nativeSrc": "41992:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "41992:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "41979:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "41979:7:1"
																			},
																			"nativeSrc": "41979:36:1",
																			"nodeType": "YulFunctionCall",
																			"src": "41979:36:1"
																		},
																		"nativeSrc": "41979:36:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "41979:36:1"
																	},
																	{
																		"nativeSrc": "42086:21:1",
																		"nodeType": "YulAssignment",
																		"src": "42086:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "42098:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "42098:4:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "42104:2:1",
																					"nodeType": "YulLiteral",
																					"src": "42104:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "42094:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "42094:3:1"
																			},
																			"nativeSrc": "42094:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "42094:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "42086:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "42086:4:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "42177:9:1",
																			"nodeType": "YulBlock",
																			"src": "42177:9:1",
																			"statements": [
																				{
																					"nativeSrc": "42179:5:1",
																					"nodeType": "YulBreak",
																					"src": "42179:5:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "42171:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "42171:4:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "42164:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "42164:6:1"
																			},
																			"nativeSrc": "42164:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "42164:12:1"
																		},
																		"nativeSrc": "42161:25:1",
																		"nodeType": "YulIf",
																		"src": "42161:25:1"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "41799:1:1",
																"nodeType": "YulLiteral",
																"src": "41799:1:1",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "41773:428:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "41801:2:1",
																"nodeType": "YulBlock",
																"src": "41801:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "41777:21:1",
																"nodeType": "YulBlock",
																"src": "41777:21:1",
																"statements": [
																	{
																		"nativeSrc": "41779:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "41779:17:1",
																		"value": {
																			"name": "value",
																			"nativeSrc": "41791:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "41791:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "41783:4:1",
																				"nodeType": "YulTypedName",
																				"src": "41783:4:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41773:428:1"
														},
														{
															"nativeSrc": "42217:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "42217:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "42235:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "42235:3:1"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "42240:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "42240:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "42231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "42231:3:1"
																},
																"nativeSrc": "42231:13:1",
																"nodeType": "YulFunctionCall",
																"src": "42231:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "42221:6:1",
																	"nodeType": "YulTypedName",
																	"src": "42221:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "42339:21:1",
															"nodeType": "YulAssignment",
															"src": "42339:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "42350:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "42350:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "42355:4:1",
																		"nodeType": "YulLiteral",
																		"src": "42355:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "42346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "42346:3:1"
																},
																"nativeSrc": "42346:14:1",
																"nodeType": "YulFunctionCall",
																"src": "42346:14:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "42339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "42339:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "42415:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "42415:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "42420:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "42420:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "42408:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "42408:6:1"
																},
																"nativeSrc": "42408:19:1",
																"nodeType": "YulFunctionCall",
																"src": "42408:19:1"
															},
															"nativeSrc": "42408:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "42408:19:1"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41352:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41443:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41552:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41823:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41834:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "41987:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "42240:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "42339:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "42350:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "42415:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1775,
														"isOffset": false,
														"isSlot": false,
														"src": "41791:5:1",
														"valueSize": 1
													}
												],
												"id": 1780,
												"nodeType": "InlineAssembly",
												"src": "40795:1643:1"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "40606:88:1",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40709:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "40719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40718:15:1"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40779:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "40765:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40765:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40764:19:1"
									},
									"scope": 1783,
									"src": "40700:1745:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1784,
							"src": "941:41507:1",
							"usedErrors": [
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926,
								1929,
								1932,
								1935,
								1938
							],
							"usedEvents": [
								1970,
								1979,
								1988,
								2101
							]
						}
					],
					"src": "88:42360:1"
				},
				"id": 1
			},
			"contracts/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2124
						],
						"Ownable": [
							1896
						]
					},
					"id": 1897,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1785,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "contracts/contracts/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 1786,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 2125,
							"src": "132:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1788,
										"name": "Context",
										"nameLocations": [
											"701:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2124,
										"src": "701:7:2"
									},
									"id": 1789,
									"nodeType": "InheritanceSpecifier",
									"src": "701:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1787,
								"nodeType": "StructuredDocumentation",
								"src": "165:505:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1896,
							"linearizedBaseContracts": [
								1896,
								2124
							],
							"name": "Ownable",
							"nameLocation": "690:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1791,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "732:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "716:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1790,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1797,
									"name": "OwnershipTransferred",
									"nameLocation": "753:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "790:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "774:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "821:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "805:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:57:2"
									},
									"src": "747:84:2"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "952:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1802,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "982:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "982:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1801,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "963:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "963:32:2"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "839:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1807,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:2:2"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:2"
									},
									"scope": 1896,
									"src": "938:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "1117:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1810,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "1128:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1128:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "1128:13:2"
											},
											{
												"id": 1813,
												"nodeType": "PlaceholderStatement",
												"src": "1152:1:2"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "1011:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1815,
									"name": "onlyOwner",
									"nameLocation": "1105:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1114:2:2"
									},
									"src": "1096:65:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "1297:32:2",
										"statements": [
											{
												"expression": {
													"id": 1821,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1791,
													"src": "1315:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1820,
												"id": 1822,
												"nodeType": "Return",
												"src": "1308:13:2"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "1169:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1251:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:2"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1288:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:9:2"
									},
									"scope": 1896,
									"src": "1242:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "1452:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1829,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1824,
																	"src": "1471:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1471:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1831,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "1482:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1482:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1471:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1496:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1463:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "1463:68:2"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1337:64:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1416:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:2:2"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:2"
									},
									"scope": 1896,
									"src": "1407:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "1944:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1982:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1974:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1845,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1974:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1974:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1844,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "1955:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "1955:30:2"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "1547:337:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "onlyOwner",
												"nameLocations": [
													"1934:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1815,
												"src": "1934:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1934:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1899:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:2"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:0:2"
									},
									"scope": 1896,
									"src": "1890:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "2218:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "2237:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2257:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1862,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2237:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2261:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "2229:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1871,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "2332:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1870,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "2313:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "2313:28:2"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "2001:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1857,
												"name": "onlyOwner",
												"nameLocations": [
													"2208:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1815,
												"src": "2208:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2208:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2157:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2183:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2175:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:18:2"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:0:2"
									},
									"scope": 1896,
									"src": "2148:201:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "2572:128:2",
										"statements": [
											{
												"assignments": [
													1882
												],
												"declarations": [
													{
														"constant": false,
														"id": 1882,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2591:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1894,
														"src": "2583:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1881,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2583:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"id": 1883,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1791,
													"src": "2602:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2583:25:2"
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1885,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "2619:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1886,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "2628:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2619:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "2619:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1890,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "2673:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "2683:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1889,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "2652:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "EmitStatement",
												"src": "2647:45:2"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "2357:146:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2518:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2545:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2537:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:18:2"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2572:0:2"
									},
									"scope": 1896,
									"src": "2509:191:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1897,
							"src": "672:2031:2",
							"usedErrors": [],
							"usedEvents": [
								1797
							]
						}
					],
					"src": "105:2598:2"
				},
				"id": 2
			},
			"contracts/contracts/interfaces/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2102
						]
					},
					"id": 2103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1898,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1899,
								"nodeType": "StructuredDocumentation",
								"src": "115:39:3",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2102,
							"linearizedBaseContracts": [
								2102
							],
							"name": "IERC721A",
							"nameLocation": "166:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "182:78:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1902,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "272:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:3"
									},
									"src": "266:42:3"
								},
								{
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "316:46:3",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1905,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "374:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:3"
									},
									"src": "368:41:3"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:3",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1908,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "496:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:3"
									},
									"src": "490:35:3"
								},
								{
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "533:53:3",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1911,
									"name": "MintToZeroAddress",
									"nameLocation": "598:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:3"
									},
									"src": "592:26:3"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "626:74:3",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1914,
									"name": "MintZeroQuantity",
									"nameLocation": "712:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:3"
									},
									"src": "706:25:3"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "739:46:3",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1917,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "797:29:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:3"
									},
									"src": "791:38:3"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "837:78:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1920,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "927:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:3"
									},
									"src": "921:42:3"
								},
								{
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "971:55:3",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1923,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1038:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:3"
									},
									"src": "1032:35:3"
								},
								{
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "1075:119:3",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1926,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1206:38:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:3"
									},
									"src": "1200:47:3"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "1255:57:3",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1929,
									"name": "TransferToZeroAddress",
									"nameLocation": "1324:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:3"
									},
									"src": "1318:30:3"
								},
								{
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "1356:46:3",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1932,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1414:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:3"
									},
									"src": "1408:36:3"
								},
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1452:81:3",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1935,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1545:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:3"
									},
									"src": "1539:40:3"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "1587:85:3",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1938,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1684:35:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:3"
									},
									"src": "1678:44:3"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1947,
									"members": [
										{
											"constant": false,
											"id": 1940,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1994:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "1986:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1939,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1986:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2101:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "2094:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1941,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2094:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1944,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2178:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "2173:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1943,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2173:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1946,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2291:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "2284:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1945,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2284:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1922:14:3",
									"nodeType": "StructDefinition",
									"scope": 2102,
									"src": "1915:393:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "2505:196:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2716:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:3"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "2753:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:9:3"
									},
									"scope": 2102,
									"src": "2707:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "2955:348:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3318:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3343:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3336:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:20:3"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3379:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:3"
									},
									"scope": 2102,
									"src": "3309:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "3578:90:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1970,
									"name": "Transfer",
									"nameLocation": "3680:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "3689:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "3711:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3747:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "3731:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:67:3"
									},
									"src": "3674:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "3764:96:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1979,
									"name": "Approval",
									"nameLocation": "3872:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3897:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "3881:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3920:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "3904:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3946:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "3930:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:74:3"
									},
									"src": "3866:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "3963:127:3",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1988,
									"name": "ApprovalForAll",
									"nameLocation": "4102:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4133:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "4117:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4156:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "4140:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4171:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "4166:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:64:3"
									},
									"src": "4096:85:3"
								},
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "4189:76:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4280:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4298:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4290:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:15:3"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4336:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4328:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:17:3"
									},
									"scope": 2102,
									"src": "4271:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "4353:137:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4505:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4521:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "4513:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:17:3"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "4553:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4552:15:3"
									},
									"scope": 2102,
									"src": "4496:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "4576:727:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5318:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5353:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "5345:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5376:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "5368:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5397:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "5389:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "5415:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:107:3"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:3"
									},
									"scope": 2102,
									"src": "5309:150:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "5467:82:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5564:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5599:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "5591:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5591:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5622:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "5614:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5643:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "5635:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:77:3"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5674:0:3"
									},
									"scope": 2102,
									"src": "5555:120:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "5683:527:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6225:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6256:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "6248:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6279:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "6271:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6271:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "6292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6292:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6237:77:3"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6331:0:3"
									},
									"scope": 2102,
									"src": "6216:116:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "6340:472:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6827:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6843:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "6835:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6835:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6855:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "6847:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:29:3"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6880:0:3"
									},
									"scope": 2102,
									"src": "6818:63:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "6889:326:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7230:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7256:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "7248:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7271:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "7266:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:34:3"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7290:0:3"
									},
									"scope": 2102,
									"src": "7221:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "7299:145:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7459:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7479:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "7471:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:17:3"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7519:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "7511:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7510:18:3"
									},
									"scope": 2102,
									"src": "7450:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "7537:143:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7695:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7720:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "7712:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7735:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "7727:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7711:33:3"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "7768:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7768:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:6:3"
									},
									"scope": 2102,
									"src": "7686:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "7971:60:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8046:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8050:2:3"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "8076:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8076:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8075:15:3"
									},
									"scope": 2102,
									"src": "8037:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "8099:62:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8176:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:2:3"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "8208:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8208:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8207:15:3"
									},
									"scope": 2102,
									"src": "8167:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "8231:92:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8338:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "8347:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8346:17:3"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "8387:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8387:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8386:15:3"
									},
									"scope": 2102,
									"src": "8329:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "8595:273:3",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2101,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8880:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8916:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8900:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8900:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8937:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8929:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8964:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8948:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8948:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8986:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8970:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8899:90:3"
									},
									"src": "8874:116:3"
								}
							],
							"scope": 2103,
							"src": "156:8837:3",
							"usedErrors": [
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926,
								1929,
								1932,
								1935,
								1938
							],
							"usedEvents": [
								1970,
								1979,
								1988,
								2101
							]
						}
					],
					"src": "88:8905:3"
				},
				"id": 3
			},
			"contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2124
						]
					},
					"id": 2125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2105,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2124,
							"linearizedBaseContracts": [
								2124
							],
							"name": "Context",
							"nameLocation": "641:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "718:36:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2110,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2109,
												"id": 2112,
												"nodeType": "Return",
												"src": "729:17:4"
											}
										]
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 2124,
									"src": "656:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "829:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2119,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2118,
												"id": 2121,
												"nodeType": "Return",
												"src": "840:15:4"
											}
										]
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:4"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "813:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:4"
									},
									"scope": 2124,
									"src": "762:101:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2125,
							"src": "623:243:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "89:777:4"
				},
				"id": 4
			}
		}
	}
}